
nios.elf:     file format elf32-littlenios2
nios.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000224

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000fb64 memsz 0x0000fb64 flags r-x
    LOAD off    0x00010b84 vaddr 0x0000fb84 paddr 0x000117fc align 2**12
         filesz 0x00001c78 memsz 0x00001c78 flags rw-
    LOAD off    0x00013474 vaddr 0x00013474 paddr 0x00013474 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000204  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f294  00000224  00000224  00001224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000006cc  0000f4b8  0000f4b8  000104b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c78  0000fb84  000117fc  00010b84  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00013474  00013474  00013474  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  000135d4  000135d4  000127fc  2**0
                  CONTENTS
  7 .comment      0000002c  00000000  00000000  000127fc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ee8  00000000  00000000  00012828  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000469c1  00000000  00000000  00013710  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000e361  00000000  00000000  0005a0d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0001758b  00000000  00000000  00068432  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002048  00000000  00000000  0007f9c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003f58  00000000  00000000  00081a08  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001c425  00000000  00000000  00085960  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000a1d88  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001c38  00000000  00000000  000a1d98  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000a6abb  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000a6abe  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000a6aca  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000a6acb  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  000a6acc  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  000a6ad7  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000a6ae2  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000c  00000000  00000000  000a6aed  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000045  00000000  00000000  000a6af9  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000224 l    d  .text	00000000 .text
0000f4b8 l    d  .rodata	00000000 .rodata
0000fb84 l    d  .rwdata	00000000 .rwdata
00013474 l    d  .bss	00000000 .bss
000135d4 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/nothi/FINALPROJECT/ECE541FinalProject/FinalProject/synthesis/software/nios_bsp//obj/HAL/src/crt0.o
0000025c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
0000fb84 l     O .rwdata	00000040 flowers.2610
0000fbc4 l     O .rwdata	00000040 strs.2617
0000fc04 l     O .rwdata	0000000c hardcoded.2618
00013478 l     O .bss	00000004 attributes.2619
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000029d0 l     F .text	000000c0 __sbprintf
0000f656 l     O .rodata	00000010 blanks.5226
0000f646 l     O .rodata	00000010 zeroes.5227
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002bf0 l     F .text	00000234 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0000479c l     F .text	00000008 __fp_lock
000047b0 l     F .text	00000168 __sinit.part.0
00004918 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000fc10 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f678 l     O .rodata	0000000c p05.4024
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007a98 l     F .text	000000f4 __sprint_r.part.0
00008ef8 l     F .text	000000c0 __sbprintf
0000f7ac l     O .rodata	00000010 blanks.5203
0000f79c l     O .rodata	00000010 zeroes.5204
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000cf40 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d058 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d084 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d17c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d268 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d354 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d534 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000117ec l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000d798 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000d8d8 l     F .text	00000034 alt_dev_reg
00010750 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000dbb0 l     F .text	00000204 altera_avalon_jtag_uart_irq
0000ddb4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e53c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000e990 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000eae0 l     F .text	0000003c alt_get_errno
0000eb1c l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000134a8 g     O .bss	00000004 alt_instruction_exception_handler
00007180 g     F .text	00000074 _mprec_log10
00007260 g     F .text	00000074 __any_on
00009498 g     F .text	00000058 _isatty_r
0000f684 g     O .rodata	00000028 __mprec_tinytens
0000d470 g     F .text	0000007c alt_main
000006bc g     F .text	000000cc _puts_r
000134d4 g     O .bss	00000100 alt_irq
00009580 g     F .text	00000064 _lseek_r
000117fc g       *ABS*	00000000 __flash_rwdata_start
0000b908 g     F .text	00000080 .hidden __eqdf2
000135d4 g       *ABS*	00000000 __alt_heap_start
00000684 g     F .text	00000038 printf
000098cc g     F .text	0000006c _wcrtomb_r
000002ac g     F .text	000000a4 printClassificationResult
00007a34 g     F .text	0000005c __sseek
00004aa8 g     F .text	00000010 __sinit
00009770 g     F .text	00000148 __swbuf_r
000094f0 g     F .text	00000070 _setlocale_r
00004920 g     F .text	00000078 __sfmoreglue
0000d510 g     F .text	00000024 __malloc_unlock
00006104 g     F .text	0000012c memmove
00004a94 g     F .text	00000014 _cleanup
00006320 g     F .text	000000a4 _Balloc
0000b988 g     F .text	000000f0 .hidden __gtdf2
0000eefc g     F .text	00000024 altera_nios2_gen2_irq_init
00000350 g     F .text	000000c4 getAttributesFromUser
00000000 g     F .entry	0000000c __reset
00005534 g     F .text	00000008 __localeconv_l
00000020 g       *ABS*	00000000 __flash_exceptions_start
00009438 g     F .text	00000060 _fstat_r
00013488 g     O .bss	00000004 errno
000079ac g     F .text	00000008 __seofread
00013494 g     O .bss	00000004 alt_argv
000197b0 g       *ABS*	00000000 _gp
000105d0 g     O .rwdata	00000180 alt_fd_list
00000260 g     F .text	0000004c resolveToFlower
0000ef20 g     F .text	00000090 alt_find_dev
00006004 g     F .text	00000100 memcpy
000047a4 g     F .text	0000000c _cleanup_r
0000cd88 g     F .text	000000c8 .hidden __floatsidf
0000ea64 g     F .text	0000007c alt_io_redirect
0000ba78 g     F .text	000000f0 .hidden __ltdf2
0000f4b8 g       *ABS*	00000000 __DTOR_END__
00000788 g     F .text	00000010 puts
0000f170 g     F .text	00000098 alt_exception_cause_generated_bad_addr
000070dc g     F .text	000000a4 __ratio
00008ee0 g     F .text	00000018 __vfiprintf_internal
0000dfb0 g     F .text	0000021c altera_avalon_jtag_uart_read
00000654 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
00000594 g     F .text	00000064 .hidden __udivsi3
0000d1b8 g     F .text	000000b0 isatty
0000f6d4 g     O .rodata	000000c8 __mprec_tens
00013484 g     O .bss	00000004 __malloc_top_pad
0000553c g     F .text	0000000c _localeconv_r
00006748 g     F .text	00000034 __i2b
00004f08 g     F .text	000004d4 __sfvwrite_r
00007900 g     F .text	00000058 _sbrk_r
00009634 g     F .text	00000064 _read_r
000117e4 g     O .rwdata	00000004 alt_max_fd
00009140 g     F .text	000000f8 _fclose_r
00004774 g     F .text	00000028 fflush
00013480 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a604 g     F .text	000009a0 .hidden __adddf3
00006e90 g     F .text	00000104 __b2d
0000a014 g     F .text	000005c8 .hidden __umoddi3
0000d390 g     F .text	000000e0 lseek
000117c4 g     O .rwdata	00000004 _global_impure_ptr
000072d4 g     F .text	0000062c _realloc_r
000135d4 g       *ABS*	00000000 __bss_end
0000e8ac g     F .text	000000e4 alt_iic_isr_register
0000edf4 g     F .text	00000108 alt_tick
000099f8 g     F .text	0000061c .hidden __udivdi3
00009398 g     F .text	00000024 _fputwc_r
0000f6ac g     O .rodata	00000028 __mprec_bigtens
00006524 g     F .text	00000110 __s2b
0000ce50 g     F .text	0000009c .hidden __floatunsidf
00006c20 g     F .text	00000058 __mcmp
00004ac8 g     F .text	00000014 __fp_lock_all
0000e860 g     F .text	0000004c alt_ic_irq_enabled
0000ed58 g     F .text	0000009c alt_alarm_stop
0001349c g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000c8 alt_irq_handler
000105a8 g     O .rwdata	00000028 alt_dev_null
0000e51c g     F .text	00000020 alt_dcache_flush_all
00006634 g     F .text	00000064 __hi0bits
0000cd08 g     F .text	00000080 .hidden __fixdfsi
000117fc g       *ABS*	00000000 __ram_rwdata_end
000117dc g     O .rwdata	00000008 alt_dev_list
0000d7d4 g     F .text	00000104 write
0000fb84 g       *ABS*	00000000 __ram_rodata_end
0000d0c0 g     F .text	000000bc fstat
0000ba78 g     F .text	000000f0 .hidden __ledf2
000069bc g     F .text	00000128 __pow5mult
00007ba4 g     F .text	0000133c ___vfiprintf_internal_r
000005f8 g     F .text	0000005c .hidden __umodsi3
000135d4 g       *ABS*	00000000 end
000117b0 g     O .rwdata	00000004 leds
0000daf0 g     F .text	000000c0 altera_avalon_jtag_uart_init
000001c4 g     F .exceptions	00000060 alt_instruction_exception_entry
0000f4b8 g       *ABS*	00000000 __CTOR_LIST__
0001f400 g       *ABS*	00000000 __alt_stack_pointer
0000ceec g     F .text	00000054 .hidden __clzsi2
0000e1cc g     F .text	00000224 altera_avalon_jtag_uart_write
00004ab8 g     F .text	00000004 __sfp_lock_acquire
00005f1c g     F .text	000000e8 memchr
00000830 g     F .text	00002188 ___vfprintf_internal_r
00004c0c g     F .text	000002fc _free_r
0000f8cd g     O .rodata	00000180 _ctype_b
00009560 g     F .text	0000000c __locale_mb_cur_max
00013474 g     O .bss	00000004 aIndex
0000f36c g     F .text	00000118 __call_exitprocs
000117cc g     O .rwdata	00000004 __malloc_sbrk_base
00000224 g     F .text	0000003c _start
000134a0 g     O .bss	00000004 _alt_tick_rate
00006ae4 g     F .text	0000013c __lshift
000134a4 g     O .bss	00000004 _alt_nticks
0000d570 g     F .text	00000108 read
0000d944 g     F .text	00000048 alt_sys_init
000117b8 g     O .rwdata	00000004 btns
0000f2dc g     F .text	00000090 __register_exitproc
0000677c g     F .text	00000240 __multiply
0000de54 g     F .text	00000068 altera_avalon_jtag_uart_close
0000a5dc g     F .text	00000028 .hidden __mulsi3
0000fb84 g       *ABS*	00000000 __ram_rwdata_start
0000f4b8 g       *ABS*	00000000 __ram_rodata_start
000134ac g     O .bss	00000028 __malloc_current_mallinfo
00006f94 g     F .text	00000148 __d2b
0000d98c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f0b8 g     F .text	000000b8 alt_get_fd
0000901c g     F .text	00000058 _close_r
0000f250 g     F .text	0000008c memcmp
0000da4c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000135d4 g       *ABS*	00000000 __alt_stack_base
0000da9c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00002a90 g     F .text	00000160 __swsetup_r
0000afa4 g     F .text	00000964 .hidden __divdf3
00004998 g     F .text	000000fc __sfp
000071f4 g     F .text	0000006c __copybits
00010034 g     O .rwdata	00000408 __malloc_av_
00004ac4 g     F .text	00000004 __sinit_lock_release
0000bb68 g     F .text	000007e0 .hidden __muldf3
00007958 g     F .text	00000054 __sread
000117bc g     O .rwdata	00000004 nios_input
0000efb0 g     F .text	00000108 alt_find_file
0000e578 g     F .text	000000a4 alt_dev_llist_insert
0000d4ec g     F .text	00000024 __malloc_lock
0000d6e8 g     F .text	000000b0 sbrk
00004714 g     F .text	00000060 _fflush_r
00009074 g     F .text	000000cc _calloc_r
00013474 g       *ABS*	00000000 __bss_start
00006230 g     F .text	000000f0 memset
000117c0 g     O .rwdata	00000004 nios_output
00000414 g     F .text	00000088 main
00013498 g     O .bss	00000004 alt_envp
0001347c g     O .bss	00000004 __malloc_max_total_mem
0000d9ec g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000098b8 g     F .text	00000014 __swbuf
00007a90 g     F .text	00000008 __sclose
0001f400 g       *ABS*	00000000 __alt_heap_limit
00009238 g     F .text	00000010 fclose
00002e24 g     F .text	000016c8 _dtoa_r
00005728 g     F .text	000007f4 _malloc_r
000099c8 g     F .text	00000030 __ascii_wctomb
000117e8 g     O .rwdata	00000004 alt_errno
000053dc g     F .text	000000a4 _fwalk
000095e4 g     F .text	0000000c _mbtowc_r
0000049c g     F .text	00000080 .hidden __divsi3
00004af0 g     F .text	0000011c _malloc_trim_r
0000f4b8 g       *ABS*	00000000 __CTOR_END__
00009698 g     F .text	000000d8 strcmp
0000f4b8 g       *ABS*	00000000 __flash_rodata_start
0000f4b8 g       *ABS*	00000000 __DTOR_LIST__
0000b908 g     F .text	00000080 .hidden __nedf2
0000d90c g     F .text	00000038 alt_irq_init
0000d678 g     F .text	00000070 alt_release_fd
0000fa4d g     O .rodata	00000100 .hidden __clz_tab
0001348c g     O .bss	00000004 _PathLocale
0000f208 g     F .text	00000014 atexit
00008fb8 g     F .text	00000064 _write_r
0000956c g     F .text	00000014 setlocale
000117c8 g     O .rwdata	00000004 _impure_ptr
00013490 g     O .bss	00000004 alt_argc
000044ec g     F .text	00000228 __sflush_r
0000e67c g     F .text	00000060 _do_dtors
000117b4 g     O .rwdata	00000004 sw
00000020 g       .exceptions	00000000 alt_irq_entry
000095f0 g     F .text	00000044 __ascii_mbtowc
00006e34 g     F .text	0000005c __ulp
00004adc g     F .text	00000014 __fp_unlock_all
000117d4 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00005548 g     F .text	0000000c localeconv
00005554 g     F .text	00000098 __swhatbuf_r
0000e6fc g     F .text	00000050 alt_ic_isr_register
000117fc g       *ABS*	00000000 _edata
000135d4 g       *ABS*	00000000 _end
00009248 g     F .text	00000150 __fputwc
00000224 g       *ABS*	00000000 __ram_exceptions_end
0000debc g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0000e7d4 g     F .text	0000008c alt_ic_irq_disable
000079b4 g     F .text	00000080 __swrite
000117d0 g     O .rwdata	00000004 __malloc_trim_threshold
0000f21c g     F .text	00000034 exit
00005480 g     F .text	000000b4 _fwalk_reent
00006c78 g     F .text	000001bc __mdiff
0000051c g     F .text	00000078 .hidden __modsi3
0001f400 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004abc g     F .text	00000004 __sfp_lock_release
0000f7cc g     O .rodata	00000101 _ctype_
0000ccb4 g     F .text	00000054 .hidden __unorddf2
0000f484 g     F .text	00000034 _exit
0000e3f0 g     F .text	0000012c alt_alarm_start
000055ec g     F .text	0000013c __smakebuf_r
00000798 g     F .text	00000098 strlen
0000ebf8 g     F .text	00000160 open
0000b988 g     F .text	000000f0 .hidden __gedf2
00007b8c g     F .text	00000018 __sprint_r
0000e6dc g     F .text	00000020 alt_icache_flush_all
000117f0 g     O .rwdata	00000004 alt_priority_mask
0000e74c g     F .text	00000088 alt_ic_irq_enable
000029b8 g     F .text	00000018 __vfprintf_internal
000099bc g     F .text	0000000c _wctomb_r
0000c348 g     F .text	0000096c .hidden __subdf3
00006698 g     F .text	000000b0 __lo0bits
000117f4 g     O .rwdata	00000008 alt_alarm_list
0000e61c g     F .text	00000060 _do_ctors
00009938 g     F .text	00000084 wcrtomb
0000cf7c g     F .text	000000dc close
0001043c g     O .rwdata	0000016c __global_locale
0000d2d0 g     F .text	00000084 alt_load
000093bc g     F .text	0000007c fputwc
00004ac0 g     F .text	00000004 __sinit_lock_acquire
000063e8 g     F .text	0000013c __multadd
000063c4 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408914 	ori	at,at,548
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001c40 	call	1c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffc15 	stw	r2,-16(fp)

  return active;
 118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0ffff17 	ldw	r3,-4(fp)
 130:	e0bffe17 	ldw	r2,-8(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001126 	beq	r2,zero,180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	e0bffd17 	ldw	r2,-12(fp)
 140:	100690fa 	slli	r3,r2,3
 144:	00800074 	movhi	r2,1
 148:	1885883a 	add	r2,r3,r2
 14c:	10cd3517 	ldw	r3,13524(r2)
 150:	e0bffd17 	ldw	r2,-12(fp)
 154:	100890fa 	slli	r4,r2,3
 158:	00800074 	movhi	r2,1
 15c:	2085883a 	add	r2,r4,r2
 160:	108d3617 	ldw	r2,13528(r2)
 164:	1009883a 	mov	r4,r2
 168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 16c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
 170:	0005313a 	rdctl	r2,ipending
 174:	e0bffb15 	stw	r2,-20(fp)
  return active;
 178:	e0bffb17 	ldw	r2,-20(fp)
 17c:	00000706 	br	19c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
 180:	e0bffe17 	ldw	r2,-8(fp)
 184:	1085883a 	add	r2,r2,r2
 188:	e0bffe15 	stw	r2,-8(fp)
      i++;
 18c:	e0bffd17 	ldw	r2,-12(fp)
 190:	10800044 	addi	r2,r2,1
 194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
 198:	003fe406 	br	12c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
 19c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
 1a0:	e0bfff17 	ldw	r2,-4(fp)
 1a4:	103fde1e 	bne	r2,zero,120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a8:	0001883a 	nop
}
 1ac:	0001883a 	nop
 1b0:	e037883a 	mov	sp,fp
 1b4:	dfc00117 	ldw	ra,4(sp)
 1b8:	df000017 	ldw	fp,0(sp)
 1bc:	dec00204 	addi	sp,sp,8
 1c0:	f800283a 	ret

000001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1c4:	defffb04 	addi	sp,sp,-20
 1c8:	dfc00415 	stw	ra,16(sp)
 1cc:	df000315 	stw	fp,12(sp)
 1d0:	df000304 	addi	fp,sp,12
 1d4:	e13ffd15 	stw	r4,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1d8:	00bfffc4 	movi	r2,-1
 1dc:	e0bfff15 	stw	r2,-4(fp)
  badaddr = 0;
 1e0:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1e4:	d0a73e17 	ldw	r2,-25352(gp)
 1e8:	10000726 	beq	r2,zero,208 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1ec:	d0a73e17 	ldw	r2,-25352(gp)
 1f0:	e0ffff17 	ldw	r3,-4(fp)
 1f4:	e1bffe17 	ldw	r6,-8(fp)
 1f8:	e17ffd17 	ldw	r5,-12(fp)
 1fc:	1809883a 	mov	r4,r3
 200:	103ee83a 	callr	r2
 204:	00000206 	br	210 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 208:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 20c:	0005883a 	mov	r2,zero
}
 210:	e037883a 	mov	sp,fp
 214:	dfc00117 	ldw	ra,4(sp)
 218:	df000017 	ldw	fp,0(sp)
 21c:	dec00204 	addi	sp,sp,8
 220:	f800283a 	ret

Disassembly of section .text:

00000224 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     224:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
     228:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
     22c:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     230:	d6a5ec14 	ori	gp,gp,38832
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     234:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     238:	108d1d14 	ori	r2,r2,13428

    movhi r3, %hi(__bss_end)
     23c:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     240:	18cd7514 	ori	r3,r3,13780

    beq r2, r3, 1f
     244:	10c00326 	beq	r2,r3,254 <_start+0x30>

0:
    stw zero, (r2)
     248:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     24c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     250:	10fffd36 	bltu	r2,r3,248 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     254:	000d2d00 	call	d2d0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     258:	000d4700 	call	d470 <alt_main>

0000025c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     25c:	003fff06 	br	25c <alt_after_alt_main>

00000260 <resolveToFlower>:
//General 32 bit output @ 0x21000
uint *nios_output = (uint*)0x21000;

uint aIndex = 0;

char* resolveToFlower(uint flower) {
     260:	defffe04 	addi	sp,sp,-8
     264:	df000115 	stw	fp,4(sp)
     268:	df000104 	addi	fp,sp,4
     26c:	e13fff15 	stw	r4,-4(fp)
	static char flowers[][16] = { "Iris-setosa", "Iris-versicolor", "Iris-virginica", "uh oh" };
	return flower > 2 ? flowers[3] : flowers[flower];
     270:	e0bfff17 	ldw	r2,-4(fp)
     274:	108000e8 	cmpgeui	r2,r2,3
     278:	1000061e 	bne	r2,zero,294 <resolveToFlower+0x34>
     27c:	e0bfff17 	ldw	r2,-4(fp)
     280:	1006913a 	slli	r3,r2,4
     284:	00800074 	movhi	r2,1
     288:	10bee104 	addi	r2,r2,-1148
     28c:	1885883a 	add	r2,r3,r2
     290:	00000206 	br	29c <resolveToFlower+0x3c>
     294:	00800074 	movhi	r2,1
     298:	10beed04 	addi	r2,r2,-1100
}
     29c:	e037883a 	mov	sp,fp
     2a0:	df000017 	ldw	fp,0(sp)
     2a4:	dec00104 	addi	sp,sp,4
     2a8:	f800283a 	ret

000002ac <printClassificationResult>:

void printClassificationResult() {
     2ac:	defffb04 	addi	sp,sp,-20
     2b0:	dfc00415 	stw	ra,16(sp)
     2b4:	df000315 	stw	fp,12(sp)
     2b8:	dc000215 	stw	r16,8(sp)
     2bc:	df000304 	addi	fp,sp,12
	uint actual = 0xFF & *nios_input;
     2c0:	d0a00317 	ldw	r2,-32756(gp)
     2c4:	10800017 	ldw	r2,0(r2)
     2c8:	10803fcc 	andi	r2,r2,255
     2cc:	e0bffe15 	stw	r2,-8(fp)
    uint classified = 0xFF & (*nios_input >> 8);
     2d0:	d0a00317 	ldw	r2,-32756(gp)
     2d4:	10800017 	ldw	r2,0(r2)
     2d8:	1004d23a 	srli	r2,r2,8
     2dc:	10803fcc 	andi	r2,r2,255
     2e0:	e0bffd15 	stw	r2,-12(fp)

	if (actual == classified) {
     2e4:	e0fffe17 	ldw	r3,-8(fp)
     2e8:	e0bffd17 	ldw	r2,-12(fp)
     2ec:	1880041e 	bne	r3,r2,300 <printClassificationResult+0x54>
		printf("Classification correct!\n");
     2f0:	01000074 	movhi	r4,1
     2f4:	213d2e04 	addi	r4,r4,-2888
     2f8:	00007880 	call	788 <puts>
     2fc:	00000306 	br	30c <printClassificationResult+0x60>
	} else {
		printf("Classification wrong. :(\n");
     300:	01000074 	movhi	r4,1
     304:	213d3404 	addi	r4,r4,-2864
     308:	00007880 	call	788 <puts>
	}

	printf("Actual: %s\nClassified as: %s\n\n", resolveToFlower(actual), resolveToFlower(classified));
     30c:	e13ffe17 	ldw	r4,-8(fp)
     310:	00002600 	call	260 <resolveToFlower>
     314:	1021883a 	mov	r16,r2
     318:	e13ffd17 	ldw	r4,-12(fp)
     31c:	00002600 	call	260 <resolveToFlower>
     320:	100d883a 	mov	r6,r2
     324:	800b883a 	mov	r5,r16
     328:	01000074 	movhi	r4,1
     32c:	213d3b04 	addi	r4,r4,-2836
     330:	00006840 	call	684 <printf>
}
     334:	0001883a 	nop
     338:	e6ffff04 	addi	sp,fp,-4
     33c:	dfc00217 	ldw	ra,8(sp)
     340:	df000117 	ldw	fp,4(sp)
     344:	dc000017 	ldw	r16,0(sp)
     348:	dec00304 	addi	sp,sp,12
     34c:	f800283a 	ret

00000350 <getAttributesFromUser>:

char* getAttributesFromUser() {
     350:	defffc04 	addi	sp,sp,-16
     354:	dfc00315 	stw	ra,12(sp)
     358:	df000215 	stw	fp,8(sp)
     35c:	df000204 	addi	fp,sp,8
    static char strs[][16] = { "Sepal length", "Sepal width", "Petal length", "Petal width" };
    static char hardcoded[3][4] = { { 51, 35 ,14 , 2 }, { 70, 32, 47, 14 }, { 63, 33, 60, 25 } };
    static char attributes[4];

    printf("An Iris flower can be described using 4 attributes: sepal length and width, and petal length and width.\nPlease enter the 4 attributes in millimeters between 0 and 255.\n\n");
     360:	01000074 	movhi	r4,1
     364:	213d4304 	addi	r4,r4,-2804
     368:	00007880 	call	788 <puts>

    for (int i = 0; i < 4; i++) {
     36c:	e03fff15 	stw	zero,-4(fp)
     370:	00001f06 	br	3f0 <getAttributesFromUser+0xa0>
        printf("%s: ", strs[i]);
     374:	e0bfff17 	ldw	r2,-4(fp)
     378:	1006913a 	slli	r3,r2,4
     37c:	00800074 	movhi	r2,1
     380:	10bef104 	addi	r2,r2,-1084
     384:	1885883a 	add	r2,r3,r2
     388:	100b883a 	mov	r5,r2
     38c:	01000074 	movhi	r4,1
     390:	213d6e04 	addi	r4,r4,-2632
     394:	00006840 	call	684 <printf>

        char buf[4];
        //fgets(buf, 4, stdin);
        printf("You entered: %s\n", buf);
     398:	e0bffe04 	addi	r2,fp,-8
     39c:	100b883a 	mov	r5,r2
     3a0:	01000074 	movhi	r4,1
     3a4:	213d7004 	addi	r4,r4,-2624
     3a8:	00006840 	call	684 <printf>
        attributes[i] = hardcoded[aIndex % 3][i];
     3ac:	d0a73117 	ldw	r2,-25404(gp)
     3b0:	014000c4 	movi	r5,3
     3b4:	1009883a 	mov	r4,r2
     3b8:	00005f80 	call	5f8 <__umodsi3>
     3bc:	100690ba 	slli	r3,r2,2
     3c0:	e0bfff17 	ldw	r2,-4(fp)
     3c4:	1887883a 	add	r3,r3,r2
     3c8:	00800074 	movhi	r2,1
     3cc:	1885883a 	add	r2,r3,r2
     3d0:	10ff0103 	ldbu	r3,-1020(r2)
     3d4:	e13fff17 	ldw	r4,-4(fp)
     3d8:	d0a73204 	addi	r2,gp,-25400
     3dc:	2085883a 	add	r2,r4,r2
     3e0:	10c00005 	stb	r3,0(r2)
    for (int i = 0; i < 4; i++) {
     3e4:	e0bfff17 	ldw	r2,-4(fp)
     3e8:	10800044 	addi	r2,r2,1
     3ec:	e0bfff15 	stw	r2,-4(fp)
     3f0:	e0bfff17 	ldw	r2,-4(fp)
     3f4:	10800110 	cmplti	r2,r2,4
     3f8:	103fde1e 	bne	r2,zero,374 <getAttributesFromUser+0x24>
    }

    return attributes;
     3fc:	d0a73204 	addi	r2,gp,-25400
}
     400:	e037883a 	mov	sp,fp
     404:	dfc00117 	ldw	ra,4(sp)
     408:	df000017 	ldw	fp,0(sp)
     40c:	dec00204 	addi	sp,sp,8
     410:	f800283a 	ret

00000414 <main>:

int main()
{
     414:	defffc04 	addi	sp,sp,-16
     418:	dfc00315 	stw	ra,12(sp)
     41c:	df000215 	stw	fp,8(sp)
     420:	df000204 	addi	fp,sp,8
    //unsigned char *mem = mmap((void *)0x21000, 0x10, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
    //unsigned int *nios_output = (unsigned int*)mem;


    printf("%d", *nios_output);
     424:	d0a00417 	ldw	r2,-32752(gp)
     428:	10800017 	ldw	r2,0(r2)
     42c:	100b883a 	mov	r5,r2
     430:	01000074 	movhi	r4,1
     434:	213d7504 	addi	r4,r4,-2604
     438:	00006840 	call	684 <printf>

	printf("Nios2 processor started.\n");
     43c:	01000074 	movhi	r4,1
     440:	213d7604 	addi	r4,r4,-2600
     444:	00007880 	call	788 <puts>

    for(;;) {
        uint state = 0xFF & (*nios_input >> 24);
     448:	d0a00317 	ldw	r2,-32756(gp)
     44c:	10800017 	ldw	r2,0(r2)
     450:	1004d63a 	srli	r2,r2,24
     454:	e0bfff15 	stw	r2,-4(fp)
        printf("state: %d", state);
     458:	e17fff17 	ldw	r5,-4(fp)
     45c:	01000074 	movhi	r4,1
     460:	213d7d04 	addi	r4,r4,-2572
     464:	00006840 	call	684 <printf>

        if (state == 4) { //state to get user input from console
     468:	e0bfff17 	ldw	r2,-4(fp)
     46c:	10800118 	cmpnei	r2,r2,4
     470:	103ff51e 	bne	r2,zero,448 <main+0x34>
            char *a = getAttributesFromUser();
     474:	00003500 	call	350 <getAttributesFromUser>
     478:	e0bffe15 	stw	r2,-8(fp)
            aIndex++;
     47c:	d0a73117 	ldw	r2,-25404(gp)
     480:	10800044 	addi	r2,r2,1
     484:	d0a73115 	stw	r2,-25404(gp)
            *nios_output = *((int*)a);
     488:	e0bffe17 	ldw	r2,-8(fp)
     48c:	10c00017 	ldw	r3,0(r2)
     490:	d0a00417 	ldw	r2,-32752(gp)
     494:	10c00015 	stw	r3,0(r2)
    for(;;) {
     498:	003feb06 	br	448 <main+0x34>

0000049c <__divsi3>:
     49c:	20001a16 	blt	r4,zero,508 <__divsi3+0x6c>
     4a0:	000f883a 	mov	r7,zero
     4a4:	2800020e 	bge	r5,zero,4b0 <__divsi3+0x14>
     4a8:	014bc83a 	sub	r5,zero,r5
     4ac:	39c0005c 	xori	r7,r7,1
     4b0:	200d883a 	mov	r6,r4
     4b4:	00c00044 	movi	r3,1
     4b8:	2900092e 	bgeu	r5,r4,4e0 <__divsi3+0x44>
     4bc:	00800804 	movi	r2,32
     4c0:	00c00044 	movi	r3,1
     4c4:	00000106 	br	4cc <__divsi3+0x30>
     4c8:	10001226 	beq	r2,zero,514 <__divsi3+0x78>
     4cc:	294b883a 	add	r5,r5,r5
     4d0:	10bfffc4 	addi	r2,r2,-1
     4d4:	18c7883a 	add	r3,r3,r3
     4d8:	293ffb36 	bltu	r5,r4,4c8 <__divsi3+0x2c>
     4dc:	18000d26 	beq	r3,zero,514 <__divsi3+0x78>
     4e0:	0005883a 	mov	r2,zero
     4e4:	31400236 	bltu	r6,r5,4f0 <__divsi3+0x54>
     4e8:	314dc83a 	sub	r6,r6,r5
     4ec:	10c4b03a 	or	r2,r2,r3
     4f0:	1806d07a 	srli	r3,r3,1
     4f4:	280ad07a 	srli	r5,r5,1
     4f8:	183ffa1e 	bne	r3,zero,4e4 <__divsi3+0x48>
     4fc:	38000126 	beq	r7,zero,504 <__divsi3+0x68>
     500:	0085c83a 	sub	r2,zero,r2
     504:	f800283a 	ret
     508:	0109c83a 	sub	r4,zero,r4
     50c:	01c00044 	movi	r7,1
     510:	003fe406 	br	4a4 <__divsi3+0x8>
     514:	0005883a 	mov	r2,zero
     518:	003ff806 	br	4fc <__divsi3+0x60>

0000051c <__modsi3>:
     51c:	20001a16 	blt	r4,zero,588 <__modsi3+0x6c>
     520:	000f883a 	mov	r7,zero
     524:	2005883a 	mov	r2,r4
     528:	2800010e 	bge	r5,zero,530 <__modsi3+0x14>
     52c:	014bc83a 	sub	r5,zero,r5
     530:	00c00044 	movi	r3,1
     534:	2900092e 	bgeu	r5,r4,55c <__modsi3+0x40>
     538:	01800804 	movi	r6,32
     53c:	00c00044 	movi	r3,1
     540:	00000106 	br	548 <__modsi3+0x2c>
     544:	30000d26 	beq	r6,zero,57c <__modsi3+0x60>
     548:	294b883a 	add	r5,r5,r5
     54c:	31bfffc4 	addi	r6,r6,-1
     550:	18c7883a 	add	r3,r3,r3
     554:	293ffb36 	bltu	r5,r4,544 <__modsi3+0x28>
     558:	18000826 	beq	r3,zero,57c <__modsi3+0x60>
     55c:	1806d07a 	srli	r3,r3,1
     560:	11400136 	bltu	r2,r5,568 <__modsi3+0x4c>
     564:	1145c83a 	sub	r2,r2,r5
     568:	280ad07a 	srli	r5,r5,1
     56c:	183ffb1e 	bne	r3,zero,55c <__modsi3+0x40>
     570:	38000126 	beq	r7,zero,578 <__modsi3+0x5c>
     574:	0085c83a 	sub	r2,zero,r2
     578:	f800283a 	ret
     57c:	2005883a 	mov	r2,r4
     580:	383ffd26 	beq	r7,zero,578 <__modsi3+0x5c>
     584:	003ffb06 	br	574 <__modsi3+0x58>
     588:	0109c83a 	sub	r4,zero,r4
     58c:	01c00044 	movi	r7,1
     590:	003fe406 	br	524 <__modsi3+0x8>

00000594 <__udivsi3>:
     594:	200d883a 	mov	r6,r4
     598:	2900152e 	bgeu	r5,r4,5f0 <__udivsi3+0x5c>
     59c:	28001416 	blt	r5,zero,5f0 <__udivsi3+0x5c>
     5a0:	00800804 	movi	r2,32
     5a4:	00c00044 	movi	r3,1
     5a8:	00000206 	br	5b4 <__udivsi3+0x20>
     5ac:	10000e26 	beq	r2,zero,5e8 <__udivsi3+0x54>
     5b0:	28000516 	blt	r5,zero,5c8 <__udivsi3+0x34>
     5b4:	294b883a 	add	r5,r5,r5
     5b8:	10bfffc4 	addi	r2,r2,-1
     5bc:	18c7883a 	add	r3,r3,r3
     5c0:	293ffa36 	bltu	r5,r4,5ac <__udivsi3+0x18>
     5c4:	18000826 	beq	r3,zero,5e8 <__udivsi3+0x54>
     5c8:	0005883a 	mov	r2,zero
     5cc:	31400236 	bltu	r6,r5,5d8 <__udivsi3+0x44>
     5d0:	314dc83a 	sub	r6,r6,r5
     5d4:	10c4b03a 	or	r2,r2,r3
     5d8:	1806d07a 	srli	r3,r3,1
     5dc:	280ad07a 	srli	r5,r5,1
     5e0:	183ffa1e 	bne	r3,zero,5cc <__udivsi3+0x38>
     5e4:	f800283a 	ret
     5e8:	0005883a 	mov	r2,zero
     5ec:	f800283a 	ret
     5f0:	00c00044 	movi	r3,1
     5f4:	003ff406 	br	5c8 <__udivsi3+0x34>

000005f8 <__umodsi3>:
     5f8:	2005883a 	mov	r2,r4
     5fc:	2900132e 	bgeu	r5,r4,64c <__umodsi3+0x54>
     600:	28001216 	blt	r5,zero,64c <__umodsi3+0x54>
     604:	01800804 	movi	r6,32
     608:	00c00044 	movi	r3,1
     60c:	00000206 	br	618 <__umodsi3+0x20>
     610:	30000c26 	beq	r6,zero,644 <__umodsi3+0x4c>
     614:	28000516 	blt	r5,zero,62c <__umodsi3+0x34>
     618:	294b883a 	add	r5,r5,r5
     61c:	31bfffc4 	addi	r6,r6,-1
     620:	18c7883a 	add	r3,r3,r3
     624:	293ffa36 	bltu	r5,r4,610 <__umodsi3+0x18>
     628:	18000626 	beq	r3,zero,644 <__umodsi3+0x4c>
     62c:	1806d07a 	srli	r3,r3,1
     630:	11400136 	bltu	r2,r5,638 <__umodsi3+0x40>
     634:	1145c83a 	sub	r2,r2,r5
     638:	280ad07a 	srli	r5,r5,1
     63c:	183ffb1e 	bne	r3,zero,62c <__umodsi3+0x34>
     640:	f800283a 	ret
     644:	2005883a 	mov	r2,r4
     648:	f800283a 	ret
     64c:	00c00044 	movi	r3,1
     650:	003ff606 	br	62c <__umodsi3+0x34>

00000654 <_printf_r>:
     654:	defffd04 	addi	sp,sp,-12
     658:	2805883a 	mov	r2,r5
     65c:	dfc00015 	stw	ra,0(sp)
     660:	d9800115 	stw	r6,4(sp)
     664:	d9c00215 	stw	r7,8(sp)
     668:	21400217 	ldw	r5,8(r4)
     66c:	d9c00104 	addi	r7,sp,4
     670:	100d883a 	mov	r6,r2
     674:	00008300 	call	830 <___vfprintf_internal_r>
     678:	dfc00017 	ldw	ra,0(sp)
     67c:	dec00304 	addi	sp,sp,12
     680:	f800283a 	ret

00000684 <printf>:
     684:	defffc04 	addi	sp,sp,-16
     688:	dfc00015 	stw	ra,0(sp)
     68c:	d9400115 	stw	r5,4(sp)
     690:	d9800215 	stw	r6,8(sp)
     694:	d9c00315 	stw	r7,12(sp)
     698:	00800074 	movhi	r2,1
     69c:	1085f217 	ldw	r2,6088(r2)
     6a0:	200b883a 	mov	r5,r4
     6a4:	d9800104 	addi	r6,sp,4
     6a8:	11000217 	ldw	r4,8(r2)
     6ac:	00029b80 	call	29b8 <__vfprintf_internal>
     6b0:	dfc00017 	ldw	ra,0(sp)
     6b4:	dec00404 	addi	sp,sp,16
     6b8:	f800283a 	ret

000006bc <_puts_r>:
     6bc:	defff504 	addi	sp,sp,-44
     6c0:	dc000815 	stw	r16,32(sp)
     6c4:	2021883a 	mov	r16,r4
     6c8:	2809883a 	mov	r4,r5
     6cc:	dc400915 	stw	r17,36(sp)
     6d0:	dfc00a15 	stw	ra,40(sp)
     6d4:	2823883a 	mov	r17,r5
     6d8:	00007980 	call	798 <strlen>
     6dc:	11000044 	addi	r4,r2,1
     6e0:	d8800515 	stw	r2,20(sp)
     6e4:	00800044 	movi	r2,1
     6e8:	00c00074 	movhi	r3,1
     6ec:	d8800715 	stw	r2,28(sp)
     6f0:	d8800404 	addi	r2,sp,16
     6f4:	18fd8004 	addi	r3,r3,-2560
     6f8:	d8800115 	stw	r2,4(sp)
     6fc:	00800084 	movi	r2,2
     700:	dc400415 	stw	r17,16(sp)
     704:	d8c00615 	stw	r3,24(sp)
     708:	d9000315 	stw	r4,12(sp)
     70c:	d8800215 	stw	r2,8(sp)
     710:	81400217 	ldw	r5,8(r16)
     714:	80000226 	beq	r16,zero,720 <_puts_r+0x64>
     718:	80800e17 	ldw	r2,56(r16)
     71c:	10001326 	beq	r2,zero,76c <_puts_r+0xb0>
     720:	2880030b 	ldhu	r2,12(r5)
     724:	10c8000c 	andi	r3,r2,8192
     728:	1800061e 	bne	r3,zero,744 <_puts_r+0x88>
     72c:	28c01917 	ldw	r3,100(r5)
     730:	0137ffc4 	movi	r4,-8193
     734:	10880014 	ori	r2,r2,8192
     738:	1906703a 	and	r3,r3,r4
     73c:	2880030d 	sth	r2,12(r5)
     740:	28c01915 	stw	r3,100(r5)
     744:	d9800104 	addi	r6,sp,4
     748:	8009883a 	mov	r4,r16
     74c:	0004f080 	call	4f08 <__sfvwrite_r>
     750:	10000b1e 	bne	r2,zero,780 <_puts_r+0xc4>
     754:	00800284 	movi	r2,10
     758:	dfc00a17 	ldw	ra,40(sp)
     75c:	dc400917 	ldw	r17,36(sp)
     760:	dc000817 	ldw	r16,32(sp)
     764:	dec00b04 	addi	sp,sp,44
     768:	f800283a 	ret
     76c:	8009883a 	mov	r4,r16
     770:	d9400015 	stw	r5,0(sp)
     774:	0004aa80 	call	4aa8 <__sinit>
     778:	d9400017 	ldw	r5,0(sp)
     77c:	003fe806 	br	720 <_puts_r+0x64>
     780:	00bfffc4 	movi	r2,-1
     784:	003ff406 	br	758 <_puts_r+0x9c>

00000788 <puts>:
     788:	00800074 	movhi	r2,1
     78c:	200b883a 	mov	r5,r4
     790:	1105f217 	ldw	r4,6088(r2)
     794:	00006bc1 	jmpi	6bc <_puts_r>

00000798 <strlen>:
     798:	208000cc 	andi	r2,r4,3
     79c:	10002026 	beq	r2,zero,820 <strlen+0x88>
     7a0:	20800007 	ldb	r2,0(r4)
     7a4:	10002026 	beq	r2,zero,828 <strlen+0x90>
     7a8:	2005883a 	mov	r2,r4
     7ac:	00000206 	br	7b8 <strlen+0x20>
     7b0:	10c00007 	ldb	r3,0(r2)
     7b4:	18001826 	beq	r3,zero,818 <strlen+0x80>
     7b8:	10800044 	addi	r2,r2,1
     7bc:	10c000cc 	andi	r3,r2,3
     7c0:	183ffb1e 	bne	r3,zero,7b0 <strlen+0x18>
     7c4:	11400017 	ldw	r5,0(r2)
     7c8:	01ffbff4 	movhi	r7,65279
     7cc:	39ffbfc4 	addi	r7,r7,-257
     7d0:	29c7883a 	add	r3,r5,r7
     7d4:	01a02074 	movhi	r6,32897
     7d8:	014a303a 	nor	r5,zero,r5
     7dc:	1946703a 	and	r3,r3,r5
     7e0:	31a02004 	addi	r6,r6,-32640
     7e4:	1986703a 	and	r3,r3,r6
     7e8:	1800091e 	bne	r3,zero,810 <strlen+0x78>
     7ec:	10800104 	addi	r2,r2,4
     7f0:	11400017 	ldw	r5,0(r2)
     7f4:	29c7883a 	add	r3,r5,r7
     7f8:	014a303a 	nor	r5,zero,r5
     7fc:	1946703a 	and	r3,r3,r5
     800:	1986703a 	and	r3,r3,r6
     804:	183ff926 	beq	r3,zero,7ec <strlen+0x54>
     808:	00000106 	br	810 <strlen+0x78>
     80c:	10800044 	addi	r2,r2,1
     810:	10c00007 	ldb	r3,0(r2)
     814:	183ffd1e 	bne	r3,zero,80c <strlen+0x74>
     818:	1105c83a 	sub	r2,r2,r4
     81c:	f800283a 	ret
     820:	2005883a 	mov	r2,r4
     824:	003fe706 	br	7c4 <strlen+0x2c>
     828:	0005883a 	mov	r2,zero
     82c:	f800283a 	ret

00000830 <___vfprintf_internal_r>:
     830:	deffbd04 	addi	sp,sp,-268
     834:	dfc04215 	stw	ra,264(sp)
     838:	dd003d15 	stw	r20,244(sp)
     83c:	dcc03c15 	stw	r19,240(sp)
     840:	dc003915 	stw	r16,228(sp)
     844:	d9000515 	stw	r4,20(sp)
     848:	2021883a 	mov	r16,r4
     84c:	2827883a 	mov	r19,r5
     850:	3029883a 	mov	r20,r6
     854:	d9c00615 	stw	r7,24(sp)
     858:	df004115 	stw	fp,260(sp)
     85c:	ddc04015 	stw	r23,256(sp)
     860:	dd803f15 	stw	r22,252(sp)
     864:	dd403e15 	stw	r21,248(sp)
     868:	dc803b15 	stw	r18,236(sp)
     86c:	dc403a15 	stw	r17,232(sp)
     870:	000553c0 	call	553c <_localeconv_r>
     874:	10800017 	ldw	r2,0(r2)
     878:	1009883a 	mov	r4,r2
     87c:	d8800d15 	stw	r2,52(sp)
     880:	00007980 	call	798 <strlen>
     884:	d8800b15 	stw	r2,44(sp)
     888:	80000226 	beq	r16,zero,894 <___vfprintf_internal_r+0x64>
     88c:	80800e17 	ldw	r2,56(r16)
     890:	1002de26 	beq	r2,zero,140c <___vfprintf_internal_r+0xbdc>
     894:	9880030b 	ldhu	r2,12(r19)
     898:	10c8000c 	andi	r3,r2,8192
     89c:	1800061e 	bne	r3,zero,8b8 <___vfprintf_internal_r+0x88>
     8a0:	98c01917 	ldw	r3,100(r19)
     8a4:	0137ffc4 	movi	r4,-8193
     8a8:	10880014 	ori	r2,r2,8192
     8ac:	1906703a 	and	r3,r3,r4
     8b0:	9880030d 	sth	r2,12(r19)
     8b4:	98c01915 	stw	r3,100(r19)
     8b8:	10c0020c 	andi	r3,r2,8
     8bc:	18009a26 	beq	r3,zero,b28 <___vfprintf_internal_r+0x2f8>
     8c0:	98c00417 	ldw	r3,16(r19)
     8c4:	18009826 	beq	r3,zero,b28 <___vfprintf_internal_r+0x2f8>
     8c8:	1080068c 	andi	r2,r2,26
     8cc:	10800298 	cmpnei	r2,r2,10
     8d0:	10009d26 	beq	r2,zero,b48 <___vfprintf_internal_r+0x318>
     8d4:	ddc02904 	addi	r23,sp,164
     8d8:	ddc01c15 	stw	r23,112(sp)
     8dc:	d8001e15 	stw	zero,120(sp)
     8e0:	d8001d15 	stw	zero,116(sp)
     8e4:	d8000815 	stw	zero,32(sp)
     8e8:	d8000915 	stw	zero,36(sp)
     8ec:	d8000a15 	stw	zero,40(sp)
     8f0:	b811883a 	mov	r8,r23
     8f4:	d8000c15 	stw	zero,48(sp)
     8f8:	d8001115 	stw	zero,68(sp)
     8fc:	d8000415 	stw	zero,16(sp)
     900:	a02d883a 	mov	r22,r20
     904:	b0800007 	ldb	r2,0(r22)
     908:	1000a226 	beq	r2,zero,b94 <___vfprintf_internal_r+0x364>
     90c:	10800960 	cmpeqi	r2,r2,37
     910:	1005351e 	bne	r2,zero,1de8 <___vfprintf_internal_r+0x15b8>
     914:	b021883a 	mov	r16,r22
     918:	00000206 	br	924 <___vfprintf_internal_r+0xf4>
     91c:	18009326 	beq	r3,zero,b6c <___vfprintf_internal_r+0x33c>
     920:	8821883a 	mov	r16,r17
     924:	80800047 	ldb	r2,1(r16)
     928:	84400044 	addi	r17,r16,1
     92c:	10c00958 	cmpnei	r3,r2,37
     930:	103ffa1e 	bne	r2,zero,91c <___vfprintf_internal_r+0xec>
     934:	8da5c83a 	sub	r18,r17,r22
     938:	90009626 	beq	r18,zero,b94 <___vfprintf_internal_r+0x364>
     93c:	d8c01e17 	ldw	r3,120(sp)
     940:	d8801d17 	ldw	r2,116(sp)
     944:	45800015 	stw	r22,0(r8)
     948:	1c87883a 	add	r3,r3,r18
     94c:	10800044 	addi	r2,r2,1
     950:	d8801d15 	stw	r2,116(sp)
     954:	44800115 	stw	r18,4(r8)
     958:	d8c01e15 	stw	r3,120(sp)
     95c:	10800208 	cmpgei	r2,r2,8
     960:	1000851e 	bne	r2,zero,b78 <___vfprintf_internal_r+0x348>
     964:	42000204 	addi	r8,r8,8
     968:	d8c00417 	ldw	r3,16(sp)
     96c:	80800047 	ldb	r2,1(r16)
     970:	1c87883a 	add	r3,r3,r18
     974:	d8c00415 	stw	r3,16(sp)
     978:	10008626 	beq	r2,zero,b94 <___vfprintf_internal_r+0x364>
     97c:	8a800047 	ldb	r10,1(r17)
     980:	8d800044 	addi	r22,r17,1
     984:	d8001545 	stb	zero,85(sp)
     988:	0009883a 	mov	r4,zero
     98c:	000b883a 	mov	r5,zero
     990:	02ffffc4 	movi	r11,-1
     994:	0021883a 	mov	r16,zero
     998:	0019883a 	mov	r12,zero
     99c:	b5800044 	addi	r22,r22,1
     9a0:	5039883a 	mov	fp,r10
     9a4:	e0bff804 	addi	r2,fp,-32
     9a8:	10c01668 	cmpgeui	r3,r2,89
     9ac:	18009d1e 	bne	r3,zero,c24 <___vfprintf_internal_r+0x3f4>
     9b0:	100490ba 	slli	r2,r2,2
     9b4:	00c00034 	movhi	r3,0
     9b8:	10c7883a 	add	r3,r2,r3
     9bc:	18827117 	ldw	r2,2500(r3)
     9c0:	1000683a 	jmp	r2
     9c4:	00000cfc 	xorhi	zero,zero,51
     9c8:	00000c24 	muli	zero,zero,48
     9cc:	00000c24 	muli	zero,zero,48
     9d0:	00000cf0 	cmpltui	zero,zero,51
     9d4:	00000c24 	muli	zero,zero,48
     9d8:	00000c24 	muli	zero,zero,48
     9dc:	00000c24 	muli	zero,zero,48
     9e0:	00000c24 	muli	zero,zero,48
     9e4:	00000c24 	muli	zero,zero,48
     9e8:	00000c24 	muli	zero,zero,48
     9ec:	00000cc8 	cmpgei	zero,zero,51
     9f0:	00000cb8 	rdprs	zero,zero,50
     9f4:	00000c24 	muli	zero,zero,48
     9f8:	00000ca0 	cmpeqi	zero,zero,50
     9fc:	00000c54 	movui	zero,49
     a00:	00000c24 	muli	zero,zero,48
     a04:	00000c48 	cmpgei	zero,zero,49
     a08:	00000bec 	andhi	zero,zero,47
     a0c:	00000bec 	andhi	zero,zero,47
     a10:	00000bec 	andhi	zero,zero,47
     a14:	00000bec 	andhi	zero,zero,47
     a18:	00000bec 	andhi	zero,zero,47
     a1c:	00000bec 	andhi	zero,zero,47
     a20:	00000bec 	andhi	zero,zero,47
     a24:	00000bec 	andhi	zero,zero,47
     a28:	00000bec 	andhi	zero,zero,47
     a2c:	00000c24 	muli	zero,zero,48
     a30:	00000c24 	muli	zero,zero,48
     a34:	00000c24 	muli	zero,zero,48
     a38:	00000c24 	muli	zero,zero,48
     a3c:	00000c24 	muli	zero,zero,48
     a40:	00000c24 	muli	zero,zero,48
     a44:	00000c24 	muli	zero,zero,48
     a48:	00000c24 	muli	zero,zero,48
     a4c:	00000c24 	muli	zero,zero,48
     a50:	00000c24 	muli	zero,zero,48
     a54:	00001210 	cmplti	zero,zero,72
     a58:	00001130 	cmpltui	zero,zero,68
     a5c:	00000c24 	muli	zero,zero,48
     a60:	00001130 	cmpltui	zero,zero,68
     a64:	00000c24 	muli	zero,zero,48
     a68:	00000c24 	muli	zero,zero,48
     a6c:	00000c24 	muli	zero,zero,48
     a70:	00000c24 	muli	zero,zero,48
     a74:	00001124 	muli	zero,zero,68
     a78:	00000c24 	muli	zero,zero,48
     a7c:	00000c24 	muli	zero,zero,48
     a80:	000010f0 	cmpltui	zero,zero,67
     a84:	00000c24 	muli	zero,zero,48
     a88:	00000c24 	muli	zero,zero,48
     a8c:	00000c24 	muli	zero,zero,48
     a90:	00000c24 	muli	zero,zero,48
     a94:	00000c24 	muli	zero,zero,48
     a98:	00001330 	cmpltui	zero,zero,76
     a9c:	00000c24 	muli	zero,zero,48
     aa0:	00000c24 	muli	zero,zero,48
     aa4:	000012e8 	cmpgeui	zero,zero,75
     aa8:	00000c24 	muli	zero,zero,48
     aac:	00000c24 	muli	zero,zero,48
     ab0:	00000c24 	muli	zero,zero,48
     ab4:	00000c24 	muli	zero,zero,48
     ab8:	00000c24 	muli	zero,zero,48
     abc:	00000c24 	muli	zero,zero,48
     ac0:	00000c24 	muli	zero,zero,48
     ac4:	00000c24 	muli	zero,zero,48
     ac8:	00000c24 	muli	zero,zero,48
     acc:	00000c24 	muli	zero,zero,48
     ad0:	00000e80 	call	e8 <__flash_exceptions_start+0xc8>
     ad4:	00000e0c 	andi	zero,zero,56
     ad8:	00001130 	cmpltui	zero,zero,68
     adc:	00001130 	cmpltui	zero,zero,68
     ae0:	00001130 	cmpltui	zero,zero,68
     ae4:	00001400 	call	140 <alt_irq_handler+0x44>
     ae8:	00000e0c 	andi	zero,zero,56
     aec:	00000c24 	muli	zero,zero,48
     af0:	00000c24 	muli	zero,zero,48
     af4:	000013ec 	andhi	zero,zero,79
     af8:	00000c24 	muli	zero,zero,48
     afc:	000010b0 	cmpltui	zero,zero,66
     b00:	00001070 	cmpltui	zero,zero,65
     b04:	00001370 	cmpltui	zero,zero,77
     b08:	00001364 	muli	zero,zero,77
     b0c:	00000c24 	muli	zero,zero,48
     b10:	00000db0 	cmpltui	zero,zero,54
     b14:	00000c24 	muli	zero,zero,48
     b18:	00000d70 	cmpltui	zero,zero,53
     b1c:	00000c24 	muli	zero,zero,48
     b20:	00000c24 	muli	zero,zero,48
     b24:	00000d28 	cmpgeui	zero,zero,52
     b28:	d9000517 	ldw	r4,20(sp)
     b2c:	980b883a 	mov	r5,r19
     b30:	0002a900 	call	2a90 <__swsetup_r>
     b34:	1007561e 	bne	r2,zero,2890 <___vfprintf_internal_r+0x2060>
     b38:	9880030b 	ldhu	r2,12(r19)
     b3c:	1080068c 	andi	r2,r2,26
     b40:	10800298 	cmpnei	r2,r2,10
     b44:	103f631e 	bne	r2,zero,8d4 <___vfprintf_internal_r+0xa4>
     b48:	9880038f 	ldh	r2,14(r19)
     b4c:	103f6116 	blt	r2,zero,8d4 <___vfprintf_internal_r+0xa4>
     b50:	d9c00617 	ldw	r7,24(sp)
     b54:	d9000517 	ldw	r4,20(sp)
     b58:	a00d883a 	mov	r6,r20
     b5c:	980b883a 	mov	r5,r19
     b60:	00029d00 	call	29d0 <__sbprintf>
     b64:	d8800415 	stw	r2,16(sp)
     b68:	00001306 	br	bb8 <___vfprintf_internal_r+0x388>
     b6c:	8da5c83a 	sub	r18,r17,r22
     b70:	903f8226 	beq	r18,zero,97c <___vfprintf_internal_r+0x14c>
     b74:	003f7106 	br	93c <___vfprintf_internal_r+0x10c>
     b78:	d9000517 	ldw	r4,20(sp)
     b7c:	d9801c04 	addi	r6,sp,112
     b80:	980b883a 	mov	r5,r19
     b84:	0007b8c0 	call	7b8c <__sprint_r>
     b88:	1000081e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
     b8c:	b811883a 	mov	r8,r23
     b90:	003f7506 	br	968 <___vfprintf_internal_r+0x138>
     b94:	d8801e17 	ldw	r2,120(sp)
     b98:	10000426 	beq	r2,zero,bac <___vfprintf_internal_r+0x37c>
     b9c:	d9000517 	ldw	r4,20(sp)
     ba0:	d9801c04 	addi	r6,sp,112
     ba4:	980b883a 	mov	r5,r19
     ba8:	0007b8c0 	call	7b8c <__sprint_r>
     bac:	9880030b 	ldhu	r2,12(r19)
     bb0:	1080100c 	andi	r2,r2,64
     bb4:	1007361e 	bne	r2,zero,2890 <___vfprintf_internal_r+0x2060>
     bb8:	d8800417 	ldw	r2,16(sp)
     bbc:	dfc04217 	ldw	ra,264(sp)
     bc0:	df004117 	ldw	fp,260(sp)
     bc4:	ddc04017 	ldw	r23,256(sp)
     bc8:	dd803f17 	ldw	r22,252(sp)
     bcc:	dd403e17 	ldw	r21,248(sp)
     bd0:	dd003d17 	ldw	r20,244(sp)
     bd4:	dcc03c17 	ldw	r19,240(sp)
     bd8:	dc803b17 	ldw	r18,236(sp)
     bdc:	dc403a17 	ldw	r17,232(sp)
     be0:	dc003917 	ldw	r16,228(sp)
     be4:	dec04304 	addi	sp,sp,268
     be8:	f800283a 	ret
     bec:	0021883a 	mov	r16,zero
     bf0:	e0fff404 	addi	r3,fp,-48
     bf4:	800490ba 	slli	r2,r16,2
     bf8:	b5800044 	addi	r22,r22,1
     bfc:	b73fffc7 	ldb	fp,-1(r22)
     c00:	1421883a 	add	r16,r2,r16
     c04:	8421883a 	add	r16,r16,r16
     c08:	1c21883a 	add	r16,r3,r16
     c0c:	e0fff404 	addi	r3,fp,-48
     c10:	188002b0 	cmpltui	r2,r3,10
     c14:	103ff71e 	bne	r2,zero,bf4 <___vfprintf_internal_r+0x3c4>
     c18:	e0bff804 	addi	r2,fp,-32
     c1c:	10c01668 	cmpgeui	r3,r2,89
     c20:	183f6326 	beq	r3,zero,9b0 <___vfprintf_internal_r+0x180>
     c24:	21003fcc 	andi	r4,r4,255
     c28:	2006741e 	bne	r4,zero,25fc <___vfprintf_internal_r+0x1dcc>
     c2c:	e03fd926 	beq	fp,zero,b94 <___vfprintf_internal_r+0x364>
     c30:	df001f05 	stb	fp,124(sp)
     c34:	d8001545 	stb	zero,85(sp)
     c38:	05400044 	movi	r21,1
     c3c:	05000044 	movi	r20,1
     c40:	dc401f04 	addi	r17,sp,124
     c44:	00009706 	br	ea4 <___vfprintf_internal_r+0x674>
     c48:	63002014 	ori	r12,r12,128
     c4c:	b2800007 	ldb	r10,0(r22)
     c50:	003f5206 	br	99c <___vfprintf_internal_r+0x16c>
     c54:	b7000007 	ldb	fp,0(r22)
     c58:	b0800044 	addi	r2,r22,1
     c5c:	e0c00aa0 	cmpeqi	r3,fp,42
     c60:	1807491e 	bne	r3,zero,2988 <___vfprintf_internal_r+0x2158>
     c64:	e0fff404 	addi	r3,fp,-48
     c68:	198002b0 	cmpltui	r6,r3,10
     c6c:	102d883a 	mov	r22,r2
     c70:	0017883a 	mov	r11,zero
     c74:	303f4b26 	beq	r6,zero,9a4 <___vfprintf_internal_r+0x174>
     c78:	580490ba 	slli	r2,r11,2
     c7c:	b5800044 	addi	r22,r22,1
     c80:	b73fffc7 	ldb	fp,-1(r22)
     c84:	12d7883a 	add	r11,r2,r11
     c88:	5ad7883a 	add	r11,r11,r11
     c8c:	58d7883a 	add	r11,r11,r3
     c90:	e0fff404 	addi	r3,fp,-48
     c94:	188002b0 	cmpltui	r2,r3,10
     c98:	103ff71e 	bne	r2,zero,c78 <___vfprintf_internal_r+0x448>
     c9c:	003f4106 	br	9a4 <___vfprintf_internal_r+0x174>
     ca0:	b7000003 	ldbu	fp,0(r22)
     ca4:	e2803fcc 	andi	r10,fp,255
     ca8:	5280201c 	xori	r10,r10,128
     cac:	63000114 	ori	r12,r12,4
     cb0:	52bfe004 	addi	r10,r10,-128
     cb4:	003f3906 	br	99c <___vfprintf_internal_r+0x16c>
     cb8:	01000044 	movi	r4,1
     cbc:	01400ac4 	movi	r5,43
     cc0:	b2800007 	ldb	r10,0(r22)
     cc4:	003f3506 	br	99c <___vfprintf_internal_r+0x16c>
     cc8:	d8800617 	ldw	r2,24(sp)
     ccc:	b7000003 	ldbu	fp,0(r22)
     cd0:	14000017 	ldw	r16,0(r2)
     cd4:	10800104 	addi	r2,r2,4
     cd8:	8004da16 	blt	r16,zero,2044 <___vfprintf_internal_r+0x1814>
     cdc:	d8800615 	stw	r2,24(sp)
     ce0:	e2803fcc 	andi	r10,fp,255
     ce4:	5280201c 	xori	r10,r10,128
     ce8:	52bfe004 	addi	r10,r10,-128
     cec:	003f2b06 	br	99c <___vfprintf_internal_r+0x16c>
     cf0:	63000054 	ori	r12,r12,1
     cf4:	b2800007 	ldb	r10,0(r22)
     cf8:	003f2806 	br	99c <___vfprintf_internal_r+0x16c>
     cfc:	28803fcc 	andi	r2,r5,255
     d00:	1080201c 	xori	r2,r2,128
     d04:	10bfe004 	addi	r2,r2,-128
     d08:	b7000003 	ldbu	fp,0(r22)
     d0c:	103ff41e 	bne	r2,zero,ce0 <___vfprintf_internal_r+0x4b0>
     d10:	e2803fcc 	andi	r10,fp,255
     d14:	5280201c 	xori	r10,r10,128
     d18:	01000044 	movi	r4,1
     d1c:	01400804 	movi	r5,32
     d20:	52bfe004 	addi	r10,r10,-128
     d24:	003f1d06 	br	99c <___vfprintf_internal_r+0x16c>
     d28:	21003fcc 	andi	r4,r4,255
     d2c:	2006b81e 	bne	r4,zero,2810 <___vfprintf_internal_r+0x1fe0>
     d30:	00800074 	movhi	r2,1
     d34:	10bd8a04 	addi	r2,r2,-2520
     d38:	d8800c15 	stw	r2,48(sp)
     d3c:	6080080c 	andi	r2,r12,32
     d40:	10017026 	beq	r2,zero,1304 <___vfprintf_internal_r+0xad4>
     d44:	d8800617 	ldw	r2,24(sp)
     d48:	15400017 	ldw	r21,0(r2)
     d4c:	15000117 	ldw	r20,4(r2)
     d50:	10800204 	addi	r2,r2,8
     d54:	d8800615 	stw	r2,24(sp)
     d58:	6080004c 	andi	r2,r12,1
     d5c:	10000226 	beq	r2,zero,d68 <___vfprintf_internal_r+0x538>
     d60:	ad04b03a 	or	r2,r21,r20
     d64:	1004aa1e 	bne	r2,zero,2010 <___vfprintf_internal_r+0x17e0>
     d68:	00800084 	movi	r2,2
     d6c:	00018f06 	br	13ac <___vfprintf_internal_r+0xb7c>
     d70:	21003fcc 	andi	r4,r4,255
     d74:	2006a41e 	bne	r4,zero,2808 <___vfprintf_internal_r+0x1fd8>
     d78:	6080080c 	andi	r2,r12,32
     d7c:	1001b41e 	bne	r2,zero,1450 <___vfprintf_internal_r+0xc20>
     d80:	d8800617 	ldw	r2,24(sp)
     d84:	60c0040c 	andi	r3,r12,16
     d88:	15400017 	ldw	r21,0(r2)
     d8c:	10800104 	addi	r2,r2,4
     d90:	18016e1e 	bne	r3,zero,134c <___vfprintf_internal_r+0xb1c>
     d94:	60c0100c 	andi	r3,r12,64
     d98:	1805a526 	beq	r3,zero,2430 <___vfprintf_internal_r+0x1c00>
     d9c:	d8800615 	stw	r2,24(sp)
     da0:	ad7fffcc 	andi	r21,r21,65535
     da4:	0029883a 	mov	r20,zero
     da8:	00800044 	movi	r2,1
     dac:	00017f06 	br	13ac <___vfprintf_internal_r+0xb7c>
     db0:	d8800617 	ldw	r2,24(sp)
     db4:	d8001545 	stb	zero,85(sp)
     db8:	14400017 	ldw	r17,0(r2)
     dbc:	14800104 	addi	r18,r2,4
     dc0:	8804ca26 	beq	r17,zero,20ec <___vfprintf_internal_r+0x18bc>
     dc4:	da000e15 	stw	r8,56(sp)
     dc8:	db000715 	stw	r12,28(sp)
     dcc:	58bfffe0 	cmpeqi	r2,r11,-1
     dd0:	10056c1e 	bne	r2,zero,2384 <___vfprintf_internal_r+0x1b54>
     dd4:	580d883a 	mov	r6,r11
     dd8:	000b883a 	mov	r5,zero
     ddc:	8809883a 	mov	r4,r17
     de0:	dac00615 	stw	r11,24(sp)
     de4:	0005f1c0 	call	5f1c <memchr>
     de8:	dac00617 	ldw	r11,24(sp)
     dec:	db000717 	ldw	r12,28(sp)
     df0:	da000e17 	ldw	r8,56(sp)
     df4:	10066c26 	beq	r2,zero,27a8 <___vfprintf_internal_r+0x1f78>
     df8:	1469c83a 	sub	r20,r2,r17
     dfc:	a02b883a 	mov	r21,r20
     e00:	a005fc16 	blt	r20,zero,25f4 <___vfprintf_internal_r+0x1dc4>
     e04:	dc800615 	stw	r18,24(sp)
     e08:	00002606 	br	ea4 <___vfprintf_internal_r+0x674>
     e0c:	21003fcc 	andi	r4,r4,255
     e10:	20067b1e 	bne	r4,zero,2800 <___vfprintf_internal_r+0x1fd0>
     e14:	6080080c 	andi	r2,r12,32
     e18:	10017f1e 	bne	r2,zero,1418 <___vfprintf_internal_r+0xbe8>
     e1c:	d8800617 	ldw	r2,24(sp)
     e20:	60c0040c 	andi	r3,r12,16
     e24:	10800104 	addi	r2,r2,4
     e28:	1801001e 	bne	r3,zero,122c <___vfprintf_internal_r+0x9fc>
     e2c:	60c0100c 	andi	r3,r12,64
     e30:	1800fe26 	beq	r3,zero,122c <___vfprintf_internal_r+0x9fc>
     e34:	d8c00617 	ldw	r3,24(sp)
     e38:	d8800615 	stw	r2,24(sp)
     e3c:	1d40000f 	ldh	r21,0(r3)
     e40:	a829d7fa 	srai	r20,r21,31
     e44:	a005883a 	mov	r2,r20
     e48:	1000fe16 	blt	r2,zero,1244 <___vfprintf_internal_r+0xa14>
     e4c:	58bfffd8 	cmpnei	r2,r11,-1
     e50:	db401543 	ldbu	r13,85(sp)
     e54:	10018526 	beq	r2,zero,146c <___vfprintf_internal_r+0xc3c>
     e58:	00ffdfc4 	movi	r3,-129
     e5c:	ad04b03a 	or	r2,r21,r20
     e60:	60d8703a 	and	r12,r12,r3
     e64:	1001811e 	bne	r2,zero,146c <___vfprintf_internal_r+0xc3c>
     e68:	5801831e 	bne	r11,zero,1478 <___vfprintf_internal_r+0xc48>
     e6c:	6025883a 	mov	r18,r12
     e70:	0017883a 	mov	r11,zero
     e74:	0029883a 	mov	r20,zero
     e78:	b823883a 	mov	r17,r23
     e7c:	00018306 	br	148c <___vfprintf_internal_r+0xc5c>
     e80:	d8c00617 	ldw	r3,24(sp)
     e84:	d8001545 	stb	zero,85(sp)
     e88:	05400044 	movi	r21,1
     e8c:	18800017 	ldw	r2,0(r3)
     e90:	18c00104 	addi	r3,r3,4
     e94:	d8c00615 	stw	r3,24(sp)
     e98:	d8801f05 	stb	r2,124(sp)
     e9c:	05000044 	movi	r20,1
     ea0:	dc401f04 	addi	r17,sp,124
     ea4:	6025883a 	mov	r18,r12
     ea8:	0017883a 	mov	r11,zero
     eac:	d8000715 	stw	zero,28(sp)
     eb0:	9380008c 	andi	r14,r18,2
     eb4:	70000126 	beq	r14,zero,ebc <___vfprintf_internal_r+0x68c>
     eb8:	ad400084 	addi	r21,r21,2
     ebc:	9340210c 	andi	r13,r18,132
     ec0:	d8c01e17 	ldw	r3,120(sp)
     ec4:	6800021e 	bne	r13,zero,ed0 <___vfprintf_internal_r+0x6a0>
     ec8:	854fc83a 	sub	r7,r16,r21
     ecc:	01c2ce16 	blt	zero,r7,1a08 <___vfprintf_internal_r+0x11d8>
     ed0:	d8801547 	ldb	r2,85(sp)
     ed4:	10000c26 	beq	r2,zero,f08 <___vfprintf_internal_r+0x6d8>
     ed8:	d8801d17 	ldw	r2,116(sp)
     edc:	d9001544 	addi	r4,sp,85
     ee0:	18c00044 	addi	r3,r3,1
     ee4:	10800044 	addi	r2,r2,1
     ee8:	41000015 	stw	r4,0(r8)
     eec:	01000044 	movi	r4,1
     ef0:	d8801d15 	stw	r2,116(sp)
     ef4:	41000115 	stw	r4,4(r8)
     ef8:	d8c01e15 	stw	r3,120(sp)
     efc:	10800208 	cmpgei	r2,r2,8
     f00:	1002fb1e 	bne	r2,zero,1af0 <___vfprintf_internal_r+0x12c0>
     f04:	42000204 	addi	r8,r8,8
     f08:	70000c26 	beq	r14,zero,f3c <___vfprintf_internal_r+0x70c>
     f0c:	d8801d17 	ldw	r2,116(sp)
     f10:	d9001584 	addi	r4,sp,86
     f14:	18c00084 	addi	r3,r3,2
     f18:	10800044 	addi	r2,r2,1
     f1c:	41000015 	stw	r4,0(r8)
     f20:	01000084 	movi	r4,2
     f24:	d8801d15 	stw	r2,116(sp)
     f28:	41000115 	stw	r4,4(r8)
     f2c:	d8c01e15 	stw	r3,120(sp)
     f30:	10800208 	cmpgei	r2,r2,8
     f34:	1002fc1e 	bne	r2,zero,1b28 <___vfprintf_internal_r+0x12f8>
     f38:	42000204 	addi	r8,r8,8
     f3c:	6b402018 	cmpnei	r13,r13,128
     f40:	6801cf26 	beq	r13,zero,1680 <___vfprintf_internal_r+0xe50>
     f44:	5d0fc83a 	sub	r7,r11,r20
     f48:	01c20616 	blt	zero,r7,1764 <___vfprintf_internal_r+0xf34>
     f4c:	9080400c 	andi	r2,r18,256
     f50:	10017c1e 	bne	r2,zero,1544 <___vfprintf_internal_r+0xd14>
     f54:	d8801d17 	ldw	r2,116(sp)
     f58:	1d07883a 	add	r3,r3,r20
     f5c:	44400015 	stw	r17,0(r8)
     f60:	10800044 	addi	r2,r2,1
     f64:	d8801d15 	stw	r2,116(sp)
     f68:	45000115 	stw	r20,4(r8)
     f6c:	d8c01e15 	stw	r3,120(sp)
     f70:	10800208 	cmpgei	r2,r2,8
     f74:	1002571e 	bne	r2,zero,18d4 <___vfprintf_internal_r+0x10a4>
     f78:	42000204 	addi	r8,r8,8
     f7c:	9480010c 	andi	r18,r18,4
     f80:	90000226 	beq	r18,zero,f8c <___vfprintf_internal_r+0x75c>
     f84:	8563c83a 	sub	r17,r16,r21
     f88:	04400916 	blt	zero,r17,fb0 <___vfprintf_internal_r+0x780>
     f8c:	8540010e 	bge	r16,r21,f94 <___vfprintf_internal_r+0x764>
     f90:	a821883a 	mov	r16,r21
     f94:	d8800417 	ldw	r2,16(sp)
     f98:	1405883a 	add	r2,r2,r16
     f9c:	d8800415 	stw	r2,16(sp)
     fa0:	1802241e 	bne	r3,zero,1834 <___vfprintf_internal_r+0x1004>
     fa4:	d8001d15 	stw	zero,116(sp)
     fa8:	b811883a 	mov	r8,r23
     fac:	003e5506 	br	904 <___vfprintf_internal_r+0xd4>
     fb0:	03000074 	movhi	r12,1
     fb4:	89000450 	cmplti	r4,r17,17
     fb8:	633d9584 	addi	r12,r12,-2474
     fbc:	d8801d17 	ldw	r2,116(sp)
     fc0:	20001c1e 	bne	r4,zero,1034 <___vfprintf_internal_r+0x804>
     fc4:	04800404 	movi	r18,16
     fc8:	dd000517 	ldw	r20,20(sp)
     fcc:	6039883a 	mov	fp,r12
     fd0:	00000406 	br	fe4 <___vfprintf_internal_r+0x7b4>
     fd4:	8c7ffc04 	addi	r17,r17,-16
     fd8:	89000448 	cmpgei	r4,r17,17
     fdc:	42000204 	addi	r8,r8,8
     fe0:	20001326 	beq	r4,zero,1030 <___vfprintf_internal_r+0x800>
     fe4:	10800044 	addi	r2,r2,1
     fe8:	18c00404 	addi	r3,r3,16
     fec:	47000015 	stw	fp,0(r8)
     ff0:	44800115 	stw	r18,4(r8)
     ff4:	d8c01e15 	stw	r3,120(sp)
     ff8:	d8801d15 	stw	r2,116(sp)
     ffc:	11000208 	cmpgei	r4,r2,8
    1000:	203ff426 	beq	r4,zero,fd4 <___vfprintf_internal_r+0x7a4>
    1004:	d9801c04 	addi	r6,sp,112
    1008:	980b883a 	mov	r5,r19
    100c:	a009883a 	mov	r4,r20
    1010:	0007b8c0 	call	7b8c <__sprint_r>
    1014:	103ee51e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1018:	8c7ffc04 	addi	r17,r17,-16
    101c:	89000448 	cmpgei	r4,r17,17
    1020:	d8c01e17 	ldw	r3,120(sp)
    1024:	d8801d17 	ldw	r2,116(sp)
    1028:	b811883a 	mov	r8,r23
    102c:	203fed1e 	bne	r4,zero,fe4 <___vfprintf_internal_r+0x7b4>
    1030:	e019883a 	mov	r12,fp
    1034:	10800044 	addi	r2,r2,1
    1038:	1c47883a 	add	r3,r3,r17
    103c:	d8801d15 	stw	r2,116(sp)
    1040:	43000015 	stw	r12,0(r8)
    1044:	44400115 	stw	r17,4(r8)
    1048:	d8c01e15 	stw	r3,120(sp)
    104c:	10800210 	cmplti	r2,r2,8
    1050:	103fce1e 	bne	r2,zero,f8c <___vfprintf_internal_r+0x75c>
    1054:	d9000517 	ldw	r4,20(sp)
    1058:	d9801c04 	addi	r6,sp,112
    105c:	980b883a 	mov	r5,r19
    1060:	0007b8c0 	call	7b8c <__sprint_r>
    1064:	103ed11e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1068:	d8c01e17 	ldw	r3,120(sp)
    106c:	003fc706 	br	f8c <___vfprintf_internal_r+0x75c>
    1070:	21003fcc 	andi	r4,r4,255
    1074:	2005de1e 	bne	r4,zero,27f0 <___vfprintf_internal_r+0x1fc0>
    1078:	6080080c 	andi	r2,r12,32
    107c:	1000ed1e 	bne	r2,zero,1434 <___vfprintf_internal_r+0xc04>
    1080:	d8800617 	ldw	r2,24(sp)
    1084:	60c0040c 	andi	r3,r12,16
    1088:	15400017 	ldw	r21,0(r2)
    108c:	10800104 	addi	r2,r2,4
    1090:	18001e1e 	bne	r3,zero,110c <___vfprintf_internal_r+0x8dc>
    1094:	60c0100c 	andi	r3,r12,64
    1098:	1804e126 	beq	r3,zero,2420 <___vfprintf_internal_r+0x1bf0>
    109c:	d8800615 	stw	r2,24(sp)
    10a0:	ad7fffcc 	andi	r21,r21,65535
    10a4:	0029883a 	mov	r20,zero
    10a8:	0005883a 	mov	r2,zero
    10ac:	0000bf06 	br	13ac <___vfprintf_internal_r+0xb7c>
    10b0:	21003fcc 	andi	r4,r4,255
    10b4:	2005d01e 	bne	r4,zero,27f8 <___vfprintf_internal_r+0x1fc8>
    10b8:	d9000617 	ldw	r4,24(sp)
    10bc:	6080080c 	andi	r2,r12,32
    10c0:	20c00104 	addi	r3,r4,4
    10c4:	1003d81e 	bne	r2,zero,2028 <___vfprintf_internal_r+0x17f8>
    10c8:	6080040c 	andi	r2,r12,16
    10cc:	1004321e 	bne	r2,zero,2198 <___vfprintf_internal_r+0x1968>
    10d0:	6300100c 	andi	r12,r12,64
    10d4:	60043026 	beq	r12,zero,2198 <___vfprintf_internal_r+0x1968>
    10d8:	d8800617 	ldw	r2,24(sp)
    10dc:	d8c00615 	stw	r3,24(sp)
    10e0:	d8c00417 	ldw	r3,16(sp)
    10e4:	10800017 	ldw	r2,0(r2)
    10e8:	10c0000d 	sth	r3,0(r2)
    10ec:	003e0506 	br	904 <___vfprintf_internal_r+0xd4>
    10f0:	21003fcc 	andi	r4,r4,255
    10f4:	2005c81e 	bne	r4,zero,2818 <___vfprintf_internal_r+0x1fe8>
    10f8:	6080080c 	andi	r2,r12,32
    10fc:	63000414 	ori	r12,r12,16
    1100:	1000cc1e 	bne	r2,zero,1434 <___vfprintf_internal_r+0xc04>
    1104:	d8800617 	ldw	r2,24(sp)
    1108:	10800104 	addi	r2,r2,4
    110c:	d8c00617 	ldw	r3,24(sp)
    1110:	0029883a 	mov	r20,zero
    1114:	d8800615 	stw	r2,24(sp)
    1118:	1d400017 	ldw	r21,0(r3)
    111c:	0005883a 	mov	r2,zero
    1120:	0000a206 	br	13ac <___vfprintf_internal_r+0xb7c>
    1124:	63000214 	ori	r12,r12,8
    1128:	b2800007 	ldb	r10,0(r22)
    112c:	003e1b06 	br	99c <___vfprintf_internal_r+0x16c>
    1130:	21003fcc 	andi	r4,r4,255
    1134:	2005bc1e 	bne	r4,zero,2828 <___vfprintf_internal_r+0x1ff8>
    1138:	d8c00617 	ldw	r3,24(sp)
    113c:	00a00034 	movhi	r2,32768
    1140:	10bfffc4 	addi	r2,r2,-1
    1144:	1d000117 	ldw	r20,4(r3)
    1148:	1c800017 	ldw	r18,0(r3)
    114c:	01dffc34 	movhi	r7,32752
    1150:	a0a2703a 	and	r17,r20,r2
    1154:	01bfffc4 	movi	r6,-1
    1158:	18800204 	addi	r2,r3,8
    115c:	39ffffc4 	addi	r7,r7,-1
    1160:	9009883a 	mov	r4,r18
    1164:	880b883a 	mov	r5,r17
    1168:	da000f15 	stw	r8,60(sp)
    116c:	dac00e15 	stw	r11,56(sp)
    1170:	db000715 	stw	r12,28(sp)
    1174:	dd000a15 	stw	r20,40(sp)
    1178:	dc800915 	stw	r18,36(sp)
    117c:	d8800615 	stw	r2,24(sp)
    1180:	000ccb40 	call	ccb4 <__unorddf2>
    1184:	db000717 	ldw	r12,28(sp)
    1188:	dac00e17 	ldw	r11,56(sp)
    118c:	da000f17 	ldw	r8,60(sp)
    1190:	1003191e 	bne	r2,zero,1df8 <___vfprintf_internal_r+0x15c8>
    1194:	01dffc34 	movhi	r7,32752
    1198:	01bfffc4 	movi	r6,-1
    119c:	39ffffc4 	addi	r7,r7,-1
    11a0:	9009883a 	mov	r4,r18
    11a4:	880b883a 	mov	r5,r17
    11a8:	000ba780 	call	ba78 <__ledf2>
    11ac:	db000717 	ldw	r12,28(sp)
    11b0:	dac00e17 	ldw	r11,56(sp)
    11b4:	da000f17 	ldw	r8,60(sp)
    11b8:	00830f0e 	bge	zero,r2,1df8 <___vfprintf_internal_r+0x15c8>
    11bc:	000d883a 	mov	r6,zero
    11c0:	000f883a 	mov	r7,zero
    11c4:	9009883a 	mov	r4,r18
    11c8:	a00b883a 	mov	r5,r20
    11cc:	da000e15 	stw	r8,56(sp)
    11d0:	000ba780 	call	ba78 <__ledf2>
    11d4:	db000717 	ldw	r12,28(sp)
    11d8:	da000e17 	ldw	r8,56(sp)
    11dc:	1004e716 	blt	r2,zero,257c <___vfprintf_internal_r+0x1d4c>
    11e0:	db401543 	ldbu	r13,85(sp)
    11e4:	e0801210 	cmplti	r2,fp,72
    11e8:	1004d11e 	bne	r2,zero,2530 <___vfprintf_internal_r+0x1d00>
    11ec:	04400074 	movhi	r17,1
    11f0:	8c7d8204 	addi	r17,r17,-2552
    11f4:	04bfdfc4 	movi	r18,-129
    11f8:	64a4703a 	and	r18,r12,r18
    11fc:	054000c4 	movi	r21,3
    1200:	050000c4 	movi	r20,3
    1204:	0017883a 	mov	r11,zero
    1208:	d8000715 	stw	zero,28(sp)
    120c:	0000a306 	br	149c <___vfprintf_internal_r+0xc6c>
    1210:	21003fcc 	andi	r4,r4,255
    1214:	2005821e 	bne	r4,zero,2820 <___vfprintf_internal_r+0x1ff0>
    1218:	6080080c 	andi	r2,r12,32
    121c:	63000414 	ori	r12,r12,16
    1220:	10007d1e 	bne	r2,zero,1418 <___vfprintf_internal_r+0xbe8>
    1224:	d8800617 	ldw	r2,24(sp)
    1228:	10800104 	addi	r2,r2,4
    122c:	d8c00617 	ldw	r3,24(sp)
    1230:	1d400017 	ldw	r21,0(r3)
    1234:	d8800615 	stw	r2,24(sp)
    1238:	a829d7fa 	srai	r20,r21,31
    123c:	a005883a 	mov	r2,r20
    1240:	103f020e 	bge	r2,zero,e4c <___vfprintf_internal_r+0x61c>
    1244:	056bc83a 	sub	r21,zero,r21
    1248:	a804c03a 	cmpne	r2,r21,zero
    124c:	0529c83a 	sub	r20,zero,r20
    1250:	a0a9c83a 	sub	r20,r20,r2
    1254:	00800b44 	movi	r2,45
    1258:	d8801545 	stb	r2,85(sp)
    125c:	58ffffe0 	cmpeqi	r3,r11,-1
    1260:	03400b44 	movi	r13,45
    1264:	00800044 	movi	r2,1
    1268:	18005426 	beq	r3,zero,13bc <___vfprintf_internal_r+0xb8c>
    126c:	10c00060 	cmpeqi	r3,r2,1
    1270:	18007e1e 	bne	r3,zero,146c <___vfprintf_internal_r+0xc3c>
    1274:	108000a0 	cmpeqi	r2,r2,2
    1278:	1002371e 	bne	r2,zero,1b58 <___vfprintf_internal_r+0x1328>
    127c:	b807883a 	mov	r3,r23
    1280:	00000106 	br	1288 <___vfprintf_internal_r+0xa58>
    1284:	8807883a 	mov	r3,r17
    1288:	a808d0fa 	srli	r4,r21,3
    128c:	a00a977a 	slli	r5,r20,29
    1290:	a028d0fa 	srli	r20,r20,3
    1294:	ad4001cc 	andi	r21,r21,7
    1298:	a8800c04 	addi	r2,r21,48
    129c:	292ab03a 	or	r21,r5,r4
    12a0:	18bfffc5 	stb	r2,-1(r3)
    12a4:	ad08b03a 	or	r4,r21,r20
    12a8:	1c7fffc4 	addi	r17,r3,-1
    12ac:	203ff51e 	bne	r4,zero,1284 <___vfprintf_internal_r+0xa54>
    12b0:	6100004c 	andi	r4,r12,1
    12b4:	2000a026 	beq	r4,zero,1538 <___vfprintf_internal_r+0xd08>
    12b8:	10803fcc 	andi	r2,r2,255
    12bc:	1080201c 	xori	r2,r2,128
    12c0:	10bfe004 	addi	r2,r2,-128
    12c4:	10800c18 	cmpnei	r2,r2,48
    12c8:	10009b26 	beq	r2,zero,1538 <___vfprintf_internal_r+0xd08>
    12cc:	18ffff84 	addi	r3,r3,-2
    12d0:	00800c04 	movi	r2,48
    12d4:	88bfffc5 	stb	r2,-1(r17)
    12d8:	b8e9c83a 	sub	r20,r23,r3
    12dc:	6025883a 	mov	r18,r12
    12e0:	1823883a 	mov	r17,r3
    12e4:	00006906 	br	148c <___vfprintf_internal_r+0xc5c>
    12e8:	21003fcc 	andi	r4,r4,255
    12ec:	20053e1e 	bne	r4,zero,27e8 <___vfprintf_internal_r+0x1fb8>
    12f0:	00800074 	movhi	r2,1
    12f4:	10bd8504 	addi	r2,r2,-2540
    12f8:	d8800c15 	stw	r2,48(sp)
    12fc:	6080080c 	andi	r2,r12,32
    1300:	103e901e 	bne	r2,zero,d44 <___vfprintf_internal_r+0x514>
    1304:	d8c00617 	ldw	r3,24(sp)
    1308:	6080040c 	andi	r2,r12,16
    130c:	1d400017 	ldw	r21,0(r3)
    1310:	18c00104 	addi	r3,r3,4
    1314:	d8c00615 	stw	r3,24(sp)
    1318:	1002b11e 	bne	r2,zero,1de0 <___vfprintf_internal_r+0x15b0>
    131c:	6080100c 	andi	r2,r12,64
    1320:	1002af26 	beq	r2,zero,1de0 <___vfprintf_internal_r+0x15b0>
    1324:	ad7fffcc 	andi	r21,r21,65535
    1328:	0029883a 	mov	r20,zero
    132c:	003e8a06 	br	d58 <___vfprintf_internal_r+0x528>
    1330:	21003fcc 	andi	r4,r4,255
    1334:	20053e1e 	bne	r4,zero,2830 <___vfprintf_internal_r+0x2000>
    1338:	6080080c 	andi	r2,r12,32
    133c:	63000414 	ori	r12,r12,16
    1340:	1000431e 	bne	r2,zero,1450 <___vfprintf_internal_r+0xc20>
    1344:	d8800617 	ldw	r2,24(sp)
    1348:	10800104 	addi	r2,r2,4
    134c:	d8c00617 	ldw	r3,24(sp)
    1350:	0029883a 	mov	r20,zero
    1354:	d8800615 	stw	r2,24(sp)
    1358:	1d400017 	ldw	r21,0(r3)
    135c:	00800044 	movi	r2,1
    1360:	00001206 	br	13ac <___vfprintf_internal_r+0xb7c>
    1364:	63000814 	ori	r12,r12,32
    1368:	b2800007 	ldb	r10,0(r22)
    136c:	003d8b06 	br	99c <___vfprintf_internal_r+0x16c>
    1370:	d8c00617 	ldw	r3,24(sp)
    1374:	00800c04 	movi	r2,48
    1378:	d8801585 	stb	r2,86(sp)
    137c:	00801e04 	movi	r2,120
    1380:	01000074 	movhi	r4,1
    1384:	d88015c5 	stb	r2,87(sp)
    1388:	1d400017 	ldw	r21,0(r3)
    138c:	18800104 	addi	r2,r3,4
    1390:	d8800615 	stw	r2,24(sp)
    1394:	20bd8a04 	addi	r2,r4,-2520
    1398:	d8800c15 	stw	r2,48(sp)
    139c:	0029883a 	mov	r20,zero
    13a0:	63000094 	ori	r12,r12,2
    13a4:	00800084 	movi	r2,2
    13a8:	07001e04 	movi	fp,120
    13ac:	d8001545 	stb	zero,85(sp)
    13b0:	58ffffe0 	cmpeqi	r3,r11,-1
    13b4:	001b883a 	mov	r13,zero
    13b8:	183fac1e 	bne	r3,zero,126c <___vfprintf_internal_r+0xa3c>
    13bc:	04bfdfc4 	movi	r18,-129
    13c0:	ad06b03a 	or	r3,r21,r20
    13c4:	64a4703a 	and	r18,r12,r18
    13c8:	18018d1e 	bne	r3,zero,1a00 <___vfprintf_internal_r+0x11d0>
    13cc:	5803bb1e 	bne	r11,zero,22bc <___vfprintf_internal_r+0x1a8c>
    13d0:	103ea71e 	bne	r2,zero,e70 <___vfprintf_internal_r+0x640>
    13d4:	6500004c 	andi	r20,r12,1
    13d8:	a0028526 	beq	r20,zero,1df0 <___vfprintf_internal_r+0x15c0>
    13dc:	00800c04 	movi	r2,48
    13e0:	d88028c5 	stb	r2,163(sp)
    13e4:	dc4028c4 	addi	r17,sp,163
    13e8:	00002806 	br	148c <___vfprintf_internal_r+0xc5c>
    13ec:	b2800007 	ldb	r10,0(r22)
    13f0:	50801b18 	cmpnei	r2,r10,108
    13f4:	10032c26 	beq	r2,zero,20a8 <___vfprintf_internal_r+0x1878>
    13f8:	63000414 	ori	r12,r12,16
    13fc:	003d6706 	br	99c <___vfprintf_internal_r+0x16c>
    1400:	63001014 	ori	r12,r12,64
    1404:	b2800007 	ldb	r10,0(r22)
    1408:	003d6406 	br	99c <___vfprintf_internal_r+0x16c>
    140c:	d9000517 	ldw	r4,20(sp)
    1410:	0004aa80 	call	4aa8 <__sinit>
    1414:	003d1f06 	br	894 <___vfprintf_internal_r+0x64>
    1418:	d8c00617 	ldw	r3,24(sp)
    141c:	18800117 	ldw	r2,4(r3)
    1420:	1d400017 	ldw	r21,0(r3)
    1424:	18c00204 	addi	r3,r3,8
    1428:	d8c00615 	stw	r3,24(sp)
    142c:	1029883a 	mov	r20,r2
    1430:	003e8506 	br	e48 <___vfprintf_internal_r+0x618>
    1434:	d8c00617 	ldw	r3,24(sp)
    1438:	0005883a 	mov	r2,zero
    143c:	1d400017 	ldw	r21,0(r3)
    1440:	1d000117 	ldw	r20,4(r3)
    1444:	18c00204 	addi	r3,r3,8
    1448:	d8c00615 	stw	r3,24(sp)
    144c:	003fd706 	br	13ac <___vfprintf_internal_r+0xb7c>
    1450:	d8c00617 	ldw	r3,24(sp)
    1454:	00800044 	movi	r2,1
    1458:	1d400017 	ldw	r21,0(r3)
    145c:	1d000117 	ldw	r20,4(r3)
    1460:	18c00204 	addi	r3,r3,8
    1464:	d8c00615 	stw	r3,24(sp)
    1468:	003fd006 	br	13ac <___vfprintf_internal_r+0xb7c>
    146c:	a000111e 	bne	r20,zero,14b4 <___vfprintf_internal_r+0xc84>
    1470:	a88002a8 	cmpgeui	r2,r21,10
    1474:	10000f1e 	bne	r2,zero,14b4 <___vfprintf_internal_r+0xc84>
    1478:	ad400c04 	addi	r21,r21,48
    147c:	dd4028c5 	stb	r21,163(sp)
    1480:	6025883a 	mov	r18,r12
    1484:	05000044 	movi	r20,1
    1488:	dc4028c4 	addi	r17,sp,163
    148c:	582b883a 	mov	r21,r11
    1490:	5d00010e 	bge	r11,r20,1498 <___vfprintf_internal_r+0xc68>
    1494:	a02b883a 	mov	r21,r20
    1498:	d8000715 	stw	zero,28(sp)
    149c:	6b403fcc 	andi	r13,r13,255
    14a0:	6b40201c 	xori	r13,r13,128
    14a4:	6b7fe004 	addi	r13,r13,-128
    14a8:	683e8126 	beq	r13,zero,eb0 <___vfprintf_internal_r+0x680>
    14ac:	ad400044 	addi	r21,r21,1
    14b0:	003e7f06 	br	eb0 <___vfprintf_internal_r+0x680>
    14b4:	dc000e15 	stw	r16,56(sp)
    14b8:	b823883a 	mov	r17,r23
    14bc:	a021883a 	mov	r16,r20
    14c0:	db000715 	stw	r12,28(sp)
    14c4:	9829883a 	mov	r20,r19
    14c8:	dac00f15 	stw	r11,60(sp)
    14cc:	4025883a 	mov	r18,r8
    14d0:	6827883a 	mov	r19,r13
    14d4:	00000206 	br	14e0 <___vfprintf_internal_r+0xcb0>
    14d8:	102b883a 	mov	r21,r2
    14dc:	1821883a 	mov	r16,r3
    14e0:	a809883a 	mov	r4,r21
    14e4:	800b883a 	mov	r5,r16
    14e8:	01800284 	movi	r6,10
    14ec:	000f883a 	mov	r7,zero
    14f0:	000a0140 	call	a014 <__umoddi3>
    14f4:	10800c04 	addi	r2,r2,48
    14f8:	8c7fffc4 	addi	r17,r17,-1
    14fc:	a809883a 	mov	r4,r21
    1500:	800b883a 	mov	r5,r16
    1504:	88800005 	stb	r2,0(r17)
    1508:	01800284 	movi	r6,10
    150c:	000f883a 	mov	r7,zero
    1510:	00099f80 	call	99f8 <__udivdi3>
    1514:	803ff01e 	bne	r16,zero,14d8 <___vfprintf_internal_r+0xca8>
    1518:	ad4002a8 	cmpgeui	r21,r21,10
    151c:	a83fee1e 	bne	r21,zero,14d8 <___vfprintf_internal_r+0xca8>
    1520:	db000717 	ldw	r12,28(sp)
    1524:	dc000e17 	ldw	r16,56(sp)
    1528:	dac00f17 	ldw	r11,60(sp)
    152c:	981b883a 	mov	r13,r19
    1530:	9011883a 	mov	r8,r18
    1534:	a027883a 	mov	r19,r20
    1538:	bc69c83a 	sub	r20,r23,r17
    153c:	6025883a 	mov	r18,r12
    1540:	003fd206 	br	148c <___vfprintf_internal_r+0xc5c>
    1544:	e2801990 	cmplti	r10,fp,102
    1548:	5000ea1e 	bne	r10,zero,18f4 <___vfprintf_internal_r+0x10c4>
    154c:	d9000917 	ldw	r4,36(sp)
    1550:	d9400a17 	ldw	r5,40(sp)
    1554:	000d883a 	mov	r6,zero
    1558:	000f883a 	mov	r7,zero
    155c:	da000f15 	stw	r8,60(sp)
    1560:	d8c00e15 	stw	r3,56(sp)
    1564:	000b9080 	call	b908 <__eqdf2>
    1568:	d8c00e17 	ldw	r3,56(sp)
    156c:	da000f17 	ldw	r8,60(sp)
    1570:	1001891e 	bne	r2,zero,1b98 <___vfprintf_internal_r+0x1368>
    1574:	d8801d17 	ldw	r2,116(sp)
    1578:	01000074 	movhi	r4,1
    157c:	213d9104 	addi	r4,r4,-2492
    1580:	10800044 	addi	r2,r2,1
    1584:	18c00044 	addi	r3,r3,1
    1588:	41000015 	stw	r4,0(r8)
    158c:	01000044 	movi	r4,1
    1590:	d8801d15 	stw	r2,116(sp)
    1594:	41000115 	stw	r4,4(r8)
    1598:	d8c01e15 	stw	r3,120(sp)
    159c:	10800208 	cmpgei	r2,r2,8
    15a0:	1003351e 	bne	r2,zero,2278 <___vfprintf_internal_r+0x1a48>
    15a4:	42000204 	addi	r8,r8,8
    15a8:	d8801617 	ldw	r2,88(sp)
    15ac:	d8c00817 	ldw	r3,32(sp)
    15b0:	10c00416 	blt	r2,r3,15c4 <___vfprintf_internal_r+0xd94>
    15b4:	9080004c 	andi	r2,r18,1
    15b8:	1000021e 	bne	r2,zero,15c4 <___vfprintf_internal_r+0xd94>
    15bc:	d8c01e17 	ldw	r3,120(sp)
    15c0:	003e6e06 	br	f7c <___vfprintf_internal_r+0x74c>
    15c4:	d8800d17 	ldw	r2,52(sp)
    15c8:	d8c01e17 	ldw	r3,120(sp)
    15cc:	d9000b17 	ldw	r4,44(sp)
    15d0:	40800015 	stw	r2,0(r8)
    15d4:	d8801d17 	ldw	r2,116(sp)
    15d8:	20c7883a 	add	r3,r4,r3
    15dc:	41000115 	stw	r4,4(r8)
    15e0:	10800044 	addi	r2,r2,1
    15e4:	d8801d15 	stw	r2,116(sp)
    15e8:	d8c01e15 	stw	r3,120(sp)
    15ec:	10800208 	cmpgei	r2,r2,8
    15f0:	1002b41e 	bne	r2,zero,20c4 <___vfprintf_internal_r+0x1894>
    15f4:	42000204 	addi	r8,r8,8
    15f8:	d8800817 	ldw	r2,32(sp)
    15fc:	147fffc4 	addi	r17,r2,-1
    1600:	047e5e0e 	bge	zero,r17,f7c <___vfprintf_internal_r+0x74c>
    1604:	03000074 	movhi	r12,1
    1608:	89000450 	cmplti	r4,r17,17
    160c:	633d9184 	addi	r12,r12,-2490
    1610:	d8801d17 	ldw	r2,116(sp)
    1614:	2003791e 	bne	r4,zero,23fc <___vfprintf_internal_r+0x1bcc>
    1618:	dc000715 	stw	r16,28(sp)
    161c:	05000404 	movi	r20,16
    1620:	df000517 	ldw	fp,20(sp)
    1624:	6021883a 	mov	r16,r12
    1628:	00000406 	br	163c <___vfprintf_internal_r+0xe0c>
    162c:	42000204 	addi	r8,r8,8
    1630:	8c7ffc04 	addi	r17,r17,-16
    1634:	89000448 	cmpgei	r4,r17,17
    1638:	20036e26 	beq	r4,zero,23f4 <___vfprintf_internal_r+0x1bc4>
    163c:	10800044 	addi	r2,r2,1
    1640:	18c00404 	addi	r3,r3,16
    1644:	44000015 	stw	r16,0(r8)
    1648:	45000115 	stw	r20,4(r8)
    164c:	d8c01e15 	stw	r3,120(sp)
    1650:	d8801d15 	stw	r2,116(sp)
    1654:	11000208 	cmpgei	r4,r2,8
    1658:	203ff426 	beq	r4,zero,162c <___vfprintf_internal_r+0xdfc>
    165c:	d9801c04 	addi	r6,sp,112
    1660:	980b883a 	mov	r5,r19
    1664:	e009883a 	mov	r4,fp
    1668:	0007b8c0 	call	7b8c <__sprint_r>
    166c:	103d4f1e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1670:	d8c01e17 	ldw	r3,120(sp)
    1674:	d8801d17 	ldw	r2,116(sp)
    1678:	b811883a 	mov	r8,r23
    167c:	003fec06 	br	1630 <___vfprintf_internal_r+0xe00>
    1680:	854fc83a 	sub	r7,r16,r21
    1684:	01fe2f0e 	bge	zero,r7,f44 <___vfprintf_internal_r+0x714>
    1688:	03000074 	movhi	r12,1
    168c:	39000450 	cmplti	r4,r7,17
    1690:	633d9184 	addi	r12,r12,-2490
    1694:	d8801d17 	ldw	r2,116(sp)
    1698:	2000271e 	bne	r4,zero,1738 <___vfprintf_internal_r+0xf08>
    169c:	dc400e15 	stw	r17,56(sp)
    16a0:	dc800f15 	stw	r18,60(sp)
    16a4:	dc001015 	stw	r16,64(sp)
    16a8:	03400404 	movi	r13,16
    16ac:	3821883a 	mov	r16,r7
    16b0:	dac01215 	stw	r11,72(sp)
    16b4:	dc400517 	ldw	r17,20(sp)
    16b8:	6025883a 	mov	r18,r12
    16bc:	00000406 	br	16d0 <___vfprintf_internal_r+0xea0>
    16c0:	843ffc04 	addi	r16,r16,-16
    16c4:	81000448 	cmpgei	r4,r16,17
    16c8:	42000204 	addi	r8,r8,8
    16cc:	20001426 	beq	r4,zero,1720 <___vfprintf_internal_r+0xef0>
    16d0:	10800044 	addi	r2,r2,1
    16d4:	18c00404 	addi	r3,r3,16
    16d8:	44800015 	stw	r18,0(r8)
    16dc:	43400115 	stw	r13,4(r8)
    16e0:	d8c01e15 	stw	r3,120(sp)
    16e4:	d8801d15 	stw	r2,116(sp)
    16e8:	11000208 	cmpgei	r4,r2,8
    16ec:	203ff426 	beq	r4,zero,16c0 <___vfprintf_internal_r+0xe90>
    16f0:	d9801c04 	addi	r6,sp,112
    16f4:	980b883a 	mov	r5,r19
    16f8:	8809883a 	mov	r4,r17
    16fc:	0007b8c0 	call	7b8c <__sprint_r>
    1700:	103d2a1e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1704:	843ffc04 	addi	r16,r16,-16
    1708:	81000448 	cmpgei	r4,r16,17
    170c:	d8c01e17 	ldw	r3,120(sp)
    1710:	d8801d17 	ldw	r2,116(sp)
    1714:	b811883a 	mov	r8,r23
    1718:	03400404 	movi	r13,16
    171c:	203fec1e 	bne	r4,zero,16d0 <___vfprintf_internal_r+0xea0>
    1720:	800f883a 	mov	r7,r16
    1724:	9019883a 	mov	r12,r18
    1728:	dc400e17 	ldw	r17,56(sp)
    172c:	dc001017 	ldw	r16,64(sp)
    1730:	dac01217 	ldw	r11,72(sp)
    1734:	dc800f17 	ldw	r18,60(sp)
    1738:	10800044 	addi	r2,r2,1
    173c:	19c7883a 	add	r3,r3,r7
    1740:	d8801d15 	stw	r2,116(sp)
    1744:	43000015 	stw	r12,0(r8)
    1748:	41c00115 	stw	r7,4(r8)
    174c:	d8c01e15 	stw	r3,120(sp)
    1750:	10800208 	cmpgei	r2,r2,8
    1754:	1002cf1e 	bne	r2,zero,2294 <___vfprintf_internal_r+0x1a64>
    1758:	5d0fc83a 	sub	r7,r11,r20
    175c:	42000204 	addi	r8,r8,8
    1760:	01fdfa0e 	bge	zero,r7,f4c <___vfprintf_internal_r+0x71c>
    1764:	03000074 	movhi	r12,1
    1768:	39000450 	cmplti	r4,r7,17
    176c:	633d9184 	addi	r12,r12,-2490
    1770:	d8801d17 	ldw	r2,116(sp)
    1774:	2000251e 	bne	r4,zero,180c <___vfprintf_internal_r+0xfdc>
    1778:	dc400e15 	stw	r17,56(sp)
    177c:	dc800f15 	stw	r18,60(sp)
    1780:	dc001015 	stw	r16,64(sp)
    1784:	02c00404 	movi	r11,16
    1788:	3821883a 	mov	r16,r7
    178c:	dc400517 	ldw	r17,20(sp)
    1790:	6025883a 	mov	r18,r12
    1794:	00000406 	br	17a8 <___vfprintf_internal_r+0xf78>
    1798:	843ffc04 	addi	r16,r16,-16
    179c:	81000448 	cmpgei	r4,r16,17
    17a0:	42000204 	addi	r8,r8,8
    17a4:	20001426 	beq	r4,zero,17f8 <___vfprintf_internal_r+0xfc8>
    17a8:	10800044 	addi	r2,r2,1
    17ac:	18c00404 	addi	r3,r3,16
    17b0:	44800015 	stw	r18,0(r8)
    17b4:	42c00115 	stw	r11,4(r8)
    17b8:	d8c01e15 	stw	r3,120(sp)
    17bc:	d8801d15 	stw	r2,116(sp)
    17c0:	11000208 	cmpgei	r4,r2,8
    17c4:	203ff426 	beq	r4,zero,1798 <___vfprintf_internal_r+0xf68>
    17c8:	d9801c04 	addi	r6,sp,112
    17cc:	980b883a 	mov	r5,r19
    17d0:	8809883a 	mov	r4,r17
    17d4:	0007b8c0 	call	7b8c <__sprint_r>
    17d8:	103cf41e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    17dc:	843ffc04 	addi	r16,r16,-16
    17e0:	81000448 	cmpgei	r4,r16,17
    17e4:	d8c01e17 	ldw	r3,120(sp)
    17e8:	d8801d17 	ldw	r2,116(sp)
    17ec:	b811883a 	mov	r8,r23
    17f0:	02c00404 	movi	r11,16
    17f4:	203fec1e 	bne	r4,zero,17a8 <___vfprintf_internal_r+0xf78>
    17f8:	800f883a 	mov	r7,r16
    17fc:	9019883a 	mov	r12,r18
    1800:	dc400e17 	ldw	r17,56(sp)
    1804:	dc001017 	ldw	r16,64(sp)
    1808:	dc800f17 	ldw	r18,60(sp)
    180c:	10800044 	addi	r2,r2,1
    1810:	19c7883a 	add	r3,r3,r7
    1814:	d8801d15 	stw	r2,116(sp)
    1818:	43000015 	stw	r12,0(r8)
    181c:	41c00115 	stw	r7,4(r8)
    1820:	d8c01e15 	stw	r3,120(sp)
    1824:	10800208 	cmpgei	r2,r2,8
    1828:	1001651e 	bne	r2,zero,1dc0 <___vfprintf_internal_r+0x1590>
    182c:	42000204 	addi	r8,r8,8
    1830:	003dc606 	br	f4c <___vfprintf_internal_r+0x71c>
    1834:	d9000517 	ldw	r4,20(sp)
    1838:	d9801c04 	addi	r6,sp,112
    183c:	980b883a 	mov	r5,r19
    1840:	0007b8c0 	call	7b8c <__sprint_r>
    1844:	103dd726 	beq	r2,zero,fa4 <___vfprintf_internal_r+0x774>
    1848:	003cd806 	br	bac <___vfprintf_internal_r+0x37c>
    184c:	d9000517 	ldw	r4,20(sp)
    1850:	d9801c04 	addi	r6,sp,112
    1854:	980b883a 	mov	r5,r19
    1858:	0007b8c0 	call	7b8c <__sprint_r>
    185c:	103cd31e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1860:	d9001617 	ldw	r4,88(sp)
    1864:	d8c01e17 	ldw	r3,120(sp)
    1868:	b811883a 	mov	r8,r23
    186c:	2002971e 	bne	r4,zero,22cc <___vfprintf_internal_r+0x1a9c>
    1870:	d9000817 	ldw	r4,32(sp)
    1874:	9080004c 	andi	r2,r18,1
    1878:	1104b03a 	or	r2,r2,r4
    187c:	103dbf26 	beq	r2,zero,f7c <___vfprintf_internal_r+0x74c>
    1880:	d8800d17 	ldw	r2,52(sp)
    1884:	d9000b17 	ldw	r4,44(sp)
    1888:	40800015 	stw	r2,0(r8)
    188c:	d8801d17 	ldw	r2,116(sp)
    1890:	20c7883a 	add	r3,r4,r3
    1894:	41000115 	stw	r4,4(r8)
    1898:	10800044 	addi	r2,r2,1
    189c:	d8c01e15 	stw	r3,120(sp)
    18a0:	d8801d15 	stw	r2,116(sp)
    18a4:	11000208 	cmpgei	r4,r2,8
    18a8:	2003691e 	bne	r4,zero,2650 <___vfprintf_internal_r+0x1e20>
    18ac:	42000204 	addi	r8,r8,8
    18b0:	d9000817 	ldw	r4,32(sp)
    18b4:	10800044 	addi	r2,r2,1
    18b8:	d8801d15 	stw	r2,116(sp)
    18bc:	20c7883a 	add	r3,r4,r3
    18c0:	44400015 	stw	r17,0(r8)
    18c4:	41000115 	stw	r4,4(r8)
    18c8:	d8c01e15 	stw	r3,120(sp)
    18cc:	10800208 	cmpgei	r2,r2,8
    18d0:	103da926 	beq	r2,zero,f78 <___vfprintf_internal_r+0x748>
    18d4:	d9000517 	ldw	r4,20(sp)
    18d8:	d9801c04 	addi	r6,sp,112
    18dc:	980b883a 	mov	r5,r19
    18e0:	0007b8c0 	call	7b8c <__sprint_r>
    18e4:	103cb11e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    18e8:	d8c01e17 	ldw	r3,120(sp)
    18ec:	b811883a 	mov	r8,r23
    18f0:	003da206 	br	f7c <___vfprintf_internal_r+0x74c>
    18f4:	d8800817 	ldw	r2,32(sp)
    18f8:	da801d17 	ldw	r10,116(sp)
    18fc:	18c00044 	addi	r3,r3,1
    1900:	10800088 	cmpgei	r2,r2,2
    1904:	55000044 	addi	r20,r10,1
    1908:	47000204 	addi	fp,r8,8
    190c:	1000fb26 	beq	r2,zero,1cfc <___vfprintf_internal_r+0x14cc>
    1910:	00800044 	movi	r2,1
    1914:	40800115 	stw	r2,4(r8)
    1918:	44400015 	stw	r17,0(r8)
    191c:	d8c01e15 	stw	r3,120(sp)
    1920:	dd001d15 	stw	r20,116(sp)
    1924:	a0800210 	cmplti	r2,r20,8
    1928:	10022e26 	beq	r2,zero,21e4 <___vfprintf_internal_r+0x19b4>
    192c:	d8800b17 	ldw	r2,44(sp)
    1930:	d9000d17 	ldw	r4,52(sp)
    1934:	a5000044 	addi	r20,r20,1
    1938:	1887883a 	add	r3,r3,r2
    193c:	e0800115 	stw	r2,4(fp)
    1940:	e1000015 	stw	r4,0(fp)
    1944:	d8c01e15 	stw	r3,120(sp)
    1948:	dd001d15 	stw	r20,116(sp)
    194c:	a0800208 	cmpgei	r2,r20,8
    1950:	10021b1e 	bne	r2,zero,21c0 <___vfprintf_internal_r+0x1990>
    1954:	e7000204 	addi	fp,fp,8
    1958:	d8800817 	ldw	r2,32(sp)
    195c:	d9000917 	ldw	r4,36(sp)
    1960:	d9400a17 	ldw	r5,40(sp)
    1964:	a2800044 	addi	r10,r20,1
    1968:	e2000204 	addi	r8,fp,8
    196c:	12ffffc4 	addi	r11,r2,-1
    1970:	000d883a 	mov	r6,zero
    1974:	000f883a 	mov	r7,zero
    1978:	d8c01215 	stw	r3,72(sp)
    197c:	da801015 	stw	r10,64(sp)
    1980:	da800f15 	stw	r10,60(sp)
    1984:	da000e15 	stw	r8,56(sp)
    1988:	dac00715 	stw	r11,28(sp)
    198c:	000b9080 	call	b908 <__eqdf2>
    1990:	dac00717 	ldw	r11,28(sp)
    1994:	da000e17 	ldw	r8,56(sp)
    1998:	db400f17 	ldw	r13,60(sp)
    199c:	da801017 	ldw	r10,64(sp)
    19a0:	d8c01217 	ldw	r3,72(sp)
    19a4:	1000e126 	beq	r2,zero,1d2c <___vfprintf_internal_r+0x14fc>
    19a8:	8c400044 	addi	r17,r17,1
    19ac:	1ac7883a 	add	r3,r3,r11
    19b0:	da801d15 	stw	r10,116(sp)
    19b4:	e4400015 	stw	r17,0(fp)
    19b8:	e2c00115 	stw	r11,4(fp)
    19bc:	d8c01e15 	stw	r3,120(sp)
    19c0:	52800208 	cmpgei	r10,r10,8
    19c4:	5001ad1e 	bne	r10,zero,207c <___vfprintf_internal_r+0x184c>
    19c8:	e0800404 	addi	r2,fp,16
    19cc:	a2800084 	addi	r10,r20,2
    19d0:	4039883a 	mov	fp,r8
    19d4:	1011883a 	mov	r8,r2
    19d8:	d9001117 	ldw	r4,68(sp)
    19dc:	d8801844 	addi	r2,sp,97
    19e0:	da801d15 	stw	r10,116(sp)
    19e4:	20c7883a 	add	r3,r4,r3
    19e8:	e0800015 	stw	r2,0(fp)
    19ec:	e1000115 	stw	r4,4(fp)
    19f0:	d8c01e15 	stw	r3,120(sp)
    19f4:	52800210 	cmplti	r10,r10,8
    19f8:	503d601e 	bne	r10,zero,f7c <___vfprintf_internal_r+0x74c>
    19fc:	003fb506 	br	18d4 <___vfprintf_internal_r+0x10a4>
    1a00:	9019883a 	mov	r12,r18
    1a04:	003e1906 	br	126c <___vfprintf_internal_r+0xa3c>
    1a08:	03000074 	movhi	r12,1
    1a0c:	39000450 	cmplti	r4,r7,17
    1a10:	633d9584 	addi	r12,r12,-2474
    1a14:	d8801d17 	ldw	r2,116(sp)
    1a18:	20002b1e 	bne	r4,zero,1ac8 <___vfprintf_internal_r+0x1298>
    1a1c:	dc401015 	stw	r17,64(sp)
    1a20:	dc801215 	stw	r18,72(sp)
    1a24:	dc001315 	stw	r16,76(sp)
    1a28:	03c00404 	movi	r15,16
    1a2c:	db800e15 	stw	r14,56(sp)
    1a30:	db400f15 	stw	r13,60(sp)
    1a34:	dac01415 	stw	r11,80(sp)
    1a38:	3821883a 	mov	r16,r7
    1a3c:	dc400517 	ldw	r17,20(sp)
    1a40:	6025883a 	mov	r18,r12
    1a44:	00000406 	br	1a58 <___vfprintf_internal_r+0x1228>
    1a48:	843ffc04 	addi	r16,r16,-16
    1a4c:	81000448 	cmpgei	r4,r16,17
    1a50:	42000204 	addi	r8,r8,8
    1a54:	20001426 	beq	r4,zero,1aa8 <___vfprintf_internal_r+0x1278>
    1a58:	10800044 	addi	r2,r2,1
    1a5c:	18c00404 	addi	r3,r3,16
    1a60:	44800015 	stw	r18,0(r8)
    1a64:	43c00115 	stw	r15,4(r8)
    1a68:	d8c01e15 	stw	r3,120(sp)
    1a6c:	d8801d15 	stw	r2,116(sp)
    1a70:	11000208 	cmpgei	r4,r2,8
    1a74:	203ff426 	beq	r4,zero,1a48 <___vfprintf_internal_r+0x1218>
    1a78:	d9801c04 	addi	r6,sp,112
    1a7c:	980b883a 	mov	r5,r19
    1a80:	8809883a 	mov	r4,r17
    1a84:	0007b8c0 	call	7b8c <__sprint_r>
    1a88:	103c481e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1a8c:	843ffc04 	addi	r16,r16,-16
    1a90:	81000448 	cmpgei	r4,r16,17
    1a94:	d8c01e17 	ldw	r3,120(sp)
    1a98:	d8801d17 	ldw	r2,116(sp)
    1a9c:	b811883a 	mov	r8,r23
    1aa0:	03c00404 	movi	r15,16
    1aa4:	203fec1e 	bne	r4,zero,1a58 <___vfprintf_internal_r+0x1228>
    1aa8:	800f883a 	mov	r7,r16
    1aac:	9019883a 	mov	r12,r18
    1ab0:	db800e17 	ldw	r14,56(sp)
    1ab4:	db400f17 	ldw	r13,60(sp)
    1ab8:	dc401017 	ldw	r17,64(sp)
    1abc:	dac01417 	ldw	r11,80(sp)
    1ac0:	dc001317 	ldw	r16,76(sp)
    1ac4:	dc801217 	ldw	r18,72(sp)
    1ac8:	10800044 	addi	r2,r2,1
    1acc:	19c7883a 	add	r3,r3,r7
    1ad0:	d8801d15 	stw	r2,116(sp)
    1ad4:	43000015 	stw	r12,0(r8)
    1ad8:	41c00115 	stw	r7,4(r8)
    1adc:	d8c01e15 	stw	r3,120(sp)
    1ae0:	10800208 	cmpgei	r2,r2,8
    1ae4:	1001d61e 	bne	r2,zero,2240 <___vfprintf_internal_r+0x1a10>
    1ae8:	42000204 	addi	r8,r8,8
    1aec:	003cf806 	br	ed0 <___vfprintf_internal_r+0x6a0>
    1af0:	d9000517 	ldw	r4,20(sp)
    1af4:	d9801c04 	addi	r6,sp,112
    1af8:	980b883a 	mov	r5,r19
    1afc:	dac01015 	stw	r11,64(sp)
    1b00:	db400f15 	stw	r13,60(sp)
    1b04:	db800e15 	stw	r14,56(sp)
    1b08:	0007b8c0 	call	7b8c <__sprint_r>
    1b0c:	103c271e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1b10:	d8c01e17 	ldw	r3,120(sp)
    1b14:	b811883a 	mov	r8,r23
    1b18:	dac01017 	ldw	r11,64(sp)
    1b1c:	db400f17 	ldw	r13,60(sp)
    1b20:	db800e17 	ldw	r14,56(sp)
    1b24:	003cf806 	br	f08 <___vfprintf_internal_r+0x6d8>
    1b28:	d9000517 	ldw	r4,20(sp)
    1b2c:	d9801c04 	addi	r6,sp,112
    1b30:	980b883a 	mov	r5,r19
    1b34:	dac00f15 	stw	r11,60(sp)
    1b38:	db400e15 	stw	r13,56(sp)
    1b3c:	0007b8c0 	call	7b8c <__sprint_r>
    1b40:	103c1a1e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1b44:	d8c01e17 	ldw	r3,120(sp)
    1b48:	b811883a 	mov	r8,r23
    1b4c:	dac00f17 	ldw	r11,60(sp)
    1b50:	db400e17 	ldw	r13,56(sp)
    1b54:	003cf906 	br	f3c <___vfprintf_internal_r+0x70c>
    1b58:	d9000c17 	ldw	r4,48(sp)
    1b5c:	b823883a 	mov	r17,r23
    1b60:	a88003cc 	andi	r2,r21,15
    1b64:	a006973a 	slli	r3,r20,28
    1b68:	2085883a 	add	r2,r4,r2
    1b6c:	a82ad13a 	srli	r21,r21,4
    1b70:	10800003 	ldbu	r2,0(r2)
    1b74:	a028d13a 	srli	r20,r20,4
    1b78:	8c7fffc4 	addi	r17,r17,-1
    1b7c:	1d6ab03a 	or	r21,r3,r21
    1b80:	88800005 	stb	r2,0(r17)
    1b84:	ad04b03a 	or	r2,r21,r20
    1b88:	103ff51e 	bne	r2,zero,1b60 <___vfprintf_internal_r+0x1330>
    1b8c:	bc69c83a 	sub	r20,r23,r17
    1b90:	6025883a 	mov	r18,r12
    1b94:	003e3d06 	br	148c <___vfprintf_internal_r+0xc5c>
    1b98:	d9001617 	ldw	r4,88(sp)
    1b9c:	01019a0e 	bge	zero,r4,2208 <___vfprintf_internal_r+0x19d8>
    1ba0:	d8800717 	ldw	r2,28(sp)
    1ba4:	d9000817 	ldw	r4,32(sp)
    1ba8:	1039883a 	mov	fp,r2
    1bac:	20812816 	blt	r4,r2,2050 <___vfprintf_internal_r+0x1820>
    1bb0:	07000a0e 	bge	zero,fp,1bdc <___vfprintf_internal_r+0x13ac>
    1bb4:	d8801d17 	ldw	r2,116(sp)
    1bb8:	1f07883a 	add	r3,r3,fp
    1bbc:	44400015 	stw	r17,0(r8)
    1bc0:	10800044 	addi	r2,r2,1
    1bc4:	d8801d15 	stw	r2,116(sp)
    1bc8:	47000115 	stw	fp,4(r8)
    1bcc:	d8c01e15 	stw	r3,120(sp)
    1bd0:	10800208 	cmpgei	r2,r2,8
    1bd4:	1002de1e 	bne	r2,zero,2750 <___vfprintf_internal_r+0x1f20>
    1bd8:	42000204 	addi	r8,r8,8
    1bdc:	e0014116 	blt	fp,zero,20e4 <___vfprintf_internal_r+0x18b4>
    1be0:	d8800717 	ldw	r2,28(sp)
    1be4:	1739c83a 	sub	fp,r2,fp
    1be8:	07014816 	blt	zero,fp,210c <___vfprintf_internal_r+0x18dc>
    1bec:	d9001617 	ldw	r4,88(sp)
    1bf0:	d8800817 	ldw	r2,32(sp)
    1bf4:	2081190e 	bge	r4,r2,205c <___vfprintf_internal_r+0x182c>
    1bf8:	d8800d17 	ldw	r2,52(sp)
    1bfc:	d9400b17 	ldw	r5,44(sp)
    1c00:	40800015 	stw	r2,0(r8)
    1c04:	d8801d17 	ldw	r2,116(sp)
    1c08:	1947883a 	add	r3,r3,r5
    1c0c:	41400115 	stw	r5,4(r8)
    1c10:	10800044 	addi	r2,r2,1
    1c14:	d8801d15 	stw	r2,116(sp)
    1c18:	d8c01e15 	stw	r3,120(sp)
    1c1c:	10800208 	cmpgei	r2,r2,8
    1c20:	1002651e 	bne	r2,zero,25b8 <___vfprintf_internal_r+0x1d88>
    1c24:	42000204 	addi	r8,r8,8
    1c28:	d8800817 	ldw	r2,32(sp)
    1c2c:	d9400717 	ldw	r5,28(sp)
    1c30:	1105c83a 	sub	r2,r2,r4
    1c34:	29015e0e 	bge	r5,r4,21b0 <___vfprintf_internal_r+0x1980>
    1c38:	1039883a 	mov	fp,r2
    1c3c:	07000c0e 	bge	zero,fp,1c70 <___vfprintf_internal_r+0x1440>
    1c40:	d9000717 	ldw	r4,28(sp)
    1c44:	1f07883a 	add	r3,r3,fp
    1c48:	47000115 	stw	fp,4(r8)
    1c4c:	8923883a 	add	r17,r17,r4
    1c50:	d9001d17 	ldw	r4,116(sp)
    1c54:	44400015 	stw	r17,0(r8)
    1c58:	d8c01e15 	stw	r3,120(sp)
    1c5c:	21000044 	addi	r4,r4,1
    1c60:	d9001d15 	stw	r4,116(sp)
    1c64:	21000208 	cmpgei	r4,r4,8
    1c68:	2002c41e 	bne	r4,zero,277c <___vfprintf_internal_r+0x1f4c>
    1c6c:	42000204 	addi	r8,r8,8
    1c70:	e000010e 	bge	fp,zero,1c78 <___vfprintf_internal_r+0x1448>
    1c74:	0039883a 	mov	fp,zero
    1c78:	1739c83a 	sub	fp,r2,fp
    1c7c:	073cbf0e 	bge	zero,fp,f7c <___vfprintf_internal_r+0x74c>
    1c80:	03000074 	movhi	r12,1
    1c84:	e1000450 	cmplti	r4,fp,17
    1c88:	633d9184 	addi	r12,r12,-2490
    1c8c:	d8801d17 	ldw	r2,116(sp)
    1c90:	2002401e 	bne	r4,zero,2594 <___vfprintf_internal_r+0x1d64>
    1c94:	dc000715 	stw	r16,28(sp)
    1c98:	05000404 	movi	r20,16
    1c9c:	dc400517 	ldw	r17,20(sp)
    1ca0:	6021883a 	mov	r16,r12
    1ca4:	00000406 	br	1cb8 <___vfprintf_internal_r+0x1488>
    1ca8:	42000204 	addi	r8,r8,8
    1cac:	e73ffc04 	addi	fp,fp,-16
    1cb0:	e1000448 	cmpgei	r4,fp,17
    1cb4:	20023526 	beq	r4,zero,258c <___vfprintf_internal_r+0x1d5c>
    1cb8:	10800044 	addi	r2,r2,1
    1cbc:	18c00404 	addi	r3,r3,16
    1cc0:	44000015 	stw	r16,0(r8)
    1cc4:	45000115 	stw	r20,4(r8)
    1cc8:	d8c01e15 	stw	r3,120(sp)
    1ccc:	d8801d15 	stw	r2,116(sp)
    1cd0:	11000208 	cmpgei	r4,r2,8
    1cd4:	203ff426 	beq	r4,zero,1ca8 <___vfprintf_internal_r+0x1478>
    1cd8:	d9801c04 	addi	r6,sp,112
    1cdc:	980b883a 	mov	r5,r19
    1ce0:	8809883a 	mov	r4,r17
    1ce4:	0007b8c0 	call	7b8c <__sprint_r>
    1ce8:	103bb01e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1cec:	d8c01e17 	ldw	r3,120(sp)
    1cf0:	d8801d17 	ldw	r2,116(sp)
    1cf4:	b811883a 	mov	r8,r23
    1cf8:	003fec06 	br	1cac <___vfprintf_internal_r+0x147c>
    1cfc:	9080004c 	andi	r2,r18,1
    1d00:	103f031e 	bne	r2,zero,1910 <___vfprintf_internal_r+0x10e0>
    1d04:	00800044 	movi	r2,1
    1d08:	dd001d15 	stw	r20,116(sp)
    1d0c:	44400015 	stw	r17,0(r8)
    1d10:	40800115 	stw	r2,4(r8)
    1d14:	d8c01e15 	stw	r3,120(sp)
    1d18:	a5000208 	cmpgei	r20,r20,8
    1d1c:	a000d71e 	bne	r20,zero,207c <___vfprintf_internal_r+0x184c>
    1d20:	52800084 	addi	r10,r10,2
    1d24:	42000404 	addi	r8,r8,16
    1d28:	003f2b06 	br	19d8 <___vfprintf_internal_r+0x11a8>
    1d2c:	02ff2a0e 	bge	zero,r11,19d8 <___vfprintf_internal_r+0x11a8>
    1d30:	58800450 	cmplti	r2,r11,17
    1d34:	03000074 	movhi	r12,1
    1d38:	1002fe1e 	bne	r2,zero,2934 <___vfprintf_internal_r+0x2104>
    1d3c:	633d9184 	addi	r12,r12,-2490
    1d40:	dd400715 	stw	r21,28(sp)
    1d44:	dc800e15 	stw	r18,56(sp)
    1d48:	e005883a 	mov	r2,fp
    1d4c:	04400404 	movi	r17,16
    1d50:	b039883a 	mov	fp,r22
    1d54:	5825883a 	mov	r18,r11
    1d58:	802d883a 	mov	r22,r16
    1d5c:	602b883a 	mov	r21,r12
    1d60:	dc000517 	ldw	r16,20(sp)
    1d64:	6829883a 	mov	r20,r13
    1d68:	00000506 	br	1d80 <___vfprintf_internal_r+0x1550>
    1d6c:	10800204 	addi	r2,r2,8
    1d70:	94bffc04 	addi	r18,r18,-16
    1d74:	91000448 	cmpgei	r4,r18,17
    1d78:	20018a26 	beq	r4,zero,23a4 <___vfprintf_internal_r+0x1b74>
    1d7c:	a5000044 	addi	r20,r20,1
    1d80:	18c00404 	addi	r3,r3,16
    1d84:	15400015 	stw	r21,0(r2)
    1d88:	14400115 	stw	r17,4(r2)
    1d8c:	d8c01e15 	stw	r3,120(sp)
    1d90:	dd001d15 	stw	r20,116(sp)
    1d94:	a1000208 	cmpgei	r4,r20,8
    1d98:	203ff426 	beq	r4,zero,1d6c <___vfprintf_internal_r+0x153c>
    1d9c:	d9801c04 	addi	r6,sp,112
    1da0:	980b883a 	mov	r5,r19
    1da4:	8009883a 	mov	r4,r16
    1da8:	0007b8c0 	call	7b8c <__sprint_r>
    1dac:	103b7f1e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1db0:	dd001d17 	ldw	r20,116(sp)
    1db4:	d8c01e17 	ldw	r3,120(sp)
    1db8:	b805883a 	mov	r2,r23
    1dbc:	003fec06 	br	1d70 <___vfprintf_internal_r+0x1540>
    1dc0:	d9000517 	ldw	r4,20(sp)
    1dc4:	d9801c04 	addi	r6,sp,112
    1dc8:	980b883a 	mov	r5,r19
    1dcc:	0007b8c0 	call	7b8c <__sprint_r>
    1dd0:	103b761e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    1dd4:	d8c01e17 	ldw	r3,120(sp)
    1dd8:	b811883a 	mov	r8,r23
    1ddc:	003c5b06 	br	f4c <___vfprintf_internal_r+0x71c>
    1de0:	0029883a 	mov	r20,zero
    1de4:	003bdc06 	br	d58 <___vfprintf_internal_r+0x528>
    1de8:	b023883a 	mov	r17,r22
    1dec:	003ae306 	br	97c <___vfprintf_internal_r+0x14c>
    1df0:	b823883a 	mov	r17,r23
    1df4:	003da506 	br	148c <___vfprintf_internal_r+0xc5c>
    1df8:	d9000917 	ldw	r4,36(sp)
    1dfc:	d9400a17 	ldw	r5,40(sp)
    1e00:	da000f15 	stw	r8,60(sp)
    1e04:	200d883a 	mov	r6,r4
    1e08:	280f883a 	mov	r7,r5
    1e0c:	dac00e15 	stw	r11,56(sp)
    1e10:	db000715 	stw	r12,28(sp)
    1e14:	000ccb40 	call	ccb4 <__unorddf2>
    1e18:	db000717 	ldw	r12,28(sp)
    1e1c:	dac00e17 	ldw	r11,56(sp)
    1e20:	da000f17 	ldw	r8,60(sp)
    1e24:	1002b21e 	bne	r2,zero,28f0 <___vfprintf_internal_r+0x20c0>
    1e28:	00fff7c4 	movi	r3,-33
    1e2c:	e0c6703a 	and	r3,fp,r3
    1e30:	58bfffe0 	cmpeqi	r2,r11,-1
    1e34:	d8c00715 	stw	r3,28(sp)
    1e38:	10024e1e 	bne	r2,zero,2774 <___vfprintf_internal_r+0x1f44>
    1e3c:	188011d8 	cmpnei	r2,r3,71
    1e40:	10020026 	beq	r2,zero,2644 <___vfprintf_internal_r+0x1e14>
    1e44:	d8800a17 	ldw	r2,40(sp)
    1e48:	64804014 	ori	r18,r12,256
    1e4c:	1001e316 	blt	r2,zero,25dc <___vfprintf_internal_r+0x1dac>
    1e50:	dd400a17 	ldw	r21,40(sp)
    1e54:	d8000e05 	stb	zero,56(sp)
    1e58:	e08019a0 	cmpeqi	r2,fp,102
    1e5c:	d8800f15 	stw	r2,60(sp)
    1e60:	1001771e 	bne	r2,zero,2440 <___vfprintf_internal_r+0x1c10>
    1e64:	e08011a0 	cmpeqi	r2,fp,70
    1e68:	1001751e 	bne	r2,zero,2440 <___vfprintf_internal_r+0x1c10>
    1e6c:	d8800717 	ldw	r2,28(sp)
    1e70:	da001215 	stw	r8,72(sp)
    1e74:	db001015 	stw	r12,64(sp)
    1e78:	10801158 	cmpnei	r2,r2,69
    1e7c:	10020726 	beq	r2,zero,269c <___vfprintf_internal_r+0x1e6c>
    1e80:	d8801a04 	addi	r2,sp,104
    1e84:	d8800315 	stw	r2,12(sp)
    1e88:	d9400917 	ldw	r5,36(sp)
    1e8c:	d8801704 	addi	r2,sp,92
    1e90:	d9000517 	ldw	r4,20(sp)
    1e94:	d8800215 	stw	r2,8(sp)
    1e98:	d8801604 	addi	r2,sp,88
    1e9c:	dac00015 	stw	r11,0(sp)
    1ea0:	d8800115 	stw	r2,4(sp)
    1ea4:	01c00084 	movi	r7,2
    1ea8:	a80d883a 	mov	r6,r21
    1eac:	dac00815 	stw	r11,32(sp)
    1eb0:	0002e240 	call	2e24 <_dtoa_r>
    1eb4:	dac00817 	ldw	r11,32(sp)
    1eb8:	1023883a 	mov	r17,r2
    1ebc:	e08019d8 	cmpnei	r2,fp,103
    1ec0:	db001017 	ldw	r12,64(sp)
    1ec4:	da001217 	ldw	r8,72(sp)
    1ec8:	5829883a 	mov	r20,r11
    1ecc:	1002051e 	bne	r2,zero,26e4 <___vfprintf_internal_r+0x1eb4>
    1ed0:	6080004c 	andi	r2,r12,1
    1ed4:	1002051e 	bne	r2,zero,26ec <___vfprintf_internal_r+0x1ebc>
    1ed8:	d8c01617 	ldw	r3,88(sp)
    1edc:	d8800717 	ldw	r2,28(sp)
    1ee0:	d8c00715 	stw	r3,28(sp)
    1ee4:	d8c01a17 	ldw	r3,104(sp)
    1ee8:	108011e0 	cmpeqi	r2,r2,71
    1eec:	1c47c83a 	sub	r3,r3,r17
    1ef0:	d8c00815 	stw	r3,32(sp)
    1ef4:	10000526 	beq	r2,zero,1f0c <___vfprintf_internal_r+0x16dc>
    1ef8:	d8c00717 	ldw	r3,28(sp)
    1efc:	18bfff50 	cmplti	r2,r3,-3
    1f00:	1000011e 	bne	r2,zero,1f08 <___vfprintf_internal_r+0x16d8>
    1f04:	58c2070e 	bge	r11,r3,2724 <___vfprintf_internal_r+0x1ef4>
    1f08:	e73fff84 	addi	fp,fp,-2
    1f0c:	d8800717 	ldw	r2,28(sp)
    1f10:	df001845 	stb	fp,97(sp)
    1f14:	153fffc4 	addi	r20,r2,-1
    1f18:	dd001615 	stw	r20,88(sp)
    1f1c:	a0027c16 	blt	r20,zero,2910 <___vfprintf_internal_r+0x20e0>
    1f20:	00800ac4 	movi	r2,43
    1f24:	d8801885 	stb	r2,98(sp)
    1f28:	a0800290 	cmplti	r2,r20,10
    1f2c:	10025b1e 	bne	r2,zero,289c <___vfprintf_internal_r+0x206c>
    1f30:	dc000f15 	stw	r16,60(sp)
    1f34:	dd401bc4 	addi	r21,sp,111
    1f38:	a021883a 	mov	r16,r20
    1f3c:	db000715 	stw	r12,28(sp)
    1f40:	9829883a 	mov	r20,r19
    1f44:	4027883a 	mov	r19,r8
    1f48:	00000206 	br	1f54 <___vfprintf_internal_r+0x1724>
    1f4c:	202b883a 	mov	r21,r4
    1f50:	1021883a 	mov	r16,r2
    1f54:	8009883a 	mov	r4,r16
    1f58:	01400284 	movi	r5,10
    1f5c:	000051c0 	call	51c <__modsi3>
    1f60:	10800c04 	addi	r2,r2,48
    1f64:	8009883a 	mov	r4,r16
    1f68:	a8bfffc5 	stb	r2,-1(r21)
    1f6c:	01400284 	movi	r5,10
    1f70:	000049c0 	call	49c <__divsi3>
    1f74:	80c01908 	cmpgei	r3,r16,100
    1f78:	a93fffc4 	addi	r4,r21,-1
    1f7c:	183ff31e 	bne	r3,zero,1f4c <___vfprintf_internal_r+0x171c>
    1f80:	10800c04 	addi	r2,r2,48
    1f84:	20bfffc5 	stb	r2,-1(r4)
    1f88:	a8ffff84 	addi	r3,r21,-2
    1f8c:	d9001bc4 	addi	r4,sp,111
    1f90:	9811883a 	mov	r8,r19
    1f94:	db000717 	ldw	r12,28(sp)
    1f98:	dc000f17 	ldw	r16,60(sp)
    1f9c:	a027883a 	mov	r19,r20
    1fa0:	1902762e 	bgeu	r3,r4,297c <___vfprintf_internal_r+0x214c>
    1fa4:	d90018c4 	addi	r4,sp,99
    1fa8:	00000106 	br	1fb0 <___vfprintf_internal_r+0x1780>
    1fac:	18800003 	ldbu	r2,0(r3)
    1fb0:	21000044 	addi	r4,r4,1
    1fb4:	20bfffc5 	stb	r2,-1(r4)
    1fb8:	18c00044 	addi	r3,r3,1
    1fbc:	d8801bc4 	addi	r2,sp,111
    1fc0:	18bffa1e 	bne	r3,r2,1fac <___vfprintf_internal_r+0x177c>
    1fc4:	d8801c44 	addi	r2,sp,113
    1fc8:	d8c018c4 	addi	r3,sp,99
    1fcc:	1545c83a 	sub	r2,r2,r21
    1fd0:	1885883a 	add	r2,r3,r2
    1fd4:	d8c01844 	addi	r3,sp,97
    1fd8:	10c5c83a 	sub	r2,r2,r3
    1fdc:	d8801115 	stw	r2,68(sp)
    1fe0:	d8c00817 	ldw	r3,32(sp)
    1fe4:	d9001117 	ldw	r4,68(sp)
    1fe8:	18800088 	cmpgei	r2,r3,2
    1fec:	1929883a 	add	r20,r3,r4
    1ff0:	10024c26 	beq	r2,zero,2924 <___vfprintf_internal_r+0x20f4>
    1ff4:	d8800b17 	ldw	r2,44(sp)
    1ff8:	a0a9883a 	add	r20,r20,r2
    1ffc:	a02b883a 	mov	r21,r20
    2000:	a000010e 	bge	r20,zero,2008 <___vfprintf_internal_r+0x17d8>
    2004:	002b883a 	mov	r21,zero
    2008:	d8000715 	stw	zero,28(sp)
    200c:	00014206 	br	2518 <___vfprintf_internal_r+0x1ce8>
    2010:	00800c04 	movi	r2,48
    2014:	d8801585 	stb	r2,86(sp)
    2018:	df0015c5 	stb	fp,87(sp)
    201c:	63000094 	ori	r12,r12,2
    2020:	00800084 	movi	r2,2
    2024:	003ce106 	br	13ac <___vfprintf_internal_r+0xb7c>
    2028:	d9400417 	ldw	r5,16(sp)
    202c:	20800017 	ldw	r2,0(r4)
    2030:	d8c00615 	stw	r3,24(sp)
    2034:	2809d7fa 	srai	r4,r5,31
    2038:	11400015 	stw	r5,0(r2)
    203c:	11000115 	stw	r4,4(r2)
    2040:	003a3006 	br	904 <___vfprintf_internal_r+0xd4>
    2044:	0421c83a 	sub	r16,zero,r16
    2048:	d8800615 	stw	r2,24(sp)
    204c:	003b1506 	br	ca4 <___vfprintf_internal_r+0x474>
    2050:	2039883a 	mov	fp,r4
    2054:	073ed716 	blt	zero,fp,1bb4 <___vfprintf_internal_r+0x1384>
    2058:	003ee006 	br	1bdc <___vfprintf_internal_r+0x13ac>
    205c:	9080004c 	andi	r2,r18,1
    2060:	103ee51e 	bne	r2,zero,1bf8 <___vfprintf_internal_r+0x13c8>
    2064:	d8800817 	ldw	r2,32(sp)
    2068:	d9400717 	ldw	r5,28(sp)
    206c:	1105c83a 	sub	r2,r2,r4
    2070:	29004f0e 	bge	r5,r4,21b0 <___vfprintf_internal_r+0x1980>
    2074:	1039883a 	mov	fp,r2
    2078:	003efd06 	br	1c70 <___vfprintf_internal_r+0x1440>
    207c:	d9000517 	ldw	r4,20(sp)
    2080:	d9801c04 	addi	r6,sp,112
    2084:	980b883a 	mov	r5,r19
    2088:	0007b8c0 	call	7b8c <__sprint_r>
    208c:	103ac71e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2090:	da801d17 	ldw	r10,116(sp)
    2094:	d8c01e17 	ldw	r3,120(sp)
    2098:	da002b04 	addi	r8,sp,172
    209c:	52800044 	addi	r10,r10,1
    20a0:	b839883a 	mov	fp,r23
    20a4:	003e4c06 	br	19d8 <___vfprintf_internal_r+0x11a8>
    20a8:	b7000043 	ldbu	fp,1(r22)
    20ac:	63000814 	ori	r12,r12,32
    20b0:	b5800044 	addi	r22,r22,1
    20b4:	e2803fcc 	andi	r10,fp,255
    20b8:	5280201c 	xori	r10,r10,128
    20bc:	52bfe004 	addi	r10,r10,-128
    20c0:	003a3606 	br	99c <___vfprintf_internal_r+0x16c>
    20c4:	d9000517 	ldw	r4,20(sp)
    20c8:	d9801c04 	addi	r6,sp,112
    20cc:	980b883a 	mov	r5,r19
    20d0:	0007b8c0 	call	7b8c <__sprint_r>
    20d4:	103ab51e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    20d8:	d8c01e17 	ldw	r3,120(sp)
    20dc:	b811883a 	mov	r8,r23
    20e0:	003d4506 	br	15f8 <___vfprintf_internal_r+0xdc8>
    20e4:	0039883a 	mov	fp,zero
    20e8:	003ebd06 	br	1be0 <___vfprintf_internal_r+0x13b0>
    20ec:	588001f0 	cmpltui	r2,r11,7
    20f0:	5829883a 	mov	r20,r11
    20f4:	10013d26 	beq	r2,zero,25ec <___vfprintf_internal_r+0x1dbc>
    20f8:	04400074 	movhi	r17,1
    20fc:	a02b883a 	mov	r21,r20
    2100:	dc800615 	stw	r18,24(sp)
    2104:	8c7d8f04 	addi	r17,r17,-2500
    2108:	003b6606 	br	ea4 <___vfprintf_internal_r+0x674>
    210c:	03000074 	movhi	r12,1
    2110:	e1000450 	cmplti	r4,fp,17
    2114:	633d9184 	addi	r12,r12,-2490
    2118:	d8801d17 	ldw	r2,116(sp)
    211c:	20010d1e 	bne	r4,zero,2554 <___vfprintf_internal_r+0x1d24>
    2120:	dc400e15 	stw	r17,56(sp)
    2124:	dc800f15 	stw	r18,60(sp)
    2128:	e023883a 	mov	r17,fp
    212c:	05000404 	movi	r20,16
    2130:	b039883a 	mov	fp,r22
    2134:	6025883a 	mov	r18,r12
    2138:	802d883a 	mov	r22,r16
    213c:	dc000517 	ldw	r16,20(sp)
    2140:	00000406 	br	2154 <___vfprintf_internal_r+0x1924>
    2144:	42000204 	addi	r8,r8,8
    2148:	8c7ffc04 	addi	r17,r17,-16
    214c:	89000448 	cmpgei	r4,r17,17
    2150:	2000fa26 	beq	r4,zero,253c <___vfprintf_internal_r+0x1d0c>
    2154:	10800044 	addi	r2,r2,1
    2158:	18c00404 	addi	r3,r3,16
    215c:	44800015 	stw	r18,0(r8)
    2160:	45000115 	stw	r20,4(r8)
    2164:	d8c01e15 	stw	r3,120(sp)
    2168:	d8801d15 	stw	r2,116(sp)
    216c:	11000208 	cmpgei	r4,r2,8
    2170:	203ff426 	beq	r4,zero,2144 <___vfprintf_internal_r+0x1914>
    2174:	d9801c04 	addi	r6,sp,112
    2178:	980b883a 	mov	r5,r19
    217c:	8009883a 	mov	r4,r16
    2180:	0007b8c0 	call	7b8c <__sprint_r>
    2184:	103a891e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2188:	d8c01e17 	ldw	r3,120(sp)
    218c:	d8801d17 	ldw	r2,116(sp)
    2190:	b811883a 	mov	r8,r23
    2194:	003fec06 	br	2148 <___vfprintf_internal_r+0x1918>
    2198:	d8800617 	ldw	r2,24(sp)
    219c:	10800017 	ldw	r2,0(r2)
    21a0:	d8c00615 	stw	r3,24(sp)
    21a4:	d8c00417 	ldw	r3,16(sp)
    21a8:	10c00015 	stw	r3,0(r2)
    21ac:	0039d506 	br	904 <___vfprintf_internal_r+0xd4>
    21b0:	d9000817 	ldw	r4,32(sp)
    21b4:	d9400717 	ldw	r5,28(sp)
    21b8:	2179c83a 	sub	fp,r4,r5
    21bc:	003e9f06 	br	1c3c <___vfprintf_internal_r+0x140c>
    21c0:	d9000517 	ldw	r4,20(sp)
    21c4:	d9801c04 	addi	r6,sp,112
    21c8:	980b883a 	mov	r5,r19
    21cc:	0007b8c0 	call	7b8c <__sprint_r>
    21d0:	103a761e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    21d4:	d8c01e17 	ldw	r3,120(sp)
    21d8:	dd001d17 	ldw	r20,116(sp)
    21dc:	b839883a 	mov	fp,r23
    21e0:	003ddd06 	br	1958 <___vfprintf_internal_r+0x1128>
    21e4:	d9000517 	ldw	r4,20(sp)
    21e8:	d9801c04 	addi	r6,sp,112
    21ec:	980b883a 	mov	r5,r19
    21f0:	0007b8c0 	call	7b8c <__sprint_r>
    21f4:	103a6d1e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    21f8:	d8c01e17 	ldw	r3,120(sp)
    21fc:	dd001d17 	ldw	r20,116(sp)
    2200:	b839883a 	mov	fp,r23
    2204:	003dc906 	br	192c <___vfprintf_internal_r+0x10fc>
    2208:	d8801d17 	ldw	r2,116(sp)
    220c:	01400074 	movhi	r5,1
    2210:	297d9104 	addi	r5,r5,-2492
    2214:	10800044 	addi	r2,r2,1
    2218:	18c00044 	addi	r3,r3,1
    221c:	41400015 	stw	r5,0(r8)
    2220:	01400044 	movi	r5,1
    2224:	d8801d15 	stw	r2,116(sp)
    2228:	41400115 	stw	r5,4(r8)
    222c:	d8c01e15 	stw	r3,120(sp)
    2230:	10800208 	cmpgei	r2,r2,8
    2234:	103d851e 	bne	r2,zero,184c <___vfprintf_internal_r+0x101c>
    2238:	42000204 	addi	r8,r8,8
    223c:	003d8b06 	br	186c <___vfprintf_internal_r+0x103c>
    2240:	d9000517 	ldw	r4,20(sp)
    2244:	d9801c04 	addi	r6,sp,112
    2248:	980b883a 	mov	r5,r19
    224c:	dac01015 	stw	r11,64(sp)
    2250:	db400f15 	stw	r13,60(sp)
    2254:	db800e15 	stw	r14,56(sp)
    2258:	0007b8c0 	call	7b8c <__sprint_r>
    225c:	103a531e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2260:	d8c01e17 	ldw	r3,120(sp)
    2264:	b811883a 	mov	r8,r23
    2268:	dac01017 	ldw	r11,64(sp)
    226c:	db400f17 	ldw	r13,60(sp)
    2270:	db800e17 	ldw	r14,56(sp)
    2274:	003b1606 	br	ed0 <___vfprintf_internal_r+0x6a0>
    2278:	d9000517 	ldw	r4,20(sp)
    227c:	d9801c04 	addi	r6,sp,112
    2280:	980b883a 	mov	r5,r19
    2284:	0007b8c0 	call	7b8c <__sprint_r>
    2288:	103a481e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    228c:	b811883a 	mov	r8,r23
    2290:	003cc506 	br	15a8 <___vfprintf_internal_r+0xd78>
    2294:	d9000517 	ldw	r4,20(sp)
    2298:	d9801c04 	addi	r6,sp,112
    229c:	980b883a 	mov	r5,r19
    22a0:	dac00e15 	stw	r11,56(sp)
    22a4:	0007b8c0 	call	7b8c <__sprint_r>
    22a8:	103a401e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    22ac:	d8c01e17 	ldw	r3,120(sp)
    22b0:	b811883a 	mov	r8,r23
    22b4:	dac00e17 	ldw	r11,56(sp)
    22b8:	003b2206 	br	f44 <___vfprintf_internal_r+0x714>
    22bc:	10c00060 	cmpeqi	r3,r2,1
    22c0:	9019883a 	mov	r12,r18
    22c4:	183beb26 	beq	r3,zero,1274 <___vfprintf_internal_r+0xa44>
    22c8:	003c6b06 	br	1478 <___vfprintf_internal_r+0xc48>
    22cc:	d8800d17 	ldw	r2,52(sp)
    22d0:	d9400b17 	ldw	r5,44(sp)
    22d4:	40800015 	stw	r2,0(r8)
    22d8:	d8801d17 	ldw	r2,116(sp)
    22dc:	28c7883a 	add	r3,r5,r3
    22e0:	41400115 	stw	r5,4(r8)
    22e4:	10800044 	addi	r2,r2,1
    22e8:	d8c01e15 	stw	r3,120(sp)
    22ec:	d8801d15 	stw	r2,116(sp)
    22f0:	11400208 	cmpgei	r5,r2,8
    22f4:	2800d61e 	bne	r5,zero,2650 <___vfprintf_internal_r+0x1e20>
    22f8:	42000204 	addi	r8,r8,8
    22fc:	203d6c0e 	bge	r4,zero,18b0 <___vfprintf_internal_r+0x1080>
    2300:	03000074 	movhi	r12,1
    2304:	217ffc08 	cmpgei	r5,r4,-16
    2308:	633d9184 	addi	r12,r12,-2490
    230c:	0129c83a 	sub	r20,zero,r4
    2310:	28014e1e 	bne	r5,zero,284c <___vfprintf_internal_r+0x201c>
    2314:	8009883a 	mov	r4,r16
    2318:	dc400715 	stw	r17,28(sp)
    231c:	a021883a 	mov	r16,r20
    2320:	07000404 	movi	fp,16
    2324:	6023883a 	mov	r17,r12
    2328:	2029883a 	mov	r20,r4
    232c:	00000406 	br	2340 <___vfprintf_internal_r+0x1b10>
    2330:	42000204 	addi	r8,r8,8
    2334:	843ffc04 	addi	r16,r16,-16
    2338:	81000448 	cmpgei	r4,r16,17
    233c:	20013e26 	beq	r4,zero,2838 <___vfprintf_internal_r+0x2008>
    2340:	10800044 	addi	r2,r2,1
    2344:	18c00404 	addi	r3,r3,16
    2348:	44400015 	stw	r17,0(r8)
    234c:	47000115 	stw	fp,4(r8)
    2350:	d8c01e15 	stw	r3,120(sp)
    2354:	d8801d15 	stw	r2,116(sp)
    2358:	11000208 	cmpgei	r4,r2,8
    235c:	203ff426 	beq	r4,zero,2330 <___vfprintf_internal_r+0x1b00>
    2360:	d9000517 	ldw	r4,20(sp)
    2364:	d9801c04 	addi	r6,sp,112
    2368:	980b883a 	mov	r5,r19
    236c:	0007b8c0 	call	7b8c <__sprint_r>
    2370:	103a0e1e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2374:	d8c01e17 	ldw	r3,120(sp)
    2378:	d8801d17 	ldw	r2,116(sp)
    237c:	b811883a 	mov	r8,r23
    2380:	003fec06 	br	2334 <___vfprintf_internal_r+0x1b04>
    2384:	8809883a 	mov	r4,r17
    2388:	00007980 	call	798 <strlen>
    238c:	1029883a 	mov	r20,r2
    2390:	102b883a 	mov	r21,r2
    2394:	dc800615 	stw	r18,24(sp)
    2398:	db000717 	ldw	r12,28(sp)
    239c:	da000e17 	ldw	r8,56(sp)
    23a0:	003ac006 	br	ea4 <___vfprintf_internal_r+0x674>
    23a4:	9017883a 	mov	r11,r18
    23a8:	a819883a 	mov	r12,r21
    23ac:	dc800e17 	ldw	r18,56(sp)
    23b0:	dd400717 	ldw	r21,28(sp)
    23b4:	b021883a 	mov	r16,r22
    23b8:	a2800044 	addi	r10,r20,1
    23bc:	e02d883a 	mov	r22,fp
    23c0:	1039883a 	mov	fp,r2
    23c4:	10800204 	addi	r2,r2,8
    23c8:	1ac7883a 	add	r3,r3,r11
    23cc:	e3000015 	stw	r12,0(fp)
    23d0:	e2c00115 	stw	r11,4(fp)
    23d4:	d8c01e15 	stw	r3,120(sp)
    23d8:	da801d15 	stw	r10,116(sp)
    23dc:	51000208 	cmpgei	r4,r10,8
    23e0:	203f261e 	bne	r4,zero,207c <___vfprintf_internal_r+0x184c>
    23e4:	52800044 	addi	r10,r10,1
    23e8:	12000204 	addi	r8,r2,8
    23ec:	1039883a 	mov	fp,r2
    23f0:	003d7906 	br	19d8 <___vfprintf_internal_r+0x11a8>
    23f4:	8019883a 	mov	r12,r16
    23f8:	dc000717 	ldw	r16,28(sp)
    23fc:	10800044 	addi	r2,r2,1
    2400:	1c47883a 	add	r3,r3,r17
    2404:	d8801d15 	stw	r2,116(sp)
    2408:	43000015 	stw	r12,0(r8)
    240c:	44400115 	stw	r17,4(r8)
    2410:	d8c01e15 	stw	r3,120(sp)
    2414:	10800208 	cmpgei	r2,r2,8
    2418:	103ad726 	beq	r2,zero,f78 <___vfprintf_internal_r+0x748>
    241c:	003d2d06 	br	18d4 <___vfprintf_internal_r+0x10a4>
    2420:	d8800615 	stw	r2,24(sp)
    2424:	0029883a 	mov	r20,zero
    2428:	0005883a 	mov	r2,zero
    242c:	003bdf06 	br	13ac <___vfprintf_internal_r+0xb7c>
    2430:	d8800615 	stw	r2,24(sp)
    2434:	0029883a 	mov	r20,zero
    2438:	00800044 	movi	r2,1
    243c:	003bdb06 	br	13ac <___vfprintf_internal_r+0xb7c>
    2440:	d8801a04 	addi	r2,sp,104
    2444:	d8800315 	stw	r2,12(sp)
    2448:	d9400917 	ldw	r5,36(sp)
    244c:	d8801704 	addi	r2,sp,92
    2450:	d9000517 	ldw	r4,20(sp)
    2454:	d8800215 	stw	r2,8(sp)
    2458:	d8801604 	addi	r2,sp,88
    245c:	dac00015 	stw	r11,0(sp)
    2460:	d8800115 	stw	r2,4(sp)
    2464:	01c000c4 	movi	r7,3
    2468:	a80d883a 	mov	r6,r21
    246c:	da001215 	stw	r8,72(sp)
    2470:	db001015 	stw	r12,64(sp)
    2474:	dac00815 	stw	r11,32(sp)
    2478:	0002e240 	call	2e24 <_dtoa_r>
    247c:	dac00817 	ldw	r11,32(sp)
    2480:	1023883a 	mov	r17,r2
    2484:	db001017 	ldw	r12,64(sp)
    2488:	12e9883a 	add	r20,r2,r11
    248c:	88800007 	ldb	r2,0(r17)
    2490:	da001217 	ldw	r8,72(sp)
    2494:	10800c20 	cmpeqi	r2,r2,48
    2498:	10005a1e 	bne	r2,zero,2604 <___vfprintf_internal_r+0x1dd4>
    249c:	d8801617 	ldw	r2,88(sp)
    24a0:	a0a9883a 	add	r20,r20,r2
    24a4:	d9000917 	ldw	r4,36(sp)
    24a8:	000d883a 	mov	r6,zero
    24ac:	000f883a 	mov	r7,zero
    24b0:	a80b883a 	mov	r5,r21
    24b4:	da001215 	stw	r8,72(sp)
    24b8:	dac01015 	stw	r11,64(sp)
    24bc:	db000815 	stw	r12,32(sp)
    24c0:	000b9080 	call	b908 <__eqdf2>
    24c4:	db000817 	ldw	r12,32(sp)
    24c8:	dac01017 	ldw	r11,64(sp)
    24cc:	da001217 	ldw	r8,72(sp)
    24d0:	1000881e 	bne	r2,zero,26f4 <___vfprintf_internal_r+0x1ec4>
    24d4:	a005883a 	mov	r2,r20
    24d8:	1445c83a 	sub	r2,r2,r17
    24dc:	d8c00717 	ldw	r3,28(sp)
    24e0:	d8800815 	stw	r2,32(sp)
    24e4:	d8801617 	ldw	r2,88(sp)
    24e8:	18c011d8 	cmpnei	r3,r3,71
    24ec:	d8800715 	stw	r2,28(sp)
    24f0:	183e8126 	beq	r3,zero,1ef8 <___vfprintf_internal_r+0x16c8>
    24f4:	d8800f17 	ldw	r2,60(sp)
    24f8:	103e8426 	beq	r2,zero,1f0c <___vfprintf_internal_r+0x16dc>
    24fc:	d8c00717 	ldw	r3,28(sp)
    2500:	6080004c 	andi	r2,r12,1
    2504:	12c4b03a 	or	r2,r2,r11
    2508:	00c10d0e 	bge	zero,r3,2940 <___vfprintf_internal_r+0x2110>
    250c:	1000f11e 	bne	r2,zero,28d4 <___vfprintf_internal_r+0x20a4>
    2510:	dd000717 	ldw	r20,28(sp)
    2514:	a02b883a 	mov	r21,r20
    2518:	d8800e07 	ldb	r2,56(sp)
    251c:	10007e26 	beq	r2,zero,2718 <___vfprintf_internal_r+0x1ee8>
    2520:	00800b44 	movi	r2,45
    2524:	d8801545 	stb	r2,85(sp)
    2528:	0017883a 	mov	r11,zero
    252c:	003bdf06 	br	14ac <___vfprintf_internal_r+0xc7c>
    2530:	04400074 	movhi	r17,1
    2534:	8c7d8104 	addi	r17,r17,-2556
    2538:	003b2e06 	br	11f4 <___vfprintf_internal_r+0x9c4>
    253c:	b021883a 	mov	r16,r22
    2540:	9019883a 	mov	r12,r18
    2544:	e02d883a 	mov	r22,fp
    2548:	dc800f17 	ldw	r18,60(sp)
    254c:	8839883a 	mov	fp,r17
    2550:	dc400e17 	ldw	r17,56(sp)
    2554:	10800044 	addi	r2,r2,1
    2558:	1f07883a 	add	r3,r3,fp
    255c:	d8801d15 	stw	r2,116(sp)
    2560:	43000015 	stw	r12,0(r8)
    2564:	47000115 	stw	fp,4(r8)
    2568:	d8c01e15 	stw	r3,120(sp)
    256c:	10800208 	cmpgei	r2,r2,8
    2570:	1000421e 	bne	r2,zero,267c <___vfprintf_internal_r+0x1e4c>
    2574:	42000204 	addi	r8,r8,8
    2578:	003d9c06 	br	1bec <___vfprintf_internal_r+0x13bc>
    257c:	00800b44 	movi	r2,45
    2580:	d8801545 	stb	r2,85(sp)
    2584:	03400b44 	movi	r13,45
    2588:	003b1606 	br	11e4 <___vfprintf_internal_r+0x9b4>
    258c:	8019883a 	mov	r12,r16
    2590:	dc000717 	ldw	r16,28(sp)
    2594:	10800044 	addi	r2,r2,1
    2598:	1f07883a 	add	r3,r3,fp
    259c:	d8801d15 	stw	r2,116(sp)
    25a0:	43000015 	stw	r12,0(r8)
    25a4:	47000115 	stw	fp,4(r8)
    25a8:	d8c01e15 	stw	r3,120(sp)
    25ac:	10800208 	cmpgei	r2,r2,8
    25b0:	103a7126 	beq	r2,zero,f78 <___vfprintf_internal_r+0x748>
    25b4:	003cc706 	br	18d4 <___vfprintf_internal_r+0x10a4>
    25b8:	d9000517 	ldw	r4,20(sp)
    25bc:	d9801c04 	addi	r6,sp,112
    25c0:	980b883a 	mov	r5,r19
    25c4:	0007b8c0 	call	7b8c <__sprint_r>
    25c8:	1039781e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    25cc:	d9001617 	ldw	r4,88(sp)
    25d0:	d8c01e17 	ldw	r3,120(sp)
    25d4:	b811883a 	mov	r8,r23
    25d8:	003d9306 	br	1c28 <___vfprintf_internal_r+0x13f8>
    25dc:	1560003c 	xorhi	r21,r2,32768
    25e0:	00800b44 	movi	r2,45
    25e4:	d8800e05 	stb	r2,56(sp)
    25e8:	003e1b06 	br	1e58 <___vfprintf_internal_r+0x1628>
    25ec:	05000184 	movi	r20,6
    25f0:	003ec106 	br	20f8 <___vfprintf_internal_r+0x18c8>
    25f4:	002b883a 	mov	r21,zero
    25f8:	003a0206 	br	e04 <___vfprintf_internal_r+0x5d4>
    25fc:	d9401545 	stb	r5,85(sp)
    2600:	00398a06 	br	c2c <___vfprintf_internal_r+0x3fc>
    2604:	d9000917 	ldw	r4,36(sp)
    2608:	000d883a 	mov	r6,zero
    260c:	000f883a 	mov	r7,zero
    2610:	a80b883a 	mov	r5,r21
    2614:	da001215 	stw	r8,72(sp)
    2618:	dac01015 	stw	r11,64(sp)
    261c:	db000815 	stw	r12,32(sp)
    2620:	000b9080 	call	b908 <__eqdf2>
    2624:	db000817 	ldw	r12,32(sp)
    2628:	dac01017 	ldw	r11,64(sp)
    262c:	da001217 	ldw	r8,72(sp)
    2630:	103f9a26 	beq	r2,zero,249c <___vfprintf_internal_r+0x1c6c>
    2634:	00800044 	movi	r2,1
    2638:	12c5c83a 	sub	r2,r2,r11
    263c:	d8801615 	stw	r2,88(sp)
    2640:	003f9706 	br	24a0 <___vfprintf_internal_r+0x1c70>
    2644:	583dff1e 	bne	r11,zero,1e44 <___vfprintf_internal_r+0x1614>
    2648:	02c00044 	movi	r11,1
    264c:	003dfd06 	br	1e44 <___vfprintf_internal_r+0x1614>
    2650:	d9000517 	ldw	r4,20(sp)
    2654:	d9801c04 	addi	r6,sp,112
    2658:	980b883a 	mov	r5,r19
    265c:	0007b8c0 	call	7b8c <__sprint_r>
    2660:	1039521e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2664:	d9001617 	ldw	r4,88(sp)
    2668:	d8c01e17 	ldw	r3,120(sp)
    266c:	d8801d17 	ldw	r2,116(sp)
    2670:	b811883a 	mov	r8,r23
    2674:	203c8e0e 	bge	r4,zero,18b0 <___vfprintf_internal_r+0x1080>
    2678:	003f2106 	br	2300 <___vfprintf_internal_r+0x1ad0>
    267c:	d9000517 	ldw	r4,20(sp)
    2680:	d9801c04 	addi	r6,sp,112
    2684:	980b883a 	mov	r5,r19
    2688:	0007b8c0 	call	7b8c <__sprint_r>
    268c:	1039471e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2690:	d8c01e17 	ldw	r3,120(sp)
    2694:	b811883a 	mov	r8,r23
    2698:	003d5406 	br	1bec <___vfprintf_internal_r+0x13bc>
    269c:	d8801a04 	addi	r2,sp,104
    26a0:	d8800315 	stw	r2,12(sp)
    26a4:	d9400917 	ldw	r5,36(sp)
    26a8:	d8801704 	addi	r2,sp,92
    26ac:	d9000517 	ldw	r4,20(sp)
    26b0:	5d000044 	addi	r20,r11,1
    26b4:	d8800215 	stw	r2,8(sp)
    26b8:	d8801604 	addi	r2,sp,88
    26bc:	d8800115 	stw	r2,4(sp)
    26c0:	dd000015 	stw	r20,0(sp)
    26c4:	01c00084 	movi	r7,2
    26c8:	a80d883a 	mov	r6,r21
    26cc:	dac00815 	stw	r11,32(sp)
    26d0:	0002e240 	call	2e24 <_dtoa_r>
    26d4:	dac00817 	ldw	r11,32(sp)
    26d8:	db001017 	ldw	r12,64(sp)
    26dc:	da001217 	ldw	r8,72(sp)
    26e0:	1023883a 	mov	r17,r2
    26e4:	e08011d8 	cmpnei	r2,fp,71
    26e8:	103df926 	beq	r2,zero,1ed0 <___vfprintf_internal_r+0x16a0>
    26ec:	8d29883a 	add	r20,r17,r20
    26f0:	003f6c06 	br	24a4 <___vfprintf_internal_r+0x1c74>
    26f4:	d8801a17 	ldw	r2,104(sp)
    26f8:	01000c04 	movi	r4,48
    26fc:	153f762e 	bgeu	r2,r20,24d8 <___vfprintf_internal_r+0x1ca8>
    2700:	10c00044 	addi	r3,r2,1
    2704:	d8c01a15 	stw	r3,104(sp)
    2708:	11000005 	stb	r4,0(r2)
    270c:	d8801a17 	ldw	r2,104(sp)
    2710:	153ffb36 	bltu	r2,r20,2700 <___vfprintf_internal_r+0x1ed0>
    2714:	003f7006 	br	24d8 <___vfprintf_internal_r+0x1ca8>
    2718:	db401543 	ldbu	r13,85(sp)
    271c:	0017883a 	mov	r11,zero
    2720:	003b5e06 	br	149c <___vfprintf_internal_r+0xc6c>
    2724:	d8800717 	ldw	r2,28(sp)
    2728:	d8c00817 	ldw	r3,32(sp)
    272c:	10c02216 	blt	r2,r3,27b8 <___vfprintf_internal_r+0x1f88>
    2730:	6300004c 	andi	r12,r12,1
    2734:	6000601e 	bne	r12,zero,28b8 <___vfprintf_internal_r+0x2088>
    2738:	102b883a 	mov	r21,r2
    273c:	1000010e 	bge	r2,zero,2744 <___vfprintf_internal_r+0x1f14>
    2740:	002b883a 	mov	r21,zero
    2744:	dd000717 	ldw	r20,28(sp)
    2748:	070019c4 	movi	fp,103
    274c:	003f7206 	br	2518 <___vfprintf_internal_r+0x1ce8>
    2750:	d9000517 	ldw	r4,20(sp)
    2754:	d9801c04 	addi	r6,sp,112
    2758:	980b883a 	mov	r5,r19
    275c:	0007b8c0 	call	7b8c <__sprint_r>
    2760:	1039121e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2764:	d8c01e17 	ldw	r3,120(sp)
    2768:	b811883a 	mov	r8,r23
    276c:	e03d1c0e 	bge	fp,zero,1be0 <___vfprintf_internal_r+0x13b0>
    2770:	003e5c06 	br	20e4 <___vfprintf_internal_r+0x18b4>
    2774:	02c00184 	movi	r11,6
    2778:	003db206 	br	1e44 <___vfprintf_internal_r+0x1614>
    277c:	d9000517 	ldw	r4,20(sp)
    2780:	d9801c04 	addi	r6,sp,112
    2784:	980b883a 	mov	r5,r19
    2788:	0007b8c0 	call	7b8c <__sprint_r>
    278c:	1039071e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2790:	d8801617 	ldw	r2,88(sp)
    2794:	d9000817 	ldw	r4,32(sp)
    2798:	d8c01e17 	ldw	r3,120(sp)
    279c:	b811883a 	mov	r8,r23
    27a0:	2085c83a 	sub	r2,r4,r2
    27a4:	003d3206 	br	1c70 <___vfprintf_internal_r+0x1440>
    27a8:	582b883a 	mov	r21,r11
    27ac:	dc800615 	stw	r18,24(sp)
    27b0:	5829883a 	mov	r20,r11
    27b4:	0039bb06 	br	ea4 <___vfprintf_internal_r+0x674>
    27b8:	d8800817 	ldw	r2,32(sp)
    27bc:	d8c00b17 	ldw	r3,44(sp)
    27c0:	10e9883a 	add	r20,r2,r3
    27c4:	d8800717 	ldw	r2,28(sp)
    27c8:	00800316 	blt	zero,r2,27d8 <___vfprintf_internal_r+0x1fa8>
    27cc:	d8800717 	ldw	r2,28(sp)
    27d0:	a0b9c83a 	sub	fp,r20,r2
    27d4:	e5000044 	addi	r20,fp,1
    27d8:	a02b883a 	mov	r21,r20
    27dc:	a0003b16 	blt	r20,zero,28cc <___vfprintf_internal_r+0x209c>
    27e0:	070019c4 	movi	fp,103
    27e4:	003f4c06 	br	2518 <___vfprintf_internal_r+0x1ce8>
    27e8:	d9401545 	stb	r5,85(sp)
    27ec:	003ac006 	br	12f0 <___vfprintf_internal_r+0xac0>
    27f0:	d9401545 	stb	r5,85(sp)
    27f4:	003a2006 	br	1078 <___vfprintf_internal_r+0x848>
    27f8:	d9401545 	stb	r5,85(sp)
    27fc:	003a2e06 	br	10b8 <___vfprintf_internal_r+0x888>
    2800:	d9401545 	stb	r5,85(sp)
    2804:	00398306 	br	e14 <___vfprintf_internal_r+0x5e4>
    2808:	d9401545 	stb	r5,85(sp)
    280c:	00395a06 	br	d78 <___vfprintf_internal_r+0x548>
    2810:	d9401545 	stb	r5,85(sp)
    2814:	00394606 	br	d30 <___vfprintf_internal_r+0x500>
    2818:	d9401545 	stb	r5,85(sp)
    281c:	003a3606 	br	10f8 <___vfprintf_internal_r+0x8c8>
    2820:	d9401545 	stb	r5,85(sp)
    2824:	003a7c06 	br	1218 <___vfprintf_internal_r+0x9e8>
    2828:	d9401545 	stb	r5,85(sp)
    282c:	003a4206 	br	1138 <___vfprintf_internal_r+0x908>
    2830:	d9401545 	stb	r5,85(sp)
    2834:	003ac006 	br	1338 <___vfprintf_internal_r+0xb08>
    2838:	8819883a 	mov	r12,r17
    283c:	dc400717 	ldw	r17,28(sp)
    2840:	a009883a 	mov	r4,r20
    2844:	8029883a 	mov	r20,r16
    2848:	2021883a 	mov	r16,r4
    284c:	10800044 	addi	r2,r2,1
    2850:	1d07883a 	add	r3,r3,r20
    2854:	43000015 	stw	r12,0(r8)
    2858:	45000115 	stw	r20,4(r8)
    285c:	d8c01e15 	stw	r3,120(sp)
    2860:	d8801d15 	stw	r2,116(sp)
    2864:	11000208 	cmpgei	r4,r2,8
    2868:	203c1026 	beq	r4,zero,18ac <___vfprintf_internal_r+0x107c>
    286c:	d9000517 	ldw	r4,20(sp)
    2870:	d9801c04 	addi	r6,sp,112
    2874:	980b883a 	mov	r5,r19
    2878:	0007b8c0 	call	7b8c <__sprint_r>
    287c:	1038cb1e 	bne	r2,zero,bac <___vfprintf_internal_r+0x37c>
    2880:	d8c01e17 	ldw	r3,120(sp)
    2884:	d8801d17 	ldw	r2,116(sp)
    2888:	b811883a 	mov	r8,r23
    288c:	003c0806 	br	18b0 <___vfprintf_internal_r+0x1080>
    2890:	00bfffc4 	movi	r2,-1
    2894:	d8800415 	stw	r2,16(sp)
    2898:	0038c706 	br	bb8 <___vfprintf_internal_r+0x388>
    289c:	00800c04 	movi	r2,48
    28a0:	a0c00c04 	addi	r3,r20,48
    28a4:	d88018c5 	stb	r2,99(sp)
    28a8:	00800104 	movi	r2,4
    28ac:	d8c01905 	stb	r3,100(sp)
    28b0:	d8801115 	stw	r2,68(sp)
    28b4:	003dca06 	br	1fe0 <___vfprintf_internal_r+0x17b0>
    28b8:	d8800717 	ldw	r2,28(sp)
    28bc:	d8c00b17 	ldw	r3,44(sp)
    28c0:	10e9883a 	add	r20,r2,r3
    28c4:	a02b883a 	mov	r21,r20
    28c8:	a03fc50e 	bge	r20,zero,27e0 <___vfprintf_internal_r+0x1fb0>
    28cc:	002b883a 	mov	r21,zero
    28d0:	003fc306 	br	27e0 <___vfprintf_internal_r+0x1fb0>
    28d4:	d8800b17 	ldw	r2,44(sp)
    28d8:	1885883a 	add	r2,r3,r2
    28dc:	12e9883a 	add	r20,r2,r11
    28e0:	a02b883a 	mov	r21,r20
    28e4:	a03f0c0e 	bge	r20,zero,2518 <___vfprintf_internal_r+0x1ce8>
    28e8:	002b883a 	mov	r21,zero
    28ec:	003f0a06 	br	2518 <___vfprintf_internal_r+0x1ce8>
    28f0:	d8800a17 	ldw	r2,40(sp)
    28f4:	10001d16 	blt	r2,zero,296c <___vfprintf_internal_r+0x213c>
    28f8:	db401543 	ldbu	r13,85(sp)
    28fc:	e0801210 	cmplti	r2,fp,72
    2900:	1000171e 	bne	r2,zero,2960 <___vfprintf_internal_r+0x2130>
    2904:	04400074 	movhi	r17,1
    2908:	8c7d8404 	addi	r17,r17,-2544
    290c:	003a3906 	br	11f4 <___vfprintf_internal_r+0x9c4>
    2910:	00c00044 	movi	r3,1
    2914:	18a9c83a 	sub	r20,r3,r2
    2918:	00800b44 	movi	r2,45
    291c:	d8801885 	stb	r2,98(sp)
    2920:	003d8106 	br	1f28 <___vfprintf_internal_r+0x16f8>
    2924:	6080004c 	andi	r2,r12,1
    2928:	d8800715 	stw	r2,28(sp)
    292c:	103db11e 	bne	r2,zero,1ff4 <___vfprintf_internal_r+0x17c4>
    2930:	003feb06 	br	28e0 <___vfprintf_internal_r+0x20b0>
    2934:	4005883a 	mov	r2,r8
    2938:	633d9184 	addi	r12,r12,-2490
    293c:	003ea206 	br	23c8 <___vfprintf_internal_r+0x1b98>
    2940:	1000031e 	bne	r2,zero,2950 <___vfprintf_internal_r+0x2120>
    2944:	05400044 	movi	r21,1
    2948:	05000044 	movi	r20,1
    294c:	003ef206 	br	2518 <___vfprintf_internal_r+0x1ce8>
    2950:	d8800b17 	ldw	r2,44(sp)
    2954:	10800044 	addi	r2,r2,1
    2958:	12e9883a 	add	r20,r2,r11
    295c:	003fe006 	br	28e0 <___vfprintf_internal_r+0x20b0>
    2960:	04400074 	movhi	r17,1
    2964:	8c7d8304 	addi	r17,r17,-2548
    2968:	003a2206 	br	11f4 <___vfprintf_internal_r+0x9c4>
    296c:	00800b44 	movi	r2,45
    2970:	d8801545 	stb	r2,85(sp)
    2974:	03400b44 	movi	r13,45
    2978:	003fe006 	br	28fc <___vfprintf_internal_r+0x20cc>
    297c:	00800084 	movi	r2,2
    2980:	d8801115 	stw	r2,68(sp)
    2984:	003d9606 	br	1fe0 <___vfprintf_internal_r+0x17b0>
    2988:	d8c00617 	ldw	r3,24(sp)
    298c:	1ac00017 	ldw	r11,0(r3)
    2990:	18c00104 	addi	r3,r3,4
    2994:	5800010e 	bge	r11,zero,299c <___vfprintf_internal_r+0x216c>
    2998:	02ffffc4 	movi	r11,-1
    299c:	b7000043 	ldbu	fp,1(r22)
    29a0:	d8c00615 	stw	r3,24(sp)
    29a4:	102d883a 	mov	r22,r2
    29a8:	e2803fcc 	andi	r10,fp,255
    29ac:	5280201c 	xori	r10,r10,128
    29b0:	52bfe004 	addi	r10,r10,-128
    29b4:	0037f906 	br	99c <___vfprintf_internal_r+0x16c>

000029b8 <__vfprintf_internal>:
    29b8:	00800074 	movhi	r2,1
    29bc:	300f883a 	mov	r7,r6
    29c0:	280d883a 	mov	r6,r5
    29c4:	200b883a 	mov	r5,r4
    29c8:	1105f217 	ldw	r4,6088(r2)
    29cc:	00008301 	jmpi	830 <___vfprintf_internal_r>

000029d0 <__sbprintf>:
    29d0:	2880030b 	ldhu	r2,12(r5)
    29d4:	2b001917 	ldw	r12,100(r5)
    29d8:	2ac0038b 	ldhu	r11,14(r5)
    29dc:	2a800717 	ldw	r10,28(r5)
    29e0:	2a400917 	ldw	r9,36(r5)
    29e4:	defee204 	addi	sp,sp,-1144
    29e8:	da001a04 	addi	r8,sp,104
    29ec:	00c10004 	movi	r3,1024
    29f0:	dc011a15 	stw	r16,1128(sp)
    29f4:	10bfff4c 	andi	r2,r2,65533
    29f8:	2821883a 	mov	r16,r5
    29fc:	d80b883a 	mov	r5,sp
    2a00:	dc811c15 	stw	r18,1136(sp)
    2a04:	dc411b15 	stw	r17,1132(sp)
    2a08:	dfc11d15 	stw	ra,1140(sp)
    2a0c:	2025883a 	mov	r18,r4
    2a10:	d880030d 	sth	r2,12(sp)
    2a14:	db001915 	stw	r12,100(sp)
    2a18:	dac0038d 	sth	r11,14(sp)
    2a1c:	da800715 	stw	r10,28(sp)
    2a20:	da400915 	stw	r9,36(sp)
    2a24:	da000015 	stw	r8,0(sp)
    2a28:	da000415 	stw	r8,16(sp)
    2a2c:	d8c00215 	stw	r3,8(sp)
    2a30:	d8c00515 	stw	r3,20(sp)
    2a34:	d8000615 	stw	zero,24(sp)
    2a38:	00008300 	call	830 <___vfprintf_internal_r>
    2a3c:	1023883a 	mov	r17,r2
    2a40:	10000d0e 	bge	r2,zero,2a78 <__sbprintf+0xa8>
    2a44:	d880030b 	ldhu	r2,12(sp)
    2a48:	1080100c 	andi	r2,r2,64
    2a4c:	10000326 	beq	r2,zero,2a5c <__sbprintf+0x8c>
    2a50:	8080030b 	ldhu	r2,12(r16)
    2a54:	10801014 	ori	r2,r2,64
    2a58:	8080030d 	sth	r2,12(r16)
    2a5c:	8805883a 	mov	r2,r17
    2a60:	dfc11d17 	ldw	ra,1140(sp)
    2a64:	dc811c17 	ldw	r18,1136(sp)
    2a68:	dc411b17 	ldw	r17,1132(sp)
    2a6c:	dc011a17 	ldw	r16,1128(sp)
    2a70:	dec11e04 	addi	sp,sp,1144
    2a74:	f800283a 	ret
    2a78:	d80b883a 	mov	r5,sp
    2a7c:	9009883a 	mov	r4,r18
    2a80:	00047140 	call	4714 <_fflush_r>
    2a84:	103fef26 	beq	r2,zero,2a44 <__sbprintf+0x74>
    2a88:	047fffc4 	movi	r17,-1
    2a8c:	003fed06 	br	2a44 <__sbprintf+0x74>

00002a90 <__swsetup_r>:
    2a90:	00800074 	movhi	r2,1
    2a94:	1085f217 	ldw	r2,6088(r2)
    2a98:	defffd04 	addi	sp,sp,-12
    2a9c:	dc400115 	stw	r17,4(sp)
    2aa0:	dc000015 	stw	r16,0(sp)
    2aa4:	dfc00215 	stw	ra,8(sp)
    2aa8:	2023883a 	mov	r17,r4
    2aac:	2821883a 	mov	r16,r5
    2ab0:	10000226 	beq	r2,zero,2abc <__swsetup_r+0x2c>
    2ab4:	10c00e17 	ldw	r3,56(r2)
    2ab8:	18002026 	beq	r3,zero,2b3c <__swsetup_r+0xac>
    2abc:	8080030b 	ldhu	r2,12(r16)
    2ac0:	10c0020c 	andi	r3,r2,8
    2ac4:	1009883a 	mov	r4,r2
    2ac8:	18002226 	beq	r3,zero,2b54 <__swsetup_r+0xc4>
    2acc:	80c00417 	ldw	r3,16(r16)
    2ad0:	18002826 	beq	r3,zero,2b74 <__swsetup_r+0xe4>
    2ad4:	1100004c 	andi	r4,r2,1
    2ad8:	20000b1e 	bne	r4,zero,2b08 <__swsetup_r+0x78>
    2adc:	1080008c 	andi	r2,r2,2
    2ae0:	10002d1e 	bne	r2,zero,2b98 <__swsetup_r+0x108>
    2ae4:	80800517 	ldw	r2,20(r16)
    2ae8:	80800215 	stw	r2,8(r16)
    2aec:	18000b26 	beq	r3,zero,2b1c <__swsetup_r+0x8c>
    2af0:	0005883a 	mov	r2,zero
    2af4:	dfc00217 	ldw	ra,8(sp)
    2af8:	dc400117 	ldw	r17,4(sp)
    2afc:	dc000017 	ldw	r16,0(sp)
    2b00:	dec00304 	addi	sp,sp,12
    2b04:	f800283a 	ret
    2b08:	80800517 	ldw	r2,20(r16)
    2b0c:	80000215 	stw	zero,8(r16)
    2b10:	0085c83a 	sub	r2,zero,r2
    2b14:	80800615 	stw	r2,24(r16)
    2b18:	183ff51e 	bne	r3,zero,2af0 <__swsetup_r+0x60>
    2b1c:	80c0030b 	ldhu	r3,12(r16)
    2b20:	0005883a 	mov	r2,zero
    2b24:	1900200c 	andi	r4,r3,128
    2b28:	203ff226 	beq	r4,zero,2af4 <__swsetup_r+0x64>
    2b2c:	18c01014 	ori	r3,r3,64
    2b30:	80c0030d 	sth	r3,12(r16)
    2b34:	00bfffc4 	movi	r2,-1
    2b38:	003fee06 	br	2af4 <__swsetup_r+0x64>
    2b3c:	1009883a 	mov	r4,r2
    2b40:	0004aa80 	call	4aa8 <__sinit>
    2b44:	8080030b 	ldhu	r2,12(r16)
    2b48:	10c0020c 	andi	r3,r2,8
    2b4c:	1009883a 	mov	r4,r2
    2b50:	183fde1e 	bne	r3,zero,2acc <__swsetup_r+0x3c>
    2b54:	2080040c 	andi	r2,r4,16
    2b58:	10001f26 	beq	r2,zero,2bd8 <__swsetup_r+0x148>
    2b5c:	2080010c 	andi	r2,r4,4
    2b60:	10000f1e 	bne	r2,zero,2ba0 <__swsetup_r+0x110>
    2b64:	80c00417 	ldw	r3,16(r16)
    2b68:	20800214 	ori	r2,r4,8
    2b6c:	8080030d 	sth	r2,12(r16)
    2b70:	183fd81e 	bne	r3,zero,2ad4 <__swsetup_r+0x44>
    2b74:	1100a00c 	andi	r4,r2,640
    2b78:	21008020 	cmpeqi	r4,r4,512
    2b7c:	203fd51e 	bne	r4,zero,2ad4 <__swsetup_r+0x44>
    2b80:	800b883a 	mov	r5,r16
    2b84:	8809883a 	mov	r4,r17
    2b88:	00055ec0 	call	55ec <__smakebuf_r>
    2b8c:	8080030b 	ldhu	r2,12(r16)
    2b90:	80c00417 	ldw	r3,16(r16)
    2b94:	003fcf06 	br	2ad4 <__swsetup_r+0x44>
    2b98:	0005883a 	mov	r2,zero
    2b9c:	003fd206 	br	2ae8 <__swsetup_r+0x58>
    2ba0:	81400c17 	ldw	r5,48(r16)
    2ba4:	28000626 	beq	r5,zero,2bc0 <__swsetup_r+0x130>
    2ba8:	80801004 	addi	r2,r16,64
    2bac:	28800326 	beq	r5,r2,2bbc <__swsetup_r+0x12c>
    2bb0:	8809883a 	mov	r4,r17
    2bb4:	0004c0c0 	call	4c0c <_free_r>
    2bb8:	8100030b 	ldhu	r4,12(r16)
    2bbc:	80000c15 	stw	zero,48(r16)
    2bc0:	80c00417 	ldw	r3,16(r16)
    2bc4:	00bff6c4 	movi	r2,-37
    2bc8:	1108703a 	and	r4,r2,r4
    2bcc:	80000115 	stw	zero,4(r16)
    2bd0:	80c00015 	stw	r3,0(r16)
    2bd4:	003fe406 	br	2b68 <__swsetup_r+0xd8>
    2bd8:	00800244 	movi	r2,9
    2bdc:	88800015 	stw	r2,0(r17)
    2be0:	20801014 	ori	r2,r4,64
    2be4:	8080030d 	sth	r2,12(r16)
    2be8:	00bfffc4 	movi	r2,-1
    2bec:	003fc106 	br	2af4 <__swsetup_r+0x64>

00002bf0 <quorem>:
    2bf0:	defff204 	addi	sp,sp,-56
    2bf4:	dc000415 	stw	r16,16(sp)
    2bf8:	20800417 	ldw	r2,16(r4)
    2bfc:	2c000417 	ldw	r16,16(r5)
    2c00:	dfc00d15 	stw	ra,52(sp)
    2c04:	df000c15 	stw	fp,48(sp)
    2c08:	ddc00b15 	stw	r23,44(sp)
    2c0c:	dd800a15 	stw	r22,40(sp)
    2c10:	dd400915 	stw	r21,36(sp)
    2c14:	dd000815 	stw	r20,32(sp)
    2c18:	dcc00715 	stw	r19,28(sp)
    2c1c:	dc800615 	stw	r18,24(sp)
    2c20:	dc400515 	stw	r17,20(sp)
    2c24:	14007d16 	blt	r2,r16,2e1c <quorem+0x22c>
    2c28:	843fffc4 	addi	r16,r16,-1
    2c2c:	802c90ba 	slli	r22,r16,2
    2c30:	2f000504 	addi	fp,r5,20
    2c34:	24c00504 	addi	r19,r4,20
    2c38:	e5a5883a 	add	r18,fp,r22
    2c3c:	9d85883a 	add	r2,r19,r22
    2c40:	95c00017 	ldw	r23,0(r18)
    2c44:	15000017 	ldw	r20,0(r2)
    2c48:	d9400215 	stw	r5,8(sp)
    2c4c:	bdc00044 	addi	r23,r23,1
    2c50:	d9000115 	stw	r4,4(sp)
    2c54:	b80b883a 	mov	r5,r23
    2c58:	a009883a 	mov	r4,r20
    2c5c:	dcc00015 	stw	r19,0(sp)
    2c60:	d8800315 	stw	r2,12(sp)
    2c64:	00005940 	call	594 <__udivsi3>
    2c68:	1023883a 	mov	r17,r2
    2c6c:	a5c03236 	bltu	r20,r23,2d38 <quorem+0x148>
    2c70:	e02d883a 	mov	r22,fp
    2c74:	9829883a 	mov	r20,r19
    2c78:	002b883a 	mov	r21,zero
    2c7c:	002f883a 	mov	r23,zero
    2c80:	b5800104 	addi	r22,r22,4
    2c84:	b4ffff17 	ldw	r19,-4(r22)
    2c88:	880b883a 	mov	r5,r17
    2c8c:	a5000104 	addi	r20,r20,4
    2c90:	993fffcc 	andi	r4,r19,65535
    2c94:	000a5dc0 	call	a5dc <__mulsi3>
    2c98:	9808d43a 	srli	r4,r19,16
    2c9c:	880b883a 	mov	r5,r17
    2ca0:	156b883a 	add	r21,r2,r21
    2ca4:	000a5dc0 	call	a5dc <__mulsi3>
    2ca8:	a0ffff17 	ldw	r3,-4(r20)
    2cac:	a80ad43a 	srli	r5,r21,16
    2cb0:	a93fffcc 	andi	r4,r21,65535
    2cb4:	b909c83a 	sub	r4,r23,r4
    2cb8:	19bfffcc 	andi	r6,r3,65535
    2cbc:	2189883a 	add	r4,r4,r6
    2cc0:	1806d43a 	srli	r3,r3,16
    2cc4:	116b883a 	add	r21,r2,r5
    2cc8:	2005d43a 	srai	r2,r4,16
    2ccc:	a97fffcc 	andi	r5,r21,65535
    2cd0:	1947c83a 	sub	r3,r3,r5
    2cd4:	1887883a 	add	r3,r3,r2
    2cd8:	1804943a 	slli	r2,r3,16
    2cdc:	213fffcc 	andi	r4,r4,65535
    2ce0:	a82ad43a 	srli	r21,r21,16
    2ce4:	1108b03a 	or	r4,r2,r4
    2ce8:	a13fff15 	stw	r4,-4(r20)
    2cec:	182fd43a 	srai	r23,r3,16
    2cf0:	95bfe32e 	bgeu	r18,r22,2c80 <quorem+0x90>
    2cf4:	d8c00317 	ldw	r3,12(sp)
    2cf8:	18800017 	ldw	r2,0(r3)
    2cfc:	10000e1e 	bne	r2,zero,2d38 <quorem+0x148>
    2d00:	d9000017 	ldw	r4,0(sp)
    2d04:	18bfff04 	addi	r2,r3,-4
    2d08:	2080092e 	bgeu	r4,r2,2d30 <quorem+0x140>
    2d0c:	18ffff17 	ldw	r3,-4(r3)
    2d10:	18000326 	beq	r3,zero,2d20 <quorem+0x130>
    2d14:	00000606 	br	2d30 <quorem+0x140>
    2d18:	10c00017 	ldw	r3,0(r2)
    2d1c:	1800041e 	bne	r3,zero,2d30 <quorem+0x140>
    2d20:	d8c00017 	ldw	r3,0(sp)
    2d24:	10bfff04 	addi	r2,r2,-4
    2d28:	843fffc4 	addi	r16,r16,-1
    2d2c:	18bffa36 	bltu	r3,r2,2d18 <quorem+0x128>
    2d30:	d8800117 	ldw	r2,4(sp)
    2d34:	14000415 	stw	r16,16(r2)
    2d38:	d9400217 	ldw	r5,8(sp)
    2d3c:	d9000117 	ldw	r4,4(sp)
    2d40:	0006c200 	call	6c20 <__mcmp>
    2d44:	10002816 	blt	r2,zero,2de8 <quorem+0x1f8>
    2d48:	d9800017 	ldw	r6,0(sp)
    2d4c:	8c400044 	addi	r17,r17,1
    2d50:	0007883a 	mov	r3,zero
    2d54:	e7000104 	addi	fp,fp,4
    2d58:	e13fff17 	ldw	r4,-4(fp)
    2d5c:	31400017 	ldw	r5,0(r6)
    2d60:	31800104 	addi	r6,r6,4
    2d64:	20bfffcc 	andi	r2,r4,65535
    2d68:	1887c83a 	sub	r3,r3,r2
    2d6c:	28bfffcc 	andi	r2,r5,65535
    2d70:	1885883a 	add	r2,r3,r2
    2d74:	2008d43a 	srli	r4,r4,16
    2d78:	2806d43a 	srli	r3,r5,16
    2d7c:	100fd43a 	srai	r7,r2,16
    2d80:	117fffcc 	andi	r5,r2,65535
    2d84:	1907c83a 	sub	r3,r3,r4
    2d88:	19c7883a 	add	r3,r3,r7
    2d8c:	1804943a 	slli	r2,r3,16
    2d90:	1807d43a 	srai	r3,r3,16
    2d94:	1144b03a 	or	r2,r2,r5
    2d98:	30bfff15 	stw	r2,-4(r6)
    2d9c:	973fed2e 	bgeu	r18,fp,2d54 <quorem+0x164>
    2da0:	800690ba 	slli	r3,r16,2
    2da4:	d9000017 	ldw	r4,0(sp)
    2da8:	20c7883a 	add	r3,r4,r3
    2dac:	18800017 	ldw	r2,0(r3)
    2db0:	10000d1e 	bne	r2,zero,2de8 <quorem+0x1f8>
    2db4:	18bfff04 	addi	r2,r3,-4
    2db8:	2080092e 	bgeu	r4,r2,2de0 <quorem+0x1f0>
    2dbc:	18ffff17 	ldw	r3,-4(r3)
    2dc0:	18000326 	beq	r3,zero,2dd0 <quorem+0x1e0>
    2dc4:	00000606 	br	2de0 <quorem+0x1f0>
    2dc8:	10c00017 	ldw	r3,0(r2)
    2dcc:	1800041e 	bne	r3,zero,2de0 <quorem+0x1f0>
    2dd0:	d8c00017 	ldw	r3,0(sp)
    2dd4:	10bfff04 	addi	r2,r2,-4
    2dd8:	843fffc4 	addi	r16,r16,-1
    2ddc:	18bffa36 	bltu	r3,r2,2dc8 <quorem+0x1d8>
    2de0:	d8800117 	ldw	r2,4(sp)
    2de4:	14000415 	stw	r16,16(r2)
    2de8:	8805883a 	mov	r2,r17
    2dec:	dfc00d17 	ldw	ra,52(sp)
    2df0:	df000c17 	ldw	fp,48(sp)
    2df4:	ddc00b17 	ldw	r23,44(sp)
    2df8:	dd800a17 	ldw	r22,40(sp)
    2dfc:	dd400917 	ldw	r21,36(sp)
    2e00:	dd000817 	ldw	r20,32(sp)
    2e04:	dcc00717 	ldw	r19,28(sp)
    2e08:	dc800617 	ldw	r18,24(sp)
    2e0c:	dc400517 	ldw	r17,20(sp)
    2e10:	dc000417 	ldw	r16,16(sp)
    2e14:	dec00e04 	addi	sp,sp,56
    2e18:	f800283a 	ret
    2e1c:	0005883a 	mov	r2,zero
    2e20:	003ff206 	br	2dec <quorem+0x1fc>

00002e24 <_dtoa_r>:
    2e24:	20801017 	ldw	r2,64(r4)
    2e28:	deffe204 	addi	sp,sp,-120
    2e2c:	df001c15 	stw	fp,112(sp)
    2e30:	dcc01715 	stw	r19,92(sp)
    2e34:	dc401515 	stw	r17,84(sp)
    2e38:	dc001415 	stw	r16,80(sp)
    2e3c:	dfc01d15 	stw	ra,116(sp)
    2e40:	ddc01b15 	stw	r23,108(sp)
    2e44:	dd801a15 	stw	r22,104(sp)
    2e48:	dd401915 	stw	r21,100(sp)
    2e4c:	dd001815 	stw	r20,96(sp)
    2e50:	dc801615 	stw	r18,88(sp)
    2e54:	d9400115 	stw	r5,4(sp)
    2e58:	d9c00215 	stw	r7,8(sp)
    2e5c:	2039883a 	mov	fp,r4
    2e60:	3027883a 	mov	r19,r6
    2e64:	dc002017 	ldw	r16,128(sp)
    2e68:	3023883a 	mov	r17,r6
    2e6c:	10000826 	beq	r2,zero,2e90 <_dtoa_r+0x6c>
    2e70:	21801117 	ldw	r6,68(r4)
    2e74:	00c00044 	movi	r3,1
    2e78:	100b883a 	mov	r5,r2
    2e7c:	1986983a 	sll	r3,r3,r6
    2e80:	11800115 	stw	r6,4(r2)
    2e84:	10c00215 	stw	r3,8(r2)
    2e88:	00063c40 	call	63c4 <_Bfree>
    2e8c:	e0001015 	stw	zero,64(fp)
    2e90:	98018116 	blt	r19,zero,3498 <_dtoa_r+0x674>
    2e94:	80000015 	stw	zero,0(r16)
    2e98:	989ffc2c 	andhi	r2,r19,32752
    2e9c:	00dffc34 	movhi	r3,32752
    2ea0:	10c18626 	beq	r2,r3,34bc <_dtoa_r+0x698>
    2ea4:	d9000117 	ldw	r4,4(sp)
    2ea8:	000d883a 	mov	r6,zero
    2eac:	000f883a 	mov	r7,zero
    2eb0:	880b883a 	mov	r5,r17
    2eb4:	000b9080 	call	b908 <__eqdf2>
    2eb8:	1000191e 	bne	r2,zero,2f20 <_dtoa_r+0xfc>
    2ebc:	d8c01f17 	ldw	r3,124(sp)
    2ec0:	00800044 	movi	r2,1
    2ec4:	18800015 	stw	r2,0(r3)
    2ec8:	d8802117 	ldw	r2,132(sp)
    2ecc:	10032426 	beq	r2,zero,3b60 <_dtoa_r+0xd3c>
    2ed0:	d9002117 	ldw	r4,132(sp)
    2ed4:	00800074 	movhi	r2,1
    2ed8:	10bd9144 	addi	r2,r2,-2491
    2edc:	00c00074 	movhi	r3,1
    2ee0:	20800015 	stw	r2,0(r4)
    2ee4:	18bd9104 	addi	r2,r3,-2492
    2ee8:	d8800315 	stw	r2,12(sp)
    2eec:	d8800317 	ldw	r2,12(sp)
    2ef0:	dfc01d17 	ldw	ra,116(sp)
    2ef4:	df001c17 	ldw	fp,112(sp)
    2ef8:	ddc01b17 	ldw	r23,108(sp)
    2efc:	dd801a17 	ldw	r22,104(sp)
    2f00:	dd401917 	ldw	r21,100(sp)
    2f04:	dd001817 	ldw	r20,96(sp)
    2f08:	dcc01717 	ldw	r19,92(sp)
    2f0c:	dc801617 	ldw	r18,88(sp)
    2f10:	dc401517 	ldw	r17,84(sp)
    2f14:	dc001417 	ldw	r16,80(sp)
    2f18:	dec01e04 	addi	sp,sp,120
    2f1c:	f800283a 	ret
    2f20:	dc800117 	ldw	r18,4(sp)
    2f24:	d8801204 	addi	r2,sp,72
    2f28:	9820d53a 	srli	r16,r19,20
    2f2c:	d8800015 	stw	r2,0(sp)
    2f30:	d9c01304 	addi	r7,sp,76
    2f34:	900b883a 	mov	r5,r18
    2f38:	880d883a 	mov	r6,r17
    2f3c:	e009883a 	mov	r4,fp
    2f40:	0006f940 	call	6f94 <__d2b>
    2f44:	102b883a 	mov	r21,r2
    2f48:	8001701e 	bne	r16,zero,350c <_dtoa_r+0x6e8>
    2f4c:	dc801217 	ldw	r18,72(sp)
    2f50:	dc001317 	ldw	r16,76(sp)
    2f54:	9421883a 	add	r16,r18,r16
    2f58:	80810c84 	addi	r2,r16,1074
    2f5c:	10c00850 	cmplti	r3,r2,33
    2f60:	18030f1e 	bne	r3,zero,3ba0 <_dtoa_r+0xd7c>
    2f64:	01001004 	movi	r4,64
    2f68:	2085c83a 	sub	r2,r4,r2
    2f6c:	98a6983a 	sll	r19,r19,r2
    2f70:	d8800117 	ldw	r2,4(sp)
    2f74:	81010484 	addi	r4,r16,1042
    2f78:	1108d83a 	srl	r4,r2,r4
    2f7c:	9908b03a 	or	r4,r19,r4
    2f80:	000ce500 	call	ce50 <__floatunsidf>
    2f84:	1009883a 	mov	r4,r2
    2f88:	017f8434 	movhi	r5,65040
    2f8c:	00800044 	movi	r2,1
    2f90:	194b883a 	add	r5,r3,r5
    2f94:	843fffc4 	addi	r16,r16,-1
    2f98:	d8800a15 	stw	r2,40(sp)
    2f9c:	000d883a 	mov	r6,zero
    2fa0:	01cffe34 	movhi	r7,16376
    2fa4:	000c3480 	call	c348 <__subdf3>
    2fa8:	0198dbf4 	movhi	r6,25455
    2fac:	01cff4f4 	movhi	r7,16339
    2fb0:	3190d844 	addi	r6,r6,17249
    2fb4:	39e1e9c4 	addi	r7,r7,-30809
    2fb8:	1009883a 	mov	r4,r2
    2fbc:	180b883a 	mov	r5,r3
    2fc0:	000bb680 	call	bb68 <__muldf3>
    2fc4:	01a2d874 	movhi	r6,35681
    2fc8:	01cff1f4 	movhi	r7,16327
    2fcc:	31b22cc4 	addi	r6,r6,-14157
    2fd0:	39e28a04 	addi	r7,r7,-30168
    2fd4:	180b883a 	mov	r5,r3
    2fd8:	1009883a 	mov	r4,r2
    2fdc:	000a6040 	call	a604 <__adddf3>
    2fe0:	8009883a 	mov	r4,r16
    2fe4:	1029883a 	mov	r20,r2
    2fe8:	1827883a 	mov	r19,r3
    2fec:	000cd880 	call	cd88 <__floatsidf>
    2ff0:	019427f4 	movhi	r6,20639
    2ff4:	01cff4f4 	movhi	r7,16339
    2ff8:	319e7ec4 	addi	r6,r6,31227
    2ffc:	39d104c4 	addi	r7,r7,17427
    3000:	1009883a 	mov	r4,r2
    3004:	180b883a 	mov	r5,r3
    3008:	000bb680 	call	bb68 <__muldf3>
    300c:	100d883a 	mov	r6,r2
    3010:	180f883a 	mov	r7,r3
    3014:	a009883a 	mov	r4,r20
    3018:	980b883a 	mov	r5,r19
    301c:	000a6040 	call	a604 <__adddf3>
    3020:	1009883a 	mov	r4,r2
    3024:	180b883a 	mov	r5,r3
    3028:	1029883a 	mov	r20,r2
    302c:	1827883a 	mov	r19,r3
    3030:	000cd080 	call	cd08 <__fixdfsi>
    3034:	000d883a 	mov	r6,zero
    3038:	000f883a 	mov	r7,zero
    303c:	a009883a 	mov	r4,r20
    3040:	980b883a 	mov	r5,r19
    3044:	102d883a 	mov	r22,r2
    3048:	000ba780 	call	ba78 <__ledf2>
    304c:	1002ba16 	blt	r2,zero,3b38 <_dtoa_r+0xd14>
    3050:	9421c83a 	sub	r16,r18,r16
    3054:	b08005e8 	cmpgeui	r2,r22,23
    3058:	853fffc4 	addi	r20,r16,-1
    305c:	1002ae1e 	bne	r2,zero,3b18 <_dtoa_r+0xcf4>
    3060:	b00690fa 	slli	r3,r22,3
    3064:	00800074 	movhi	r2,1
    3068:	10bdb504 	addi	r2,r2,-2348
    306c:	10c5883a 	add	r2,r2,r3
    3070:	11800017 	ldw	r6,0(r2)
    3074:	11c00117 	ldw	r7,4(r2)
    3078:	d9000117 	ldw	r4,4(sp)
    307c:	880b883a 	mov	r5,r17
    3080:	000ba780 	call	ba78 <__ledf2>
    3084:	10026f0e 	bge	r2,zero,3a44 <_dtoa_r+0xc20>
    3088:	d8000915 	stw	zero,36(sp)
    308c:	b5bfffc4 	addi	r22,r22,-1
    3090:	a002a416 	blt	r20,zero,3b24 <_dtoa_r+0xd00>
    3094:	d8000515 	stw	zero,20(sp)
    3098:	b0026d0e 	bge	r22,zero,3a50 <_dtoa_r+0xc2c>
    309c:	d8800517 	ldw	r2,20(sp)
    30a0:	d8c00217 	ldw	r3,8(sp)
    30a4:	dd800415 	stw	r22,16(sp)
    30a8:	1585c83a 	sub	r2,r2,r22
    30ac:	d8800515 	stw	r2,20(sp)
    30b0:	0585c83a 	sub	r2,zero,r22
    30b4:	d8800815 	stw	r2,32(sp)
    30b8:	188002a8 	cmpgeui	r2,r3,10
    30bc:	002d883a 	mov	r22,zero
    30c0:	1002691e 	bne	r2,zero,3a68 <_dtoa_r+0xc44>
    30c4:	18800190 	cmplti	r2,r3,6
    30c8:	1002ba1e 	bne	r2,zero,3bb4 <_dtoa_r+0xd90>
    30cc:	18bfff04 	addi	r2,r3,-4
    30d0:	d8800215 	stw	r2,8(sp)
    30d4:	0021883a 	mov	r16,zero
    30d8:	d8c00217 	ldw	r3,8(sp)
    30dc:	188000e0 	cmpeqi	r2,r3,3
    30e0:	10039d1e 	bne	r2,zero,3f58 <_dtoa_r+0x1134>
    30e4:	18800108 	cmpgei	r2,r3,4
    30e8:	10027a26 	beq	r2,zero,3ad4 <_dtoa_r+0xcb0>
    30ec:	d8c00217 	ldw	r3,8(sp)
    30f0:	18800120 	cmpeqi	r2,r3,4
    30f4:	10026926 	beq	r2,zero,3a9c <_dtoa_r+0xc78>
    30f8:	00800044 	movi	r2,1
    30fc:	d8800715 	stw	r2,28(sp)
    3100:	d8801e17 	ldw	r2,120(sp)
    3104:	0083670e 	bge	zero,r2,3ea4 <_dtoa_r+0x1080>
    3108:	d8800b15 	stw	r2,44(sp)
    310c:	d8800615 	stw	r2,24(sp)
    3110:	100d883a 	mov	r6,r2
    3114:	e0001115 	stw	zero,68(fp)
    3118:	30800610 	cmplti	r2,r6,24
    311c:	dc800617 	ldw	r18,24(sp)
    3120:	1004eb1e 	bne	r2,zero,44d0 <_dtoa_r+0x16ac>
    3124:	00c00044 	movi	r3,1
    3128:	00800104 	movi	r2,4
    312c:	1085883a 	add	r2,r2,r2
    3130:	11000504 	addi	r4,r2,20
    3134:	180b883a 	mov	r5,r3
    3138:	18c00044 	addi	r3,r3,1
    313c:	313ffb2e 	bgeu	r6,r4,312c <_dtoa_r+0x308>
    3140:	e1401115 	stw	r5,68(fp)
    3144:	e009883a 	mov	r4,fp
    3148:	00063200 	call	6320 <_Balloc>
    314c:	d8800315 	stw	r2,12(sp)
    3150:	e0801015 	stw	r2,64(fp)
    3154:	948003e8 	cmpgeui	r18,r18,15
    3158:	9000fe1e 	bne	r18,zero,3554 <_dtoa_r+0x730>
    315c:	8000fd26 	beq	r16,zero,3554 <_dtoa_r+0x730>
    3160:	d9000417 	ldw	r4,16(sp)
    3164:	0103c60e 	bge	zero,r4,4080 <_dtoa_r+0x125c>
    3168:	208003cc 	andi	r2,r4,15
    316c:	100690fa 	slli	r3,r2,3
    3170:	202fd13a 	srai	r23,r4,4
    3174:	00800074 	movhi	r2,1
    3178:	10bdb504 	addi	r2,r2,-2348
    317c:	10c5883a 	add	r2,r2,r3
    3180:	b8c0040c 	andi	r3,r23,16
    3184:	12800017 	ldw	r10,0(r2)
    3188:	12400117 	ldw	r9,4(r2)
    318c:	1803621e 	bne	r3,zero,3f18 <_dtoa_r+0x10f4>
    3190:	d8800117 	ldw	r2,4(sp)
    3194:	8827883a 	mov	r19,r17
    3198:	04000084 	movi	r16,2
    319c:	d8800c15 	stw	r2,48(sp)
    31a0:	04800074 	movhi	r18,1
    31a4:	94bdab04 	addi	r18,r18,-2388
    31a8:	b8000f26 	beq	r23,zero,31e8 <_dtoa_r+0x3c4>
    31ac:	5005883a 	mov	r2,r10
    31b0:	4807883a 	mov	r3,r9
    31b4:	b980004c 	andi	r6,r23,1
    31b8:	1009883a 	mov	r4,r2
    31bc:	b82fd07a 	srai	r23,r23,1
    31c0:	180b883a 	mov	r5,r3
    31c4:	30000426 	beq	r6,zero,31d8 <_dtoa_r+0x3b4>
    31c8:	91800017 	ldw	r6,0(r18)
    31cc:	91c00117 	ldw	r7,4(r18)
    31d0:	84000044 	addi	r16,r16,1
    31d4:	000bb680 	call	bb68 <__muldf3>
    31d8:	94800204 	addi	r18,r18,8
    31dc:	b83ff51e 	bne	r23,zero,31b4 <_dtoa_r+0x390>
    31e0:	1015883a 	mov	r10,r2
    31e4:	1813883a 	mov	r9,r3
    31e8:	d9000c17 	ldw	r4,48(sp)
    31ec:	980b883a 	mov	r5,r19
    31f0:	500d883a 	mov	r6,r10
    31f4:	480f883a 	mov	r7,r9
    31f8:	000afa40 	call	afa4 <__divdf3>
    31fc:	1025883a 	mov	r18,r2
    3200:	1827883a 	mov	r19,r3
    3204:	d8800917 	ldw	r2,36(sp)
    3208:	10000626 	beq	r2,zero,3224 <_dtoa_r+0x400>
    320c:	000d883a 	mov	r6,zero
    3210:	01cffc34 	movhi	r7,16368
    3214:	9009883a 	mov	r4,r18
    3218:	980b883a 	mov	r5,r19
    321c:	000ba780 	call	ba78 <__ledf2>
    3220:	10042616 	blt	r2,zero,42bc <_dtoa_r+0x1498>
    3224:	8009883a 	mov	r4,r16
    3228:	000cd880 	call	cd88 <__floatsidf>
    322c:	900d883a 	mov	r6,r18
    3230:	980f883a 	mov	r7,r19
    3234:	1009883a 	mov	r4,r2
    3238:	180b883a 	mov	r5,r3
    323c:	000bb680 	call	bb68 <__muldf3>
    3240:	000d883a 	mov	r6,zero
    3244:	01d00734 	movhi	r7,16412
    3248:	1009883a 	mov	r4,r2
    324c:	180b883a 	mov	r5,r3
    3250:	000a6040 	call	a604 <__adddf3>
    3254:	d8800c15 	stw	r2,48(sp)
    3258:	00bf3034 	movhi	r2,64704
    325c:	1885883a 	add	r2,r3,r2
    3260:	d8800d15 	stw	r2,52(sp)
    3264:	d8800617 	ldw	r2,24(sp)
    3268:	10036d26 	beq	r2,zero,4020 <_dtoa_r+0x11fc>
    326c:	d8800417 	ldw	r2,16(sp)
    3270:	d8800f15 	stw	r2,60(sp)
    3274:	d8800617 	ldw	r2,24(sp)
    3278:	d8800e15 	stw	r2,56(sp)
    327c:	980b883a 	mov	r5,r19
    3280:	9009883a 	mov	r4,r18
    3284:	000cd080 	call	cd08 <__fixdfsi>
    3288:	1009883a 	mov	r4,r2
    328c:	102f883a 	mov	r23,r2
    3290:	000cd880 	call	cd88 <__floatsidf>
    3294:	100d883a 	mov	r6,r2
    3298:	180f883a 	mov	r7,r3
    329c:	9009883a 	mov	r4,r18
    32a0:	980b883a 	mov	r5,r19
    32a4:	000c3480 	call	c348 <__subdf3>
    32a8:	1025883a 	mov	r18,r2
    32ac:	d8800e17 	ldw	r2,56(sp)
    32b0:	1821883a 	mov	r16,r3
    32b4:	ba400c04 	addi	r9,r23,48
    32b8:	10bfffc4 	addi	r2,r2,-1
    32bc:	100690fa 	slli	r3,r2,3
    32c0:	00800074 	movhi	r2,1
    32c4:	10bdb504 	addi	r2,r2,-2348
    32c8:	10c5883a 	add	r2,r2,r3
    32cc:	11800017 	ldw	r6,0(r2)
    32d0:	d8c00317 	ldw	r3,12(sp)
    32d4:	11c00117 	ldw	r7,4(r2)
    32d8:	d8800717 	ldw	r2,28(sp)
    32dc:	4811883a 	mov	r8,r9
    32e0:	da001015 	stw	r8,64(sp)
    32e4:	1dc00044 	addi	r23,r3,1
    32e8:	1003a226 	beq	r2,zero,4174 <_dtoa_r+0x1350>
    32ec:	0009883a 	mov	r4,zero
    32f0:	014ff834 	movhi	r5,16352
    32f4:	da401115 	stw	r9,68(sp)
    32f8:	000afa40 	call	afa4 <__divdf3>
    32fc:	d9800c17 	ldw	r6,48(sp)
    3300:	d9c00d17 	ldw	r7,52(sp)
    3304:	1009883a 	mov	r4,r2
    3308:	180b883a 	mov	r5,r3
    330c:	000c3480 	call	c348 <__subdf3>
    3310:	1827883a 	mov	r19,r3
    3314:	da401117 	ldw	r9,68(sp)
    3318:	d8c00317 	ldw	r3,12(sp)
    331c:	900d883a 	mov	r6,r18
    3320:	800f883a 	mov	r7,r16
    3324:	1a400005 	stb	r9,0(r3)
    3328:	1009883a 	mov	r4,r2
    332c:	980b883a 	mov	r5,r19
    3330:	d8800c15 	stw	r2,48(sp)
    3334:	000b9880 	call	b988 <__gedf2>
    3338:	da001017 	ldw	r8,64(sp)
    333c:	00804816 	blt	zero,r2,3460 <_dtoa_r+0x63c>
    3340:	900d883a 	mov	r6,r18
    3344:	800f883a 	mov	r7,r16
    3348:	0009883a 	mov	r4,zero
    334c:	014ffc34 	movhi	r5,16368
    3350:	da000d15 	stw	r8,52(sp)
    3354:	000c3480 	call	c348 <__subdf3>
    3358:	d9000c17 	ldw	r4,48(sp)
    335c:	100d883a 	mov	r6,r2
    3360:	180f883a 	mov	r7,r3
    3364:	980b883a 	mov	r5,r19
    3368:	000b9880 	call	b988 <__gedf2>
    336c:	da000d17 	ldw	r8,52(sp)
    3370:	00844e16 	blt	zero,r2,44ac <_dtoa_r+0x1688>
    3374:	d8c00e17 	ldw	r3,56(sp)
    3378:	18800060 	cmpeqi	r2,r3,1
    337c:	1000751e 	bne	r2,zero,3554 <_dtoa_r+0x730>
    3380:	d8800317 	ldw	r2,12(sp)
    3384:	dd800d15 	stw	r22,52(sp)
    3388:	dd000e15 	stw	r20,56(sp)
    338c:	10c5883a 	add	r2,r2,r3
    3390:	dd000c17 	ldw	r20,48(sp)
    3394:	102d883a 	mov	r22,r2
    3398:	dc400c15 	stw	r17,48(sp)
    339c:	00000806 	br	33c0 <_dtoa_r+0x59c>
    33a0:	000c3480 	call	c348 <__subdf3>
    33a4:	a00d883a 	mov	r6,r20
    33a8:	980f883a 	mov	r7,r19
    33ac:	1009883a 	mov	r4,r2
    33b0:	180b883a 	mov	r5,r3
    33b4:	000ba780 	call	ba78 <__ledf2>
    33b8:	10042316 	blt	r2,zero,4448 <_dtoa_r+0x1624>
    33bc:	bd806226 	beq	r23,r22,3548 <_dtoa_r+0x724>
    33c0:	a009883a 	mov	r4,r20
    33c4:	980b883a 	mov	r5,r19
    33c8:	000d883a 	mov	r6,zero
    33cc:	01d00934 	movhi	r7,16420
    33d0:	000bb680 	call	bb68 <__muldf3>
    33d4:	000d883a 	mov	r6,zero
    33d8:	01d00934 	movhi	r7,16420
    33dc:	9009883a 	mov	r4,r18
    33e0:	800b883a 	mov	r5,r16
    33e4:	1029883a 	mov	r20,r2
    33e8:	1827883a 	mov	r19,r3
    33ec:	000bb680 	call	bb68 <__muldf3>
    33f0:	180b883a 	mov	r5,r3
    33f4:	1009883a 	mov	r4,r2
    33f8:	1821883a 	mov	r16,r3
    33fc:	1025883a 	mov	r18,r2
    3400:	000cd080 	call	cd08 <__fixdfsi>
    3404:	1009883a 	mov	r4,r2
    3408:	1023883a 	mov	r17,r2
    340c:	000cd880 	call	cd88 <__floatsidf>
    3410:	9009883a 	mov	r4,r18
    3414:	800b883a 	mov	r5,r16
    3418:	100d883a 	mov	r6,r2
    341c:	180f883a 	mov	r7,r3
    3420:	000c3480 	call	c348 <__subdf3>
    3424:	bdc00044 	addi	r23,r23,1
    3428:	8c400c04 	addi	r17,r17,48
    342c:	a00d883a 	mov	r6,r20
    3430:	980f883a 	mov	r7,r19
    3434:	1009883a 	mov	r4,r2
    3438:	180b883a 	mov	r5,r3
    343c:	bc7fffc5 	stb	r17,-1(r23)
    3440:	1025883a 	mov	r18,r2
    3444:	1821883a 	mov	r16,r3
    3448:	000ba780 	call	ba78 <__ledf2>
    344c:	900d883a 	mov	r6,r18
    3450:	800f883a 	mov	r7,r16
    3454:	0009883a 	mov	r4,zero
    3458:	014ffc34 	movhi	r5,16368
    345c:	103fd00e 	bge	r2,zero,33a0 <_dtoa_r+0x57c>
    3460:	d8800f17 	ldw	r2,60(sp)
    3464:	10800044 	addi	r2,r2,1
    3468:	d8800415 	stw	r2,16(sp)
    346c:	a80b883a 	mov	r5,r21
    3470:	e009883a 	mov	r4,fp
    3474:	00063c40 	call	63c4 <_Bfree>
    3478:	d8801f17 	ldw	r2,124(sp)
    347c:	d8c00417 	ldw	r3,16(sp)
    3480:	b8000005 	stb	zero,0(r23)
    3484:	10c00015 	stw	r3,0(r2)
    3488:	d8802117 	ldw	r2,132(sp)
    348c:	103e9726 	beq	r2,zero,2eec <_dtoa_r+0xc8>
    3490:	15c00015 	stw	r23,0(r2)
    3494:	003e9506 	br	2eec <_dtoa_r+0xc8>
    3498:	04600034 	movhi	r17,32768
    349c:	8c7fffc4 	addi	r17,r17,-1
    34a0:	9c62703a 	and	r17,r19,r17
    34a4:	00800044 	movi	r2,1
    34a8:	8827883a 	mov	r19,r17
    34ac:	80800015 	stw	r2,0(r16)
    34b0:	00dffc34 	movhi	r3,32752
    34b4:	989ffc2c 	andhi	r2,r19,32752
    34b8:	10fe7a1e 	bne	r2,r3,2ea4 <_dtoa_r+0x80>
    34bc:	00800434 	movhi	r2,16
    34c0:	d8c01f17 	ldw	r3,124(sp)
    34c4:	10bfffc4 	addi	r2,r2,-1
    34c8:	98a6703a 	and	r19,r19,r2
    34cc:	0089c3c4 	movi	r2,9999
    34d0:	18800015 	stw	r2,0(r3)
    34d4:	d8800117 	ldw	r2,4(sp)
    34d8:	98aab03a 	or	r21,r19,r2
    34dc:	a800141e 	bne	r21,zero,3530 <_dtoa_r+0x70c>
    34e0:	d8802117 	ldw	r2,132(sp)
    34e4:	1003f626 	beq	r2,zero,44c0 <_dtoa_r+0x169c>
    34e8:	00800074 	movhi	r2,1
    34ec:	1007883a 	mov	r3,r2
    34f0:	18fd9b04 	addi	r3,r3,-2452
    34f4:	00800074 	movhi	r2,1
    34f8:	d8c00315 	stw	r3,12(sp)
    34fc:	10bd9d04 	addi	r2,r2,-2444
    3500:	d8c02117 	ldw	r3,132(sp)
    3504:	18800015 	stw	r2,0(r3)
    3508:	003e7806 	br	2eec <_dtoa_r+0xc8>
    350c:	01400434 	movhi	r5,16
    3510:	297fffc4 	addi	r5,r5,-1
    3514:	894a703a 	and	r5,r17,r5
    3518:	9009883a 	mov	r4,r18
    351c:	294ffc34 	orhi	r5,r5,16368
    3520:	843f0044 	addi	r16,r16,-1023
    3524:	dc801217 	ldw	r18,72(sp)
    3528:	d8000a15 	stw	zero,40(sp)
    352c:	003e9b06 	br	2f9c <_dtoa_r+0x178>
    3530:	d8802117 	ldw	r2,132(sp)
    3534:	1002461e 	bne	r2,zero,3e50 <_dtoa_r+0x102c>
    3538:	00800074 	movhi	r2,1
    353c:	10bd9a04 	addi	r2,r2,-2456
    3540:	d8800315 	stw	r2,12(sp)
    3544:	003e6906 	br	2eec <_dtoa_r+0xc8>
    3548:	dd800d17 	ldw	r22,52(sp)
    354c:	dd000e17 	ldw	r20,56(sp)
    3550:	dc400c17 	ldw	r17,48(sp)
    3554:	d8801317 	ldw	r2,76(sp)
    3558:	10009f16 	blt	r2,zero,37d8 <_dtoa_r+0x9b4>
    355c:	d9000417 	ldw	r4,16(sp)
    3560:	20c003c8 	cmpgei	r3,r4,15
    3564:	18009c1e 	bne	r3,zero,37d8 <_dtoa_r+0x9b4>
    3568:	200690fa 	slli	r3,r4,3
    356c:	00800074 	movhi	r2,1
    3570:	10bdb504 	addi	r2,r2,-2348
    3574:	10c5883a 	add	r2,r2,r3
    3578:	14000017 	ldw	r16,0(r2)
    357c:	14800117 	ldw	r18,4(r2)
    3580:	d8801e17 	ldw	r2,120(sp)
    3584:	1000140e 	bge	r2,zero,35d8 <_dtoa_r+0x7b4>
    3588:	d8800617 	ldw	r2,24(sp)
    358c:	00801216 	blt	zero,r2,35d8 <_dtoa_r+0x7b4>
    3590:	1002b81e 	bne	r2,zero,4074 <_dtoa_r+0x1250>
    3594:	8009883a 	mov	r4,r16
    3598:	900b883a 	mov	r5,r18
    359c:	000d883a 	mov	r6,zero
    35a0:	01d00534 	movhi	r7,16404
    35a4:	000bb680 	call	bb68 <__muldf3>
    35a8:	d9800117 	ldw	r6,4(sp)
    35ac:	880f883a 	mov	r7,r17
    35b0:	1009883a 	mov	r4,r2
    35b4:	180b883a 	mov	r5,r3
    35b8:	000b9880 	call	b988 <__gedf2>
    35bc:	0025883a 	mov	r18,zero
    35c0:	0021883a 	mov	r16,zero
    35c4:	1001fd16 	blt	r2,zero,3dbc <_dtoa_r+0xf98>
    35c8:	d8801e17 	ldw	r2,120(sp)
    35cc:	ddc00317 	ldw	r23,12(sp)
    35d0:	00a2303a 	nor	r17,zero,r2
    35d4:	0001ff06 	br	3dd4 <_dtoa_r+0xfb0>
    35d8:	dcc00117 	ldw	r19,4(sp)
    35dc:	800d883a 	mov	r6,r16
    35e0:	900f883a 	mov	r7,r18
    35e4:	880b883a 	mov	r5,r17
    35e8:	9809883a 	mov	r4,r19
    35ec:	000afa40 	call	afa4 <__divdf3>
    35f0:	180b883a 	mov	r5,r3
    35f4:	1009883a 	mov	r4,r2
    35f8:	000cd080 	call	cd08 <__fixdfsi>
    35fc:	1009883a 	mov	r4,r2
    3600:	102d883a 	mov	r22,r2
    3604:	000cd880 	call	cd88 <__floatsidf>
    3608:	800d883a 	mov	r6,r16
    360c:	900f883a 	mov	r7,r18
    3610:	1009883a 	mov	r4,r2
    3614:	180b883a 	mov	r5,r3
    3618:	000bb680 	call	bb68 <__muldf3>
    361c:	880b883a 	mov	r5,r17
    3620:	100d883a 	mov	r6,r2
    3624:	180f883a 	mov	r7,r3
    3628:	9809883a 	mov	r4,r19
    362c:	000c3480 	call	c348 <__subdf3>
    3630:	dc400317 	ldw	r17,12(sp)
    3634:	1009883a 	mov	r4,r2
    3638:	d9c00417 	ldw	r7,16(sp)
    363c:	b0800c04 	addi	r2,r22,48
    3640:	88800005 	stb	r2,0(r17)
    3644:	d8800617 	ldw	r2,24(sp)
    3648:	39c00044 	addi	r7,r7,1
    364c:	d9c00415 	stw	r7,16(sp)
    3650:	11800060 	cmpeqi	r6,r2,1
    3654:	180b883a 	mov	r5,r3
    3658:	2005883a 	mov	r2,r4
    365c:	8dc00044 	addi	r23,r17,1
    3660:	3000391e 	bne	r6,zero,3748 <_dtoa_r+0x924>
    3664:	01d00934 	movhi	r7,16420
    3668:	000bb680 	call	bb68 <__muldf3>
    366c:	000d883a 	mov	r6,zero
    3670:	000f883a 	mov	r7,zero
    3674:	1009883a 	mov	r4,r2
    3678:	180b883a 	mov	r5,r3
    367c:	1027883a 	mov	r19,r2
    3680:	1829883a 	mov	r20,r3
    3684:	000b9080 	call	b908 <__eqdf2>
    3688:	103f7826 	beq	r2,zero,346c <_dtoa_r+0x648>
    368c:	d8c00617 	ldw	r3,24(sp)
    3690:	8805883a 	mov	r2,r17
    3694:	dd400115 	stw	r21,4(sp)
    3698:	8c400084 	addi	r17,r17,2
    369c:	10ed883a 	add	r22,r2,r3
    36a0:	00000a06 	br	36cc <_dtoa_r+0x8a8>
    36a4:	000bb680 	call	bb68 <__muldf3>
    36a8:	000d883a 	mov	r6,zero
    36ac:	000f883a 	mov	r7,zero
    36b0:	1009883a 	mov	r4,r2
    36b4:	180b883a 	mov	r5,r3
    36b8:	1027883a 	mov	r19,r2
    36bc:	1829883a 	mov	r20,r3
    36c0:	8c400044 	addi	r17,r17,1
    36c4:	000b9080 	call	b908 <__eqdf2>
    36c8:	10029d26 	beq	r2,zero,4140 <_dtoa_r+0x131c>
    36cc:	800d883a 	mov	r6,r16
    36d0:	900f883a 	mov	r7,r18
    36d4:	9809883a 	mov	r4,r19
    36d8:	a00b883a 	mov	r5,r20
    36dc:	000afa40 	call	afa4 <__divdf3>
    36e0:	180b883a 	mov	r5,r3
    36e4:	1009883a 	mov	r4,r2
    36e8:	000cd080 	call	cd08 <__fixdfsi>
    36ec:	1009883a 	mov	r4,r2
    36f0:	102b883a 	mov	r21,r2
    36f4:	000cd880 	call	cd88 <__floatsidf>
    36f8:	800d883a 	mov	r6,r16
    36fc:	900f883a 	mov	r7,r18
    3700:	1009883a 	mov	r4,r2
    3704:	180b883a 	mov	r5,r3
    3708:	000bb680 	call	bb68 <__muldf3>
    370c:	100d883a 	mov	r6,r2
    3710:	180f883a 	mov	r7,r3
    3714:	9809883a 	mov	r4,r19
    3718:	a00b883a 	mov	r5,r20
    371c:	000c3480 	call	c348 <__subdf3>
    3720:	aa400c04 	addi	r9,r21,48
    3724:	8a7fffc5 	stb	r9,-1(r17)
    3728:	000d883a 	mov	r6,zero
    372c:	01d00934 	movhi	r7,16420
    3730:	1009883a 	mov	r4,r2
    3734:	180b883a 	mov	r5,r3
    3738:	882f883a 	mov	r23,r17
    373c:	b47fd91e 	bne	r22,r17,36a4 <_dtoa_r+0x880>
    3740:	a82d883a 	mov	r22,r21
    3744:	dd400117 	ldw	r21,4(sp)
    3748:	100d883a 	mov	r6,r2
    374c:	180f883a 	mov	r7,r3
    3750:	1009883a 	mov	r4,r2
    3754:	180b883a 	mov	r5,r3
    3758:	000a6040 	call	a604 <__adddf3>
    375c:	800d883a 	mov	r6,r16
    3760:	900f883a 	mov	r7,r18
    3764:	1009883a 	mov	r4,r2
    3768:	180b883a 	mov	r5,r3
    376c:	1027883a 	mov	r19,r2
    3770:	1823883a 	mov	r17,r3
    3774:	000b9880 	call	b988 <__gedf2>
    3778:	00800816 	blt	zero,r2,379c <_dtoa_r+0x978>
    377c:	800d883a 	mov	r6,r16
    3780:	900f883a 	mov	r7,r18
    3784:	9809883a 	mov	r4,r19
    3788:	880b883a 	mov	r5,r17
    378c:	000b9080 	call	b908 <__eqdf2>
    3790:	103f361e 	bne	r2,zero,346c <_dtoa_r+0x648>
    3794:	b580004c 	andi	r22,r22,1
    3798:	b03f3426 	beq	r22,zero,346c <_dtoa_r+0x648>
    379c:	ba3fffc3 	ldbu	r8,-1(r23)
    37a0:	d9000317 	ldw	r4,12(sp)
    37a4:	00000306 	br	37b4 <_dtoa_r+0x990>
    37a8:	20c30e26 	beq	r4,r3,43e4 <_dtoa_r+0x15c0>
    37ac:	1a3fffc3 	ldbu	r8,-1(r3)
    37b0:	182f883a 	mov	r23,r3
    37b4:	40803fcc 	andi	r2,r8,255
    37b8:	1080201c 	xori	r2,r2,128
    37bc:	10bfe004 	addi	r2,r2,-128
    37c0:	10800e60 	cmpeqi	r2,r2,57
    37c4:	b8ffffc4 	addi	r3,r23,-1
    37c8:	103ff71e 	bne	r2,zero,37a8 <_dtoa_r+0x984>
    37cc:	42000044 	addi	r8,r8,1
    37d0:	1a000005 	stb	r8,0(r3)
    37d4:	003f2506 	br	346c <_dtoa_r+0x648>
    37d8:	d8c00717 	ldw	r3,28(sp)
    37dc:	1800e426 	beq	r3,zero,3b70 <_dtoa_r+0xd4c>
    37e0:	d8c00217 	ldw	r3,8(sp)
    37e4:	18c00088 	cmpgei	r3,r3,2
    37e8:	1801ec26 	beq	r3,zero,3f9c <_dtoa_r+0x1178>
    37ec:	d8800617 	ldw	r2,24(sp)
    37f0:	14bfffc4 	addi	r18,r2,-1
    37f4:	d8800817 	ldw	r2,32(sp)
    37f8:	1481c50e 	bge	r2,r18,3f10 <_dtoa_r+0x10ec>
    37fc:	d8800817 	ldw	r2,32(sp)
    3800:	dc800815 	stw	r18,32(sp)
    3804:	9085c83a 	sub	r2,r18,r2
    3808:	b0ad883a 	add	r22,r22,r2
    380c:	0025883a 	mov	r18,zero
    3810:	d8800617 	ldw	r2,24(sp)
    3814:	10024c16 	blt	r2,zero,4148 <_dtoa_r+0x1324>
    3818:	d8c00517 	ldw	r3,20(sp)
    381c:	a0a9883a 	add	r20,r20,r2
    3820:	1885883a 	add	r2,r3,r2
    3824:	1827883a 	mov	r19,r3
    3828:	d8800515 	stw	r2,20(sp)
    382c:	01400044 	movi	r5,1
    3830:	e009883a 	mov	r4,fp
    3834:	00067480 	call	6748 <__i2b>
    3838:	1021883a 	mov	r16,r2
    383c:	04c0080e 	bge	zero,r19,3860 <_dtoa_r+0xa3c>
    3840:	0500070e 	bge	zero,r20,3860 <_dtoa_r+0xa3c>
    3844:	9805883a 	mov	r2,r19
    3848:	a4c1a916 	blt	r20,r19,3ef0 <_dtoa_r+0x10cc>
    384c:	d8c00517 	ldw	r3,20(sp)
    3850:	98a7c83a 	sub	r19,r19,r2
    3854:	a0a9c83a 	sub	r20,r20,r2
    3858:	1887c83a 	sub	r3,r3,r2
    385c:	d8c00515 	stw	r3,20(sp)
    3860:	d8800817 	ldw	r2,32(sp)
    3864:	10001426 	beq	r2,zero,38b8 <_dtoa_r+0xa94>
    3868:	d8800717 	ldw	r2,28(sp)
    386c:	10017226 	beq	r2,zero,3e38 <_dtoa_r+0x1014>
    3870:	04800e0e 	bge	zero,r18,38ac <_dtoa_r+0xa88>
    3874:	800b883a 	mov	r5,r16
    3878:	900d883a 	mov	r6,r18
    387c:	e009883a 	mov	r4,fp
    3880:	00069bc0 	call	69bc <__pow5mult>
    3884:	a80d883a 	mov	r6,r21
    3888:	100b883a 	mov	r5,r2
    388c:	e009883a 	mov	r4,fp
    3890:	1021883a 	mov	r16,r2
    3894:	000677c0 	call	677c <__multiply>
    3898:	102f883a 	mov	r23,r2
    389c:	a80b883a 	mov	r5,r21
    38a0:	e009883a 	mov	r4,fp
    38a4:	00063c40 	call	63c4 <_Bfree>
    38a8:	b82b883a 	mov	r21,r23
    38ac:	d8800817 	ldw	r2,32(sp)
    38b0:	148dc83a 	sub	r6,r2,r18
    38b4:	3001611e 	bne	r6,zero,3e3c <_dtoa_r+0x1018>
    38b8:	01400044 	movi	r5,1
    38bc:	e009883a 	mov	r4,fp
    38c0:	00067480 	call	6748 <__i2b>
    38c4:	1025883a 	mov	r18,r2
    38c8:	0580bc16 	blt	zero,r22,3bbc <_dtoa_r+0xd98>
    38cc:	d8800217 	ldw	r2,8(sp)
    38d0:	10800088 	cmpgei	r2,r2,2
    38d4:	10016526 	beq	r2,zero,3e6c <_dtoa_r+0x1048>
    38d8:	0023883a 	mov	r17,zero
    38dc:	00800044 	movi	r2,1
    38e0:	b000bf1e 	bne	r22,zero,3be0 <_dtoa_r+0xdbc>
    38e4:	1505883a 	add	r2,r2,r20
    38e8:	108007cc 	andi	r2,r2,31
    38ec:	1000aa26 	beq	r2,zero,3b98 <_dtoa_r+0xd74>
    38f0:	00c00804 	movi	r3,32
    38f4:	1887c83a 	sub	r3,r3,r2
    38f8:	19000150 	cmplti	r4,r3,5
    38fc:	2002f61e 	bne	r4,zero,44d8 <_dtoa_r+0x16b4>
    3900:	00c00704 	movi	r3,28
    3904:	1885c83a 	sub	r2,r3,r2
    3908:	d8c00517 	ldw	r3,20(sp)
    390c:	98a7883a 	add	r19,r19,r2
    3910:	a0a9883a 	add	r20,r20,r2
    3914:	1887883a 	add	r3,r3,r2
    3918:	d8c00515 	stw	r3,20(sp)
    391c:	d8800517 	ldw	r2,20(sp)
    3920:	00809716 	blt	zero,r2,3b80 <_dtoa_r+0xd5c>
    3924:	0500050e 	bge	zero,r20,393c <_dtoa_r+0xb18>
    3928:	900b883a 	mov	r5,r18
    392c:	a00d883a 	mov	r6,r20
    3930:	e009883a 	mov	r4,fp
    3934:	0006ae40 	call	6ae4 <__lshift>
    3938:	1025883a 	mov	r18,r2
    393c:	d8800917 	ldw	r2,36(sp)
    3940:	10012b1e 	bne	r2,zero,3df0 <_dtoa_r+0xfcc>
    3944:	d8800617 	ldw	r2,24(sp)
    3948:	00810d0e 	bge	zero,r2,3d80 <_dtoa_r+0xf5c>
    394c:	d8800417 	ldw	r2,16(sp)
    3950:	10800044 	addi	r2,r2,1
    3954:	d8800415 	stw	r2,16(sp)
    3958:	d8800717 	ldw	r2,28(sp)
    395c:	1000b21e 	bne	r2,zero,3c28 <_dtoa_r+0xe04>
    3960:	ddc00317 	ldw	r23,12(sp)
    3964:	04400044 	movi	r17,1
    3968:	dcc00617 	ldw	r19,24(sp)
    396c:	00000306 	br	397c <_dtoa_r+0xb58>
    3970:	00063e80 	call	63e8 <__multadd>
    3974:	102b883a 	mov	r21,r2
    3978:	8c400044 	addi	r17,r17,1
    397c:	900b883a 	mov	r5,r18
    3980:	a809883a 	mov	r4,r21
    3984:	0002bf00 	call	2bf0 <quorem>
    3988:	10800c04 	addi	r2,r2,48
    398c:	bdc00044 	addi	r23,r23,1
    3990:	b8bfffc5 	stb	r2,-1(r23)
    3994:	000f883a 	mov	r7,zero
    3998:	01800284 	movi	r6,10
    399c:	a80b883a 	mov	r5,r21
    39a0:	e009883a 	mov	r4,fp
    39a4:	8cfff216 	blt	r17,r19,3970 <_dtoa_r+0xb4c>
    39a8:	1011883a 	mov	r8,r2
    39ac:	0029883a 	mov	r20,zero
    39b0:	a80b883a 	mov	r5,r21
    39b4:	01800044 	movi	r6,1
    39b8:	e009883a 	mov	r4,fp
    39bc:	da000115 	stw	r8,4(sp)
    39c0:	0006ae40 	call	6ae4 <__lshift>
    39c4:	900b883a 	mov	r5,r18
    39c8:	1009883a 	mov	r4,r2
    39cc:	102b883a 	mov	r21,r2
    39d0:	0006c200 	call	6c20 <__mcmp>
    39d4:	b8ffffc3 	ldbu	r3,-1(r23)
    39d8:	0081610e 	bge	zero,r2,3f60 <_dtoa_r+0x113c>
    39dc:	d9400317 	ldw	r5,12(sp)
    39e0:	00000306 	br	39f0 <_dtoa_r+0xbcc>
    39e4:	29017726 	beq	r5,r4,3fc4 <_dtoa_r+0x11a0>
    39e8:	20ffffc3 	ldbu	r3,-1(r4)
    39ec:	202f883a 	mov	r23,r4
    39f0:	18803fcc 	andi	r2,r3,255
    39f4:	1080201c 	xori	r2,r2,128
    39f8:	10bfe004 	addi	r2,r2,-128
    39fc:	10800e60 	cmpeqi	r2,r2,57
    3a00:	b93fffc4 	addi	r4,r23,-1
    3a04:	103ff71e 	bne	r2,zero,39e4 <_dtoa_r+0xbc0>
    3a08:	18c00044 	addi	r3,r3,1
    3a0c:	20c00005 	stb	r3,0(r4)
    3a10:	900b883a 	mov	r5,r18
    3a14:	e009883a 	mov	r4,fp
    3a18:	00063c40 	call	63c4 <_Bfree>
    3a1c:	803e9326 	beq	r16,zero,346c <_dtoa_r+0x648>
    3a20:	a0000426 	beq	r20,zero,3a34 <_dtoa_r+0xc10>
    3a24:	a4000326 	beq	r20,r16,3a34 <_dtoa_r+0xc10>
    3a28:	a00b883a 	mov	r5,r20
    3a2c:	e009883a 	mov	r4,fp
    3a30:	00063c40 	call	63c4 <_Bfree>
    3a34:	800b883a 	mov	r5,r16
    3a38:	e009883a 	mov	r4,fp
    3a3c:	00063c40 	call	63c4 <_Bfree>
    3a40:	003e8a06 	br	346c <_dtoa_r+0x648>
    3a44:	d8000915 	stw	zero,36(sp)
    3a48:	a0003616 	blt	r20,zero,3b24 <_dtoa_r+0xd00>
    3a4c:	d8000515 	stw	zero,20(sp)
    3a50:	d8c00217 	ldw	r3,8(sp)
    3a54:	dd800415 	stw	r22,16(sp)
    3a58:	d8000815 	stw	zero,32(sp)
    3a5c:	188002a8 	cmpgeui	r2,r3,10
    3a60:	a5a9883a 	add	r20,r20,r22
    3a64:	103d9726 	beq	r2,zero,30c4 <_dtoa_r+0x2a0>
    3a68:	00800044 	movi	r2,1
    3a6c:	d8800715 	stw	r2,28(sp)
    3a70:	00bfffc4 	movi	r2,-1
    3a74:	04bfffc4 	movi	r18,-1
    3a78:	04000044 	movi	r16,1
    3a7c:	d8000215 	stw	zero,8(sp)
    3a80:	d8800615 	stw	r2,24(sp)
    3a84:	d8001e15 	stw	zero,120(sp)
    3a88:	d8800617 	ldw	r2,24(sp)
    3a8c:	e0001115 	stw	zero,68(fp)
    3a90:	000b883a 	mov	r5,zero
    3a94:	d8800b15 	stw	r2,44(sp)
    3a98:	003daa06 	br	3144 <_dtoa_r+0x320>
    3a9c:	18800160 	cmpeqi	r2,r3,5
    3aa0:	00c00044 	movi	r3,1
    3aa4:	d8c00715 	stw	r3,28(sp)
    3aa8:	10000d26 	beq	r2,zero,3ae0 <_dtoa_r+0xcbc>
    3aac:	d8801e17 	ldw	r2,120(sp)
    3ab0:	d8c00417 	ldw	r3,16(sp)
    3ab4:	10c5883a 	add	r2,r2,r3
    3ab8:	d8800b15 	stw	r2,44(sp)
    3abc:	10800044 	addi	r2,r2,1
    3ac0:	d8800615 	stw	r2,24(sp)
    3ac4:	100d883a 	mov	r6,r2
    3ac8:	00bd9216 	blt	zero,r2,3114 <_dtoa_r+0x2f0>
    3acc:	01800044 	movi	r6,1
    3ad0:	003d9006 	br	3114 <_dtoa_r+0x2f0>
    3ad4:	188000a0 	cmpeqi	r2,r3,2
    3ad8:	d8000715 	stw	zero,28(sp)
    3adc:	103d881e 	bne	r2,zero,3100 <_dtoa_r+0x2dc>
    3ae0:	e0001115 	stw	zero,68(fp)
    3ae4:	000b883a 	mov	r5,zero
    3ae8:	e009883a 	mov	r4,fp
    3aec:	00063200 	call	6320 <_Balloc>
    3af0:	d8800315 	stw	r2,12(sp)
    3af4:	e0801015 	stw	r2,64(fp)
    3af8:	00bfffc4 	movi	r2,-1
    3afc:	d8800b15 	stw	r2,44(sp)
    3b00:	00800044 	movi	r2,1
    3b04:	d8800715 	stw	r2,28(sp)
    3b08:	00bfffc4 	movi	r2,-1
    3b0c:	d8001e15 	stw	zero,120(sp)
    3b10:	d8800615 	stw	r2,24(sp)
    3b14:	003e8f06 	br	3554 <_dtoa_r+0x730>
    3b18:	00800044 	movi	r2,1
    3b1c:	d8800915 	stw	r2,36(sp)
    3b20:	a03d5c0e 	bge	r20,zero,3094 <_dtoa_r+0x270>
    3b24:	04800044 	movi	r18,1
    3b28:	9405c83a 	sub	r2,r18,r16
    3b2c:	d8800515 	stw	r2,20(sp)
    3b30:	0029883a 	mov	r20,zero
    3b34:	003d5806 	br	3098 <_dtoa_r+0x274>
    3b38:	b009883a 	mov	r4,r22
    3b3c:	000cd880 	call	cd88 <__floatsidf>
    3b40:	a00d883a 	mov	r6,r20
    3b44:	980f883a 	mov	r7,r19
    3b48:	1009883a 	mov	r4,r2
    3b4c:	180b883a 	mov	r5,r3
    3b50:	000b9080 	call	b908 <__eqdf2>
    3b54:	103d3e26 	beq	r2,zero,3050 <_dtoa_r+0x22c>
    3b58:	b5bfffc4 	addi	r22,r22,-1
    3b5c:	003d3c06 	br	3050 <_dtoa_r+0x22c>
    3b60:	00800074 	movhi	r2,1
    3b64:	10bd9104 	addi	r2,r2,-2492
    3b68:	d8800315 	stw	r2,12(sp)
    3b6c:	003cdf06 	br	2eec <_dtoa_r+0xc8>
    3b70:	dc800817 	ldw	r18,32(sp)
    3b74:	dcc00517 	ldw	r19,20(sp)
    3b78:	0021883a 	mov	r16,zero
    3b7c:	003f2f06 	br	383c <_dtoa_r+0xa18>
    3b80:	a80b883a 	mov	r5,r21
    3b84:	100d883a 	mov	r6,r2
    3b88:	e009883a 	mov	r4,fp
    3b8c:	0006ae40 	call	6ae4 <__lshift>
    3b90:	102b883a 	mov	r21,r2
    3b94:	003f6306 	br	3924 <_dtoa_r+0xb00>
    3b98:	00800704 	movi	r2,28
    3b9c:	003f5a06 	br	3908 <_dtoa_r+0xae4>
    3ba0:	01000804 	movi	r4,32
    3ba4:	2089c83a 	sub	r4,r4,r2
    3ba8:	d8800117 	ldw	r2,4(sp)
    3bac:	1108983a 	sll	r4,r2,r4
    3bb0:	003cf306 	br	2f80 <_dtoa_r+0x15c>
    3bb4:	04000044 	movi	r16,1
    3bb8:	003d4706 	br	30d8 <_dtoa_r+0x2b4>
    3bbc:	b00d883a 	mov	r6,r22
    3bc0:	100b883a 	mov	r5,r2
    3bc4:	e009883a 	mov	r4,fp
    3bc8:	00069bc0 	call	69bc <__pow5mult>
    3bcc:	1025883a 	mov	r18,r2
    3bd0:	d8800217 	ldw	r2,8(sp)
    3bd4:	10800090 	cmplti	r2,r2,2
    3bd8:	10012f1e 	bne	r2,zero,4098 <_dtoa_r+0x1274>
    3bdc:	0023883a 	mov	r17,zero
    3be0:	90800417 	ldw	r2,16(r18)
    3be4:	10800104 	addi	r2,r2,4
    3be8:	100490ba 	slli	r2,r2,2
    3bec:	9085883a 	add	r2,r18,r2
    3bf0:	11000017 	ldw	r4,0(r2)
    3bf4:	00066340 	call	6634 <__hi0bits>
    3bf8:	00c00804 	movi	r3,32
    3bfc:	1885c83a 	sub	r2,r3,r2
    3c00:	003f3806 	br	38e4 <_dtoa_r+0xac0>
    3c04:	800b883a 	mov	r5,r16
    3c08:	000f883a 	mov	r7,zero
    3c0c:	01800284 	movi	r6,10
    3c10:	e009883a 	mov	r4,fp
    3c14:	00063e80 	call	63e8 <__multadd>
    3c18:	1021883a 	mov	r16,r2
    3c1c:	d8800b17 	ldw	r2,44(sp)
    3c20:	00821b0e 	bge	zero,r2,4490 <_dtoa_r+0x166c>
    3c24:	d8800615 	stw	r2,24(sp)
    3c28:	04c0b316 	blt	zero,r19,3ef8 <_dtoa_r+0x10d4>
    3c2c:	8801341e 	bne	r17,zero,4100 <_dtoa_r+0x12dc>
    3c30:	8027883a 	mov	r19,r16
    3c34:	dc400317 	ldw	r17,12(sp)
    3c38:	d8c00617 	ldw	r3,24(sp)
    3c3c:	d8800117 	ldw	r2,4(sp)
    3c40:	8dffffc4 	addi	r23,r17,-1
    3c44:	b8c7883a 	add	r3,r23,r3
    3c48:	d8c00615 	stw	r3,24(sp)
    3c4c:	d8c00217 	ldw	r3,8(sp)
    3c50:	1080004c 	andi	r2,r2,1
    3c54:	d8800815 	stw	r2,32(sp)
    3c58:	10c4b03a 	or	r2,r2,r3
    3c5c:	d8800715 	stw	r2,28(sp)
    3c60:	00002c06 	br	3d14 <_dtoa_r+0xef0>
    3c64:	b80b883a 	mov	r5,r23
    3c68:	a809883a 	mov	r4,r21
    3c6c:	da000515 	stw	r8,20(sp)
    3c70:	0006c200 	call	6c20 <__mcmp>
    3c74:	b80b883a 	mov	r5,r23
    3c78:	e009883a 	mov	r4,fp
    3c7c:	d8800115 	stw	r2,4(sp)
    3c80:	00063c40 	call	63c4 <_Bfree>
    3c84:	d8800117 	ldw	r2,4(sp)
    3c88:	da000517 	ldw	r8,20(sp)
    3c8c:	1000021e 	bne	r2,zero,3c98 <_dtoa_r+0xe74>
    3c90:	d8c00717 	ldw	r3,28(sp)
    3c94:	1801f226 	beq	r3,zero,4460 <_dtoa_r+0x163c>
    3c98:	8dc00044 	addi	r23,r17,1
    3c9c:	a0010516 	blt	r20,zero,40b4 <_dtoa_r+0x1290>
    3ca0:	d8c00217 	ldw	r3,8(sp)
    3ca4:	a0e8b03a 	or	r20,r20,r3
    3ca8:	d8c00817 	ldw	r3,32(sp)
    3cac:	1d28b03a 	or	r20,r3,r20
    3cb0:	a0010026 	beq	r20,zero,40b4 <_dtoa_r+0x1290>
    3cb4:	00812816 	blt	zero,r2,4158 <_dtoa_r+0x1334>
    3cb8:	d8800617 	ldw	r2,24(sp)
    3cbc:	8a000005 	stb	r8,0(r17)
    3cc0:	14412926 	beq	r2,r17,4168 <_dtoa_r+0x1344>
    3cc4:	a80b883a 	mov	r5,r21
    3cc8:	000f883a 	mov	r7,zero
    3ccc:	01800284 	movi	r6,10
    3cd0:	e009883a 	mov	r4,fp
    3cd4:	00063e80 	call	63e8 <__multadd>
    3cd8:	102b883a 	mov	r21,r2
    3cdc:	000f883a 	mov	r7,zero
    3ce0:	01800284 	movi	r6,10
    3ce4:	800b883a 	mov	r5,r16
    3ce8:	e009883a 	mov	r4,fp
    3cec:	84c02026 	beq	r16,r19,3d70 <_dtoa_r+0xf4c>
    3cf0:	00063e80 	call	63e8 <__multadd>
    3cf4:	980b883a 	mov	r5,r19
    3cf8:	000f883a 	mov	r7,zero
    3cfc:	01800284 	movi	r6,10
    3d00:	e009883a 	mov	r4,fp
    3d04:	1021883a 	mov	r16,r2
    3d08:	00063e80 	call	63e8 <__multadd>
    3d0c:	1027883a 	mov	r19,r2
    3d10:	b823883a 	mov	r17,r23
    3d14:	900b883a 	mov	r5,r18
    3d18:	a809883a 	mov	r4,r21
    3d1c:	0002bf00 	call	2bf0 <quorem>
    3d20:	800b883a 	mov	r5,r16
    3d24:	a809883a 	mov	r4,r21
    3d28:	102d883a 	mov	r22,r2
    3d2c:	0006c200 	call	6c20 <__mcmp>
    3d30:	980d883a 	mov	r6,r19
    3d34:	900b883a 	mov	r5,r18
    3d38:	e009883a 	mov	r4,fp
    3d3c:	1029883a 	mov	r20,r2
    3d40:	0006c780 	call	6c78 <__mdiff>
    3d44:	102f883a 	mov	r23,r2
    3d48:	10800317 	ldw	r2,12(r2)
    3d4c:	b2000c04 	addi	r8,r22,48
    3d50:	103fc426 	beq	r2,zero,3c64 <_dtoa_r+0xe40>
    3d54:	b80b883a 	mov	r5,r23
    3d58:	e009883a 	mov	r4,fp
    3d5c:	da000115 	stw	r8,4(sp)
    3d60:	00063c40 	call	63c4 <_Bfree>
    3d64:	00800044 	movi	r2,1
    3d68:	da000117 	ldw	r8,4(sp)
    3d6c:	003fca06 	br	3c98 <_dtoa_r+0xe74>
    3d70:	00063e80 	call	63e8 <__multadd>
    3d74:	1021883a 	mov	r16,r2
    3d78:	1027883a 	mov	r19,r2
    3d7c:	003fe406 	br	3d10 <_dtoa_r+0xeec>
    3d80:	d8800217 	ldw	r2,8(sp)
    3d84:	108000d0 	cmplti	r2,r2,3
    3d88:	10004b1e 	bne	r2,zero,3eb8 <_dtoa_r+0x1094>
    3d8c:	d8800617 	ldw	r2,24(sp)
    3d90:	103e0d1e 	bne	r2,zero,35c8 <_dtoa_r+0x7a4>
    3d94:	900b883a 	mov	r5,r18
    3d98:	e009883a 	mov	r4,fp
    3d9c:	000f883a 	mov	r7,zero
    3da0:	01800144 	movi	r6,5
    3da4:	00063e80 	call	63e8 <__multadd>
    3da8:	100b883a 	mov	r5,r2
    3dac:	a809883a 	mov	r4,r21
    3db0:	1025883a 	mov	r18,r2
    3db4:	0006c200 	call	6c20 <__mcmp>
    3db8:	00be030e 	bge	zero,r2,35c8 <_dtoa_r+0x7a4>
    3dbc:	d8c00317 	ldw	r3,12(sp)
    3dc0:	00800c44 	movi	r2,49
    3dc4:	18800005 	stb	r2,0(r3)
    3dc8:	d8800417 	ldw	r2,16(sp)
    3dcc:	1dc00044 	addi	r23,r3,1
    3dd0:	14400044 	addi	r17,r2,1
    3dd4:	900b883a 	mov	r5,r18
    3dd8:	e009883a 	mov	r4,fp
    3ddc:	00063c40 	call	63c4 <_Bfree>
    3de0:	88800044 	addi	r2,r17,1
    3de4:	d8800415 	stw	r2,16(sp)
    3de8:	803f121e 	bne	r16,zero,3a34 <_dtoa_r+0xc10>
    3dec:	003d9f06 	br	346c <_dtoa_r+0x648>
    3df0:	900b883a 	mov	r5,r18
    3df4:	a809883a 	mov	r4,r21
    3df8:	0006c200 	call	6c20 <__mcmp>
    3dfc:	103ed10e 	bge	r2,zero,3944 <_dtoa_r+0xb20>
    3e00:	a80b883a 	mov	r5,r21
    3e04:	000f883a 	mov	r7,zero
    3e08:	01800284 	movi	r6,10
    3e0c:	e009883a 	mov	r4,fp
    3e10:	00063e80 	call	63e8 <__multadd>
    3e14:	102b883a 	mov	r21,r2
    3e18:	d8800417 	ldw	r2,16(sp)
    3e1c:	153fffc4 	addi	r20,r2,-1
    3e20:	d8800717 	ldw	r2,28(sp)
    3e24:	103f771e 	bne	r2,zero,3c04 <_dtoa_r+0xde0>
    3e28:	d8800b17 	ldw	r2,44(sp)
    3e2c:	0081910e 	bge	zero,r2,4474 <_dtoa_r+0x1650>
    3e30:	d8800615 	stw	r2,24(sp)
    3e34:	003eca06 	br	3960 <_dtoa_r+0xb3c>
    3e38:	d9800817 	ldw	r6,32(sp)
    3e3c:	a80b883a 	mov	r5,r21
    3e40:	e009883a 	mov	r4,fp
    3e44:	00069bc0 	call	69bc <__pow5mult>
    3e48:	102b883a 	mov	r21,r2
    3e4c:	003e9a06 	br	38b8 <_dtoa_r+0xa94>
    3e50:	00800074 	movhi	r2,1
    3e54:	1007883a 	mov	r3,r2
    3e58:	18fd9a04 	addi	r3,r3,-2456
    3e5c:	00800074 	movhi	r2,1
    3e60:	d8c00315 	stw	r3,12(sp)
    3e64:	10bd9ac4 	addi	r2,r2,-2453
    3e68:	003da506 	br	3500 <_dtoa_r+0x6dc>
    3e6c:	d8800117 	ldw	r2,4(sp)
    3e70:	103e991e 	bne	r2,zero,38d8 <_dtoa_r+0xab4>
    3e74:	00800434 	movhi	r2,16
    3e78:	10bfffc4 	addi	r2,r2,-1
    3e7c:	8884703a 	and	r2,r17,r2
    3e80:	103e951e 	bne	r2,zero,38d8 <_dtoa_r+0xab4>
    3e84:	8c5ffc2c 	andhi	r17,r17,32752
    3e88:	883e9326 	beq	r17,zero,38d8 <_dtoa_r+0xab4>
    3e8c:	d8800517 	ldw	r2,20(sp)
    3e90:	a5000044 	addi	r20,r20,1
    3e94:	04400044 	movi	r17,1
    3e98:	10800044 	addi	r2,r2,1
    3e9c:	d8800515 	stw	r2,20(sp)
    3ea0:	003e8e06 	br	38dc <_dtoa_r+0xab8>
    3ea4:	00800044 	movi	r2,1
    3ea8:	04800044 	movi	r18,1
    3eac:	d8800615 	stw	r2,24(sp)
    3eb0:	d8801e15 	stw	r2,120(sp)
    3eb4:	003ef406 	br	3a88 <_dtoa_r+0xc64>
    3eb8:	d8800417 	ldw	r2,16(sp)
    3ebc:	10800044 	addi	r2,r2,1
    3ec0:	d8800415 	stw	r2,16(sp)
    3ec4:	d8800717 	ldw	r2,28(sp)
    3ec8:	103f571e 	bne	r2,zero,3c28 <_dtoa_r+0xe04>
    3ecc:	900b883a 	mov	r5,r18
    3ed0:	a809883a 	mov	r4,r21
    3ed4:	0002bf00 	call	2bf0 <quorem>
    3ed8:	12000c04 	addi	r8,r2,48
    3edc:	d8800317 	ldw	r2,12(sp)
    3ee0:	0029883a 	mov	r20,zero
    3ee4:	15c00044 	addi	r23,r2,1
    3ee8:	12000005 	stb	r8,0(r2)
    3eec:	003eb006 	br	39b0 <_dtoa_r+0xb8c>
    3ef0:	a005883a 	mov	r2,r20
    3ef4:	003e5506 	br	384c <_dtoa_r+0xa28>
    3ef8:	800b883a 	mov	r5,r16
    3efc:	980d883a 	mov	r6,r19
    3f00:	e009883a 	mov	r4,fp
    3f04:	0006ae40 	call	6ae4 <__lshift>
    3f08:	1021883a 	mov	r16,r2
    3f0c:	003f4706 	br	3c2c <_dtoa_r+0xe08>
    3f10:	14a5c83a 	sub	r18,r2,r18
    3f14:	003e3e06 	br	3810 <_dtoa_r+0x9ec>
    3f18:	00800074 	movhi	r2,1
    3f1c:	10bdab04 	addi	r2,r2,-2388
    3f20:	11800817 	ldw	r6,32(r2)
    3f24:	11c00917 	ldw	r7,36(r2)
    3f28:	d9000117 	ldw	r4,4(sp)
    3f2c:	880b883a 	mov	r5,r17
    3f30:	da400e15 	stw	r9,56(sp)
    3f34:	da800d15 	stw	r10,52(sp)
    3f38:	000afa40 	call	afa4 <__divdf3>
    3f3c:	d8800c15 	stw	r2,48(sp)
    3f40:	1827883a 	mov	r19,r3
    3f44:	bdc003cc 	andi	r23,r23,15
    3f48:	040000c4 	movi	r16,3
    3f4c:	da800d17 	ldw	r10,52(sp)
    3f50:	da400e17 	ldw	r9,56(sp)
    3f54:	003c9206 	br	31a0 <_dtoa_r+0x37c>
    3f58:	d8000715 	stw	zero,28(sp)
    3f5c:	003ed306 	br	3aac <_dtoa_r+0xc88>
    3f60:	1000031e 	bne	r2,zero,3f70 <_dtoa_r+0x114c>
    3f64:	da000117 	ldw	r8,4(sp)
    3f68:	4200004c 	andi	r8,r8,1
    3f6c:	403e9b1e 	bne	r8,zero,39dc <_dtoa_r+0xbb8>
    3f70:	1805883a 	mov	r2,r3
    3f74:	00000206 	br	3f80 <_dtoa_r+0x115c>
    3f78:	b8bfff83 	ldbu	r2,-2(r23)
    3f7c:	182f883a 	mov	r23,r3
    3f80:	10803fcc 	andi	r2,r2,255
    3f84:	1080201c 	xori	r2,r2,128
    3f88:	10bfe004 	addi	r2,r2,-128
    3f8c:	10800c18 	cmpnei	r2,r2,48
    3f90:	b8ffffc4 	addi	r3,r23,-1
    3f94:	103ff826 	beq	r2,zero,3f78 <_dtoa_r+0x1154>
    3f98:	003e9d06 	br	3a10 <_dtoa_r+0xbec>
    3f9c:	d8c00a17 	ldw	r3,40(sp)
    3fa0:	1800bc26 	beq	r3,zero,4294 <_dtoa_r+0x1470>
    3fa4:	d8c00517 	ldw	r3,20(sp)
    3fa8:	10810cc4 	addi	r2,r2,1075
    3fac:	a0a9883a 	add	r20,r20,r2
    3fb0:	1885883a 	add	r2,r3,r2
    3fb4:	1827883a 	mov	r19,r3
    3fb8:	dc800817 	ldw	r18,32(sp)
    3fbc:	d8800515 	stw	r2,20(sp)
    3fc0:	003e1a06 	br	382c <_dtoa_r+0xa08>
    3fc4:	d8c00317 	ldw	r3,12(sp)
    3fc8:	00800c44 	movi	r2,49
    3fcc:	18800005 	stb	r2,0(r3)
    3fd0:	d8800417 	ldw	r2,16(sp)
    3fd4:	10800044 	addi	r2,r2,1
    3fd8:	d8800415 	stw	r2,16(sp)
    3fdc:	003e8c06 	br	3a10 <_dtoa_r+0xbec>
    3fe0:	8009883a 	mov	r4,r16
    3fe4:	000cd880 	call	cd88 <__floatsidf>
    3fe8:	900d883a 	mov	r6,r18
    3fec:	980f883a 	mov	r7,r19
    3ff0:	1009883a 	mov	r4,r2
    3ff4:	180b883a 	mov	r5,r3
    3ff8:	000bb680 	call	bb68 <__muldf3>
    3ffc:	000d883a 	mov	r6,zero
    4000:	01d00734 	movhi	r7,16412
    4004:	1009883a 	mov	r4,r2
    4008:	180b883a 	mov	r5,r3
    400c:	000a6040 	call	a604 <__adddf3>
    4010:	d8800c15 	stw	r2,48(sp)
    4014:	00bf3034 	movhi	r2,64704
    4018:	1885883a 	add	r2,r3,r2
    401c:	d8800d15 	stw	r2,52(sp)
    4020:	9009883a 	mov	r4,r18
    4024:	980b883a 	mov	r5,r19
    4028:	000d883a 	mov	r6,zero
    402c:	01d00534 	movhi	r7,16404
    4030:	000c3480 	call	c348 <__subdf3>
    4034:	ddc00c17 	ldw	r23,48(sp)
    4038:	dcc00d17 	ldw	r19,52(sp)
    403c:	1009883a 	mov	r4,r2
    4040:	b80d883a 	mov	r6,r23
    4044:	980f883a 	mov	r7,r19
    4048:	180b883a 	mov	r5,r3
    404c:	1025883a 	mov	r18,r2
    4050:	1821883a 	mov	r16,r3
    4054:	000b9880 	call	b988 <__gedf2>
    4058:	0080ee16 	blt	zero,r2,4414 <_dtoa_r+0x15f0>
    405c:	99e0003c 	xorhi	r7,r19,32768
    4060:	b80d883a 	mov	r6,r23
    4064:	9009883a 	mov	r4,r18
    4068:	800b883a 	mov	r5,r16
    406c:	000ba780 	call	ba78 <__ledf2>
    4070:	103d380e 	bge	r2,zero,3554 <_dtoa_r+0x730>
    4074:	0025883a 	mov	r18,zero
    4078:	0021883a 	mov	r16,zero
    407c:	003d5206 	br	35c8 <_dtoa_r+0x7a4>
    4080:	d8800417 	ldw	r2,16(sp)
    4084:	1000ad1e 	bne	r2,zero,433c <_dtoa_r+0x1518>
    4088:	dc800117 	ldw	r18,4(sp)
    408c:	8827883a 	mov	r19,r17
    4090:	04000084 	movi	r16,2
    4094:	003c5b06 	br	3204 <_dtoa_r+0x3e0>
    4098:	d8800117 	ldw	r2,4(sp)
    409c:	103ecf1e 	bne	r2,zero,3bdc <_dtoa_r+0xdb8>
    40a0:	00800434 	movhi	r2,16
    40a4:	10bfffc4 	addi	r2,r2,-1
    40a8:	8884703a 	and	r2,r17,r2
    40ac:	103f7526 	beq	r2,zero,3e84 <_dtoa_r+0x1060>
    40b0:	003eca06 	br	3bdc <_dtoa_r+0xdb8>
    40b4:	00800e0e 	bge	zero,r2,40f0 <_dtoa_r+0x12cc>
    40b8:	a80b883a 	mov	r5,r21
    40bc:	01800044 	movi	r6,1
    40c0:	e009883a 	mov	r4,fp
    40c4:	da000115 	stw	r8,4(sp)
    40c8:	0006ae40 	call	6ae4 <__lshift>
    40cc:	900b883a 	mov	r5,r18
    40d0:	1009883a 	mov	r4,r2
    40d4:	102b883a 	mov	r21,r2
    40d8:	0006c200 	call	6c20 <__mcmp>
    40dc:	da000117 	ldw	r8,4(sp)
    40e0:	0080d50e 	bge	zero,r2,4438 <_dtoa_r+0x1614>
    40e4:	42000e60 	cmpeqi	r8,r8,57
    40e8:	4000c31e 	bne	r8,zero,43f8 <_dtoa_r+0x15d4>
    40ec:	b2000c44 	addi	r8,r22,49
    40f0:	8029883a 	mov	r20,r16
    40f4:	8a000005 	stb	r8,0(r17)
    40f8:	9821883a 	mov	r16,r19
    40fc:	003e4406 	br	3a10 <_dtoa_r+0xbec>
    4100:	81400117 	ldw	r5,4(r16)
    4104:	e009883a 	mov	r4,fp
    4108:	00063200 	call	6320 <_Balloc>
    410c:	81800417 	ldw	r6,16(r16)
    4110:	81400304 	addi	r5,r16,12
    4114:	11000304 	addi	r4,r2,12
    4118:	31800084 	addi	r6,r6,2
    411c:	300c90ba 	slli	r6,r6,2
    4120:	1023883a 	mov	r17,r2
    4124:	00060040 	call	6004 <memcpy>
    4128:	01800044 	movi	r6,1
    412c:	880b883a 	mov	r5,r17
    4130:	e009883a 	mov	r4,fp
    4134:	0006ae40 	call	6ae4 <__lshift>
    4138:	1027883a 	mov	r19,r2
    413c:	003ebd06 	br	3c34 <_dtoa_r+0xe10>
    4140:	dd400117 	ldw	r21,4(sp)
    4144:	003cc906 	br	346c <_dtoa_r+0x648>
    4148:	d8800517 	ldw	r2,20(sp)
    414c:	d8c00617 	ldw	r3,24(sp)
    4150:	10e7c83a 	sub	r19,r2,r3
    4154:	003db506 	br	382c <_dtoa_r+0xa08>
    4158:	40800e58 	cmpnei	r2,r8,57
    415c:	1000a626 	beq	r2,zero,43f8 <_dtoa_r+0x15d4>
    4160:	42000044 	addi	r8,r8,1
    4164:	003fe206 	br	40f0 <_dtoa_r+0x12cc>
    4168:	8029883a 	mov	r20,r16
    416c:	9821883a 	mov	r16,r19
    4170:	003e0f06 	br	39b0 <_dtoa_r+0xb8c>
    4174:	d9000c17 	ldw	r4,48(sp)
    4178:	d9400d17 	ldw	r5,52(sp)
    417c:	da401015 	stw	r9,64(sp)
    4180:	000bb680 	call	bb68 <__muldf3>
    4184:	d9000e17 	ldw	r4,56(sp)
    4188:	d8c00d15 	stw	r3,52(sp)
    418c:	da401017 	ldw	r9,64(sp)
    4190:	d8c00317 	ldw	r3,12(sp)
    4194:	d8800c15 	stw	r2,48(sp)
    4198:	20800058 	cmpnei	r2,r4,1
    419c:	1a400005 	stb	r9,0(r3)
    41a0:	1907883a 	add	r3,r3,r4
    41a4:	1809883a 	mov	r4,r3
    41a8:	10001d26 	beq	r2,zero,4220 <_dtoa_r+0x13fc>
    41ac:	8007883a 	mov	r3,r16
    41b0:	9005883a 	mov	r2,r18
    41b4:	dc400e15 	stw	r17,56(sp)
    41b8:	2021883a 	mov	r16,r4
    41bc:	000d883a 	mov	r6,zero
    41c0:	01d00934 	movhi	r7,16420
    41c4:	1009883a 	mov	r4,r2
    41c8:	180b883a 	mov	r5,r3
    41cc:	000bb680 	call	bb68 <__muldf3>
    41d0:	180b883a 	mov	r5,r3
    41d4:	1009883a 	mov	r4,r2
    41d8:	1825883a 	mov	r18,r3
    41dc:	1023883a 	mov	r17,r2
    41e0:	000cd080 	call	cd08 <__fixdfsi>
    41e4:	1009883a 	mov	r4,r2
    41e8:	1027883a 	mov	r19,r2
    41ec:	000cd880 	call	cd88 <__floatsidf>
    41f0:	100d883a 	mov	r6,r2
    41f4:	180f883a 	mov	r7,r3
    41f8:	8809883a 	mov	r4,r17
    41fc:	900b883a 	mov	r5,r18
    4200:	bdc00044 	addi	r23,r23,1
    4204:	9cc00c04 	addi	r19,r19,48
    4208:	000c3480 	call	c348 <__subdf3>
    420c:	bcffffc5 	stb	r19,-1(r23)
    4210:	bc3fea1e 	bne	r23,r16,41bc <_dtoa_r+0x1398>
    4214:	dc400e17 	ldw	r17,56(sp)
    4218:	1025883a 	mov	r18,r2
    421c:	1821883a 	mov	r16,r3
    4220:	d9000c17 	ldw	r4,48(sp)
    4224:	d9400d17 	ldw	r5,52(sp)
    4228:	000d883a 	mov	r6,zero
    422c:	01cff834 	movhi	r7,16352
    4230:	000a6040 	call	a604 <__adddf3>
    4234:	100d883a 	mov	r6,r2
    4238:	180f883a 	mov	r7,r3
    423c:	9009883a 	mov	r4,r18
    4240:	800b883a 	mov	r5,r16
    4244:	000b9880 	call	b988 <__gedf2>
    4248:	00807516 	blt	zero,r2,4420 <_dtoa_r+0x15fc>
    424c:	d9800c17 	ldw	r6,48(sp)
    4250:	d9c00d17 	ldw	r7,52(sp)
    4254:	0009883a 	mov	r4,zero
    4258:	014ff834 	movhi	r5,16352
    425c:	000c3480 	call	c348 <__subdf3>
    4260:	100d883a 	mov	r6,r2
    4264:	180f883a 	mov	r7,r3
    4268:	9009883a 	mov	r4,r18
    426c:	800b883a 	mov	r5,r16
    4270:	000ba780 	call	ba78 <__ledf2>
    4274:	103cb70e 	bge	r2,zero,3554 <_dtoa_r+0x730>
    4278:	00000106 	br	4280 <_dtoa_r+0x145c>
    427c:	182f883a 	mov	r23,r3
    4280:	b8bfffc7 	ldb	r2,-1(r23)
    4284:	b8ffffc4 	addi	r3,r23,-1
    4288:	10800c20 	cmpeqi	r2,r2,48
    428c:	103ffb1e 	bne	r2,zero,427c <_dtoa_r+0x1458>
    4290:	003c7306 	br	3460 <_dtoa_r+0x63c>
    4294:	d8c01217 	ldw	r3,72(sp)
    4298:	d9000517 	ldw	r4,20(sp)
    429c:	00800d84 	movi	r2,54
    42a0:	10c5c83a 	sub	r2,r2,r3
    42a4:	a0a9883a 	add	r20,r20,r2
    42a8:	2085883a 	add	r2,r4,r2
    42ac:	2027883a 	mov	r19,r4
    42b0:	dc800817 	ldw	r18,32(sp)
    42b4:	d8800515 	stw	r2,20(sp)
    42b8:	003d5c06 	br	382c <_dtoa_r+0xa08>
    42bc:	d8800617 	ldw	r2,24(sp)
    42c0:	103f4726 	beq	r2,zero,3fe0 <_dtoa_r+0x11bc>
    42c4:	ddc00b17 	ldw	r23,44(sp)
    42c8:	05fca20e 	bge	zero,r23,3554 <_dtoa_r+0x730>
    42cc:	980b883a 	mov	r5,r19
    42d0:	000d883a 	mov	r6,zero
    42d4:	01d00934 	movhi	r7,16420
    42d8:	9009883a 	mov	r4,r18
    42dc:	000bb680 	call	bb68 <__muldf3>
    42e0:	81000044 	addi	r4,r16,1
    42e4:	1025883a 	mov	r18,r2
    42e8:	1827883a 	mov	r19,r3
    42ec:	000cd880 	call	cd88 <__floatsidf>
    42f0:	900d883a 	mov	r6,r18
    42f4:	980f883a 	mov	r7,r19
    42f8:	1009883a 	mov	r4,r2
    42fc:	180b883a 	mov	r5,r3
    4300:	000bb680 	call	bb68 <__muldf3>
    4304:	000d883a 	mov	r6,zero
    4308:	01d00734 	movhi	r7,16412
    430c:	1009883a 	mov	r4,r2
    4310:	180b883a 	mov	r5,r3
    4314:	000a6040 	call	a604 <__adddf3>
    4318:	d8800c15 	stw	r2,48(sp)
    431c:	d8800417 	ldw	r2,16(sp)
    4320:	ddc00e15 	stw	r23,56(sp)
    4324:	10bfffc4 	addi	r2,r2,-1
    4328:	d8800f15 	stw	r2,60(sp)
    432c:	00bf3034 	movhi	r2,64704
    4330:	1885883a 	add	r2,r3,r2
    4334:	d8800d15 	stw	r2,52(sp)
    4338:	003bd006 	br	327c <_dtoa_r+0x458>
    433c:	d8800417 	ldw	r2,16(sp)
    4340:	d9000117 	ldw	r4,4(sp)
    4344:	880b883a 	mov	r5,r17
    4348:	00afc83a 	sub	r23,zero,r2
    434c:	b88003cc 	andi	r2,r23,15
    4350:	100690fa 	slli	r3,r2,3
    4354:	00800074 	movhi	r2,1
    4358:	10bdb504 	addi	r2,r2,-2348
    435c:	10c5883a 	add	r2,r2,r3
    4360:	11800017 	ldw	r6,0(r2)
    4364:	11c00117 	ldw	r7,4(r2)
    4368:	b82fd13a 	srai	r23,r23,4
    436c:	000bb680 	call	bb68 <__muldf3>
    4370:	1025883a 	mov	r18,r2
    4374:	1827883a 	mov	r19,r3
    4378:	b8004a26 	beq	r23,zero,44a4 <_dtoa_r+0x1680>
    437c:	02000074 	movhi	r8,1
    4380:	04000084 	movi	r16,2
    4384:	423dab04 	addi	r8,r8,-2388
    4388:	dc400c15 	stw	r17,48(sp)
    438c:	000f883a 	mov	r7,zero
    4390:	8023883a 	mov	r17,r16
    4394:	4021883a 	mov	r16,r8
    4398:	b980004c 	andi	r6,r23,1
    439c:	1009883a 	mov	r4,r2
    43a0:	b82fd07a 	srai	r23,r23,1
    43a4:	180b883a 	mov	r5,r3
    43a8:	30000526 	beq	r6,zero,43c0 <_dtoa_r+0x159c>
    43ac:	81c00117 	ldw	r7,4(r16)
    43b0:	81800017 	ldw	r6,0(r16)
    43b4:	8c400044 	addi	r17,r17,1
    43b8:	000bb680 	call	bb68 <__muldf3>
    43bc:	01c00044 	movi	r7,1
    43c0:	84000204 	addi	r16,r16,8
    43c4:	b83ff41e 	bne	r23,zero,4398 <_dtoa_r+0x1574>
    43c8:	39c03fcc 	andi	r7,r7,255
    43cc:	8821883a 	mov	r16,r17
    43d0:	dc400c17 	ldw	r17,48(sp)
    43d4:	383b8b26 	beq	r7,zero,3204 <_dtoa_r+0x3e0>
    43d8:	1025883a 	mov	r18,r2
    43dc:	1827883a 	mov	r19,r3
    43e0:	003b8806 	br	3204 <_dtoa_r+0x3e0>
    43e4:	d8800417 	ldw	r2,16(sp)
    43e8:	02000c44 	movi	r8,49
    43ec:	10800044 	addi	r2,r2,1
    43f0:	d8800415 	stw	r2,16(sp)
    43f4:	003cf606 	br	37d0 <_dtoa_r+0x9ac>
    43f8:	00800e44 	movi	r2,57
    43fc:	8029883a 	mov	r20,r16
    4400:	88800005 	stb	r2,0(r17)
    4404:	9821883a 	mov	r16,r19
    4408:	00c00e44 	movi	r3,57
    440c:	d9400317 	ldw	r5,12(sp)
    4410:	003d7706 	br	39f0 <_dtoa_r+0xbcc>
    4414:	0025883a 	mov	r18,zero
    4418:	0021883a 	mov	r16,zero
    441c:	003e6706 	br	3dbc <_dtoa_r+0xf98>
    4420:	d8800f17 	ldw	r2,60(sp)
    4424:	ba3fffc3 	ldbu	r8,-1(r23)
    4428:	d9000317 	ldw	r4,12(sp)
    442c:	10800044 	addi	r2,r2,1
    4430:	d8800415 	stw	r2,16(sp)
    4434:	003cdf06 	br	37b4 <_dtoa_r+0x990>
    4438:	103f2d1e 	bne	r2,zero,40f0 <_dtoa_r+0x12cc>
    443c:	4080004c 	andi	r2,r8,1
    4440:	103f281e 	bne	r2,zero,40e4 <_dtoa_r+0x12c0>
    4444:	003f2a06 	br	40f0 <_dtoa_r+0x12cc>
    4448:	d8800f17 	ldw	r2,60(sp)
    444c:	8811883a 	mov	r8,r17
    4450:	d9000317 	ldw	r4,12(sp)
    4454:	10800044 	addi	r2,r2,1
    4458:	d8800415 	stw	r2,16(sp)
    445c:	003cd506 	br	37b4 <_dtoa_r+0x990>
    4460:	40800e60 	cmpeqi	r2,r8,57
    4464:	8dc00044 	addi	r23,r17,1
    4468:	103fe31e 	bne	r2,zero,43f8 <_dtoa_r+0x15d4>
    446c:	053f1f16 	blt	zero,r20,40ec <_dtoa_r+0x12c8>
    4470:	003f1f06 	br	40f0 <_dtoa_r+0x12cc>
    4474:	d8800217 	ldw	r2,8(sp)
    4478:	108000c8 	cmpgei	r2,r2,3
    447c:	103e9326 	beq	r2,zero,3ecc <_dtoa_r+0x10a8>
    4480:	d8800b17 	ldw	r2,44(sp)
    4484:	dd000415 	stw	r20,16(sp)
    4488:	d8800615 	stw	r2,24(sp)
    448c:	003e3f06 	br	3d8c <_dtoa_r+0xf68>
    4490:	d8800217 	ldw	r2,8(sp)
    4494:	108000c8 	cmpgei	r2,r2,3
    4498:	103ff91e 	bne	r2,zero,4480 <_dtoa_r+0x165c>
    449c:	d8800b17 	ldw	r2,44(sp)
    44a0:	003de006 	br	3c24 <_dtoa_r+0xe00>
    44a4:	04000084 	movi	r16,2
    44a8:	003b5606 	br	3204 <_dtoa_r+0x3e0>
    44ac:	d8800f17 	ldw	r2,60(sp)
    44b0:	d9000317 	ldw	r4,12(sp)
    44b4:	10800044 	addi	r2,r2,1
    44b8:	d8800415 	stw	r2,16(sp)
    44bc:	003cbd06 	br	37b4 <_dtoa_r+0x990>
    44c0:	00800074 	movhi	r2,1
    44c4:	10bd9b04 	addi	r2,r2,-2452
    44c8:	d8800315 	stw	r2,12(sp)
    44cc:	003a8706 	br	2eec <_dtoa_r+0xc8>
    44d0:	000b883a 	mov	r5,zero
    44d4:	003b1b06 	br	3144 <_dtoa_r+0x320>
    44d8:	18c00120 	cmpeqi	r3,r3,4
    44dc:	183d0f1e 	bne	r3,zero,391c <_dtoa_r+0xaf8>
    44e0:	00c00f04 	movi	r3,60
    44e4:	1885c83a 	sub	r2,r3,r2
    44e8:	003d0706 	br	3908 <_dtoa_r+0xae4>

000044ec <__sflush_r>:
    44ec:	2880030b 	ldhu	r2,12(r5)
    44f0:	defffb04 	addi	sp,sp,-20
    44f4:	dcc00315 	stw	r19,12(sp)
    44f8:	dc000015 	stw	r16,0(sp)
    44fc:	dfc00415 	stw	ra,16(sp)
    4500:	dc800215 	stw	r18,8(sp)
    4504:	dc400115 	stw	r17,4(sp)
    4508:	10c0020c 	andi	r3,r2,8
    450c:	2821883a 	mov	r16,r5
    4510:	2027883a 	mov	r19,r4
    4514:	18003f1e 	bne	r3,zero,4614 <__sflush_r+0x128>
    4518:	28c00117 	ldw	r3,4(r5)
    451c:	10820014 	ori	r2,r2,2048
    4520:	2880030d 	sth	r2,12(r5)
    4524:	00c0550e 	bge	zero,r3,467c <__sflush_r+0x190>
    4528:	82000a17 	ldw	r8,40(r16)
    452c:	40003126 	beq	r8,zero,45f4 <__sflush_r+0x108>
    4530:	9c400017 	ldw	r17,0(r19)
    4534:	1104000c 	andi	r4,r2,4096
    4538:	98000015 	stw	zero,0(r19)
    453c:	1007883a 	mov	r3,r2
    4540:	81400717 	ldw	r5,28(r16)
    4544:	2000521e 	bne	r4,zero,4690 <__sflush_r+0x1a4>
    4548:	01c00044 	movi	r7,1
    454c:	000d883a 	mov	r6,zero
    4550:	9809883a 	mov	r4,r19
    4554:	403ee83a 	callr	r8
    4558:	10ffffd8 	cmpnei	r3,r2,-1
    455c:	18005826 	beq	r3,zero,46c0 <__sflush_r+0x1d4>
    4560:	80c0030b 	ldhu	r3,12(r16)
    4564:	82000a17 	ldw	r8,40(r16)
    4568:	81400717 	ldw	r5,28(r16)
    456c:	18c0010c 	andi	r3,r3,4
    4570:	18000626 	beq	r3,zero,458c <__sflush_r+0xa0>
    4574:	81000117 	ldw	r4,4(r16)
    4578:	80c00c17 	ldw	r3,48(r16)
    457c:	1105c83a 	sub	r2,r2,r4
    4580:	18000226 	beq	r3,zero,458c <__sflush_r+0xa0>
    4584:	80c00f17 	ldw	r3,60(r16)
    4588:	10c5c83a 	sub	r2,r2,r3
    458c:	000f883a 	mov	r7,zero
    4590:	100d883a 	mov	r6,r2
    4594:	9809883a 	mov	r4,r19
    4598:	403ee83a 	callr	r8
    459c:	10ffffd8 	cmpnei	r3,r2,-1
    45a0:	18003d1e 	bne	r3,zero,4698 <__sflush_r+0x1ac>
    45a4:	99000017 	ldw	r4,0(r19)
    45a8:	80c0030b 	ldhu	r3,12(r16)
    45ac:	20004e26 	beq	r4,zero,46e8 <__sflush_r+0x1fc>
    45b0:	21400760 	cmpeqi	r5,r4,29
    45b4:	2800021e 	bne	r5,zero,45c0 <__sflush_r+0xd4>
    45b8:	210005a0 	cmpeqi	r4,r4,22
    45bc:	20002c26 	beq	r4,zero,4670 <__sflush_r+0x184>
    45c0:	80800417 	ldw	r2,16(r16)
    45c4:	18fdffcc 	andi	r3,r3,63487
    45c8:	80c0030d 	sth	r3,12(r16)
    45cc:	80000115 	stw	zero,4(r16)
    45d0:	80800015 	stw	r2,0(r16)
    45d4:	81400c17 	ldw	r5,48(r16)
    45d8:	9c400015 	stw	r17,0(r19)
    45dc:	28000526 	beq	r5,zero,45f4 <__sflush_r+0x108>
    45e0:	80801004 	addi	r2,r16,64
    45e4:	28800226 	beq	r5,r2,45f0 <__sflush_r+0x104>
    45e8:	9809883a 	mov	r4,r19
    45ec:	0004c0c0 	call	4c0c <_free_r>
    45f0:	80000c15 	stw	zero,48(r16)
    45f4:	0005883a 	mov	r2,zero
    45f8:	dfc00417 	ldw	ra,16(sp)
    45fc:	dcc00317 	ldw	r19,12(sp)
    4600:	dc800217 	ldw	r18,8(sp)
    4604:	dc400117 	ldw	r17,4(sp)
    4608:	dc000017 	ldw	r16,0(sp)
    460c:	dec00504 	addi	sp,sp,20
    4610:	f800283a 	ret
    4614:	2c800417 	ldw	r18,16(r5)
    4618:	903ff626 	beq	r18,zero,45f4 <__sflush_r+0x108>
    461c:	2c400017 	ldw	r17,0(r5)
    4620:	108000cc 	andi	r2,r2,3
    4624:	2c800015 	stw	r18,0(r5)
    4628:	8ca3c83a 	sub	r17,r17,r18
    462c:	1000161e 	bne	r2,zero,4688 <__sflush_r+0x19c>
    4630:	28800517 	ldw	r2,20(r5)
    4634:	80800215 	stw	r2,8(r16)
    4638:	04400316 	blt	zero,r17,4648 <__sflush_r+0x15c>
    463c:	003fed06 	br	45f4 <__sflush_r+0x108>
    4640:	90a5883a 	add	r18,r18,r2
    4644:	047feb0e 	bge	zero,r17,45f4 <__sflush_r+0x108>
    4648:	80800917 	ldw	r2,36(r16)
    464c:	81400717 	ldw	r5,28(r16)
    4650:	880f883a 	mov	r7,r17
    4654:	900d883a 	mov	r6,r18
    4658:	9809883a 	mov	r4,r19
    465c:	103ee83a 	callr	r2
    4660:	88a3c83a 	sub	r17,r17,r2
    4664:	00bff616 	blt	zero,r2,4640 <__sflush_r+0x154>
    4668:	80c0030b 	ldhu	r3,12(r16)
    466c:	00bfffc4 	movi	r2,-1
    4670:	18c01014 	ori	r3,r3,64
    4674:	80c0030d 	sth	r3,12(r16)
    4678:	003fdf06 	br	45f8 <__sflush_r+0x10c>
    467c:	28c00f17 	ldw	r3,60(r5)
    4680:	00ffa916 	blt	zero,r3,4528 <__sflush_r+0x3c>
    4684:	003fdb06 	br	45f4 <__sflush_r+0x108>
    4688:	0005883a 	mov	r2,zero
    468c:	003fe906 	br	4634 <__sflush_r+0x148>
    4690:	80801417 	ldw	r2,80(r16)
    4694:	003fb506 	br	456c <__sflush_r+0x80>
    4698:	80c0030b 	ldhu	r3,12(r16)
    469c:	81000417 	ldw	r4,16(r16)
    46a0:	80000115 	stw	zero,4(r16)
    46a4:	197dffcc 	andi	r5,r3,63487
    46a8:	8140030d 	sth	r5,12(r16)
    46ac:	81000015 	stw	r4,0(r16)
    46b0:	18c4000c 	andi	r3,r3,4096
    46b4:	183fc726 	beq	r3,zero,45d4 <__sflush_r+0xe8>
    46b8:	80801415 	stw	r2,80(r16)
    46bc:	003fc506 	br	45d4 <__sflush_r+0xe8>
    46c0:	98c00017 	ldw	r3,0(r19)
    46c4:	183fa626 	beq	r3,zero,4560 <__sflush_r+0x74>
    46c8:	19000760 	cmpeqi	r4,r3,29
    46cc:	20000e1e 	bne	r4,zero,4708 <__sflush_r+0x21c>
    46d0:	18c00598 	cmpnei	r3,r3,22
    46d4:	18000c26 	beq	r3,zero,4708 <__sflush_r+0x21c>
    46d8:	80c0030b 	ldhu	r3,12(r16)
    46dc:	18c01014 	ori	r3,r3,64
    46e0:	80c0030d 	sth	r3,12(r16)
    46e4:	003fc406 	br	45f8 <__sflush_r+0x10c>
    46e8:	81000417 	ldw	r4,16(r16)
    46ec:	197dffcc 	andi	r5,r3,63487
    46f0:	8140030d 	sth	r5,12(r16)
    46f4:	80000115 	stw	zero,4(r16)
    46f8:	81000015 	stw	r4,0(r16)
    46fc:	18c4000c 	andi	r3,r3,4096
    4700:	183fb426 	beq	r3,zero,45d4 <__sflush_r+0xe8>
    4704:	003fec06 	br	46b8 <__sflush_r+0x1cc>
    4708:	9c400015 	stw	r17,0(r19)
    470c:	0005883a 	mov	r2,zero
    4710:	003fb906 	br	45f8 <__sflush_r+0x10c>

00004714 <_fflush_r>:
    4714:	defffd04 	addi	sp,sp,-12
    4718:	dc000115 	stw	r16,4(sp)
    471c:	dfc00215 	stw	ra,8(sp)
    4720:	2021883a 	mov	r16,r4
    4724:	20000226 	beq	r4,zero,4730 <_fflush_r+0x1c>
    4728:	20800e17 	ldw	r2,56(r4)
    472c:	10000726 	beq	r2,zero,474c <_fflush_r+0x38>
    4730:	2880030f 	ldh	r2,12(r5)
    4734:	10000a1e 	bne	r2,zero,4760 <_fflush_r+0x4c>
    4738:	0005883a 	mov	r2,zero
    473c:	dfc00217 	ldw	ra,8(sp)
    4740:	dc000117 	ldw	r16,4(sp)
    4744:	dec00304 	addi	sp,sp,12
    4748:	f800283a 	ret
    474c:	d9400015 	stw	r5,0(sp)
    4750:	0004aa80 	call	4aa8 <__sinit>
    4754:	d9400017 	ldw	r5,0(sp)
    4758:	2880030f 	ldh	r2,12(r5)
    475c:	103ff626 	beq	r2,zero,4738 <_fflush_r+0x24>
    4760:	8009883a 	mov	r4,r16
    4764:	dfc00217 	ldw	ra,8(sp)
    4768:	dc000117 	ldw	r16,4(sp)
    476c:	dec00304 	addi	sp,sp,12
    4770:	00044ec1 	jmpi	44ec <__sflush_r>

00004774 <fflush>:
    4774:	200b883a 	mov	r5,r4
    4778:	20000326 	beq	r4,zero,4788 <fflush+0x14>
    477c:	00800074 	movhi	r2,1
    4780:	1105f217 	ldw	r4,6088(r2)
    4784:	00047141 	jmpi	4714 <_fflush_r>
    4788:	00800074 	movhi	r2,1
    478c:	1105f117 	ldw	r4,6084(r2)
    4790:	01400034 	movhi	r5,0
    4794:	2951c504 	addi	r5,r5,18196
    4798:	00054801 	jmpi	5480 <_fwalk_reent>

0000479c <__fp_lock>:
    479c:	0005883a 	mov	r2,zero
    47a0:	f800283a 	ret

000047a4 <_cleanup_r>:
    47a4:	01400074 	movhi	r5,1
    47a8:	29645004 	addi	r5,r5,-28352
    47ac:	00054801 	jmpi	5480 <_fwalk_reent>

000047b0 <__sinit.part.0>:
    47b0:	00c00034 	movhi	r3,0
    47b4:	20800117 	ldw	r2,4(r4)
    47b8:	18d1e904 	addi	r3,r3,18340
    47bc:	20c00f15 	stw	r3,60(r4)
    47c0:	2140bb04 	addi	r5,r4,748
    47c4:	00c000c4 	movi	r3,3
    47c8:	20c0b915 	stw	r3,740(r4)
    47cc:	2140ba15 	stw	r5,744(r4)
    47d0:	2000b815 	stw	zero,736(r4)
    47d4:	10001705 	stb	zero,92(r2)
    47d8:	10001745 	stb	zero,93(r2)
    47dc:	10001785 	stb	zero,94(r2)
    47e0:	100017c5 	stb	zero,95(r2)
    47e4:	10001805 	stb	zero,96(r2)
    47e8:	10001845 	stb	zero,97(r2)
    47ec:	10001885 	stb	zero,98(r2)
    47f0:	100018c5 	stb	zero,99(r2)
    47f4:	00c00104 	movi	r3,4
    47f8:	10c00315 	stw	r3,12(r2)
    47fc:	02000034 	movhi	r8,0
    4800:	20c00217 	ldw	r3,8(r4)
    4804:	01c00034 	movhi	r7,0
    4808:	01800034 	movhi	r6,0
    480c:	01400034 	movhi	r5,0
    4810:	421e5604 	addi	r8,r8,31064
    4814:	39de6d04 	addi	r7,r7,31156
    4818:	319e8d04 	addi	r6,r6,31284
    481c:	295ea404 	addi	r5,r5,31376
    4820:	02400074 	movhi	r9,1
    4824:	10001915 	stw	zero,100(r2)
    4828:	10000015 	stw	zero,0(r2)
    482c:	10000115 	stw	zero,4(r2)
    4830:	10000215 	stw	zero,8(r2)
    4834:	10000415 	stw	zero,16(r2)
    4838:	10000515 	stw	zero,20(r2)
    483c:	10000615 	stw	zero,24(r2)
    4840:	10800715 	stw	r2,28(r2)
    4844:	12000815 	stw	r8,32(r2)
    4848:	11c00915 	stw	r7,36(r2)
    484c:	11800a15 	stw	r6,40(r2)
    4850:	11400b15 	stw	r5,44(r2)
    4854:	4a400284 	addi	r9,r9,10
    4858:	1a400315 	stw	r9,12(r3)
    485c:	18001915 	stw	zero,100(r3)
    4860:	18000015 	stw	zero,0(r3)
    4864:	18000115 	stw	zero,4(r3)
    4868:	18000215 	stw	zero,8(r3)
    486c:	18000415 	stw	zero,16(r3)
    4870:	18001705 	stb	zero,92(r3)
    4874:	18001745 	stb	zero,93(r3)
    4878:	18001785 	stb	zero,94(r3)
    487c:	180017c5 	stb	zero,95(r3)
    4880:	18001805 	stb	zero,96(r3)
    4884:	18001845 	stb	zero,97(r3)
    4888:	18001885 	stb	zero,98(r3)
    488c:	180018c5 	stb	zero,99(r3)
    4890:	20800317 	ldw	r2,12(r4)
    4894:	024000b4 	movhi	r9,2
    4898:	18000515 	stw	zero,20(r3)
    489c:	18000615 	stw	zero,24(r3)
    48a0:	18c00715 	stw	r3,28(r3)
    48a4:	1a000815 	stw	r8,32(r3)
    48a8:	19c00915 	stw	r7,36(r3)
    48ac:	19800a15 	stw	r6,40(r3)
    48b0:	19400b15 	stw	r5,44(r3)
    48b4:	4a400484 	addi	r9,r9,18
    48b8:	10001915 	stw	zero,100(r2)
    48bc:	10000015 	stw	zero,0(r2)
    48c0:	10000115 	stw	zero,4(r2)
    48c4:	10000215 	stw	zero,8(r2)
    48c8:	12400315 	stw	r9,12(r2)
    48cc:	10000415 	stw	zero,16(r2)
    48d0:	10000515 	stw	zero,20(r2)
    48d4:	10000615 	stw	zero,24(r2)
    48d8:	10001705 	stb	zero,92(r2)
    48dc:	10001745 	stb	zero,93(r2)
    48e0:	10001785 	stb	zero,94(r2)
    48e4:	100017c5 	stb	zero,95(r2)
    48e8:	10001805 	stb	zero,96(r2)
    48ec:	10001845 	stb	zero,97(r2)
    48f0:	10001885 	stb	zero,98(r2)
    48f4:	100018c5 	stb	zero,99(r2)
    48f8:	10800715 	stw	r2,28(r2)
    48fc:	12000815 	stw	r8,32(r2)
    4900:	11c00915 	stw	r7,36(r2)
    4904:	11800a15 	stw	r6,40(r2)
    4908:	11400b15 	stw	r5,44(r2)
    490c:	00800044 	movi	r2,1
    4910:	20800e15 	stw	r2,56(r4)
    4914:	f800283a 	ret

00004918 <__fp_unlock>:
    4918:	0005883a 	mov	r2,zero
    491c:	f800283a 	ret

00004920 <__sfmoreglue>:
    4920:	defffc04 	addi	sp,sp,-16
    4924:	dc800215 	stw	r18,8(sp)
    4928:	2825883a 	mov	r18,r5
    492c:	dc000015 	stw	r16,0(sp)
    4930:	01401a04 	movi	r5,104
    4934:	2021883a 	mov	r16,r4
    4938:	913fffc4 	addi	r4,r18,-1
    493c:	dfc00315 	stw	ra,12(sp)
    4940:	dc400115 	stw	r17,4(sp)
    4944:	000a5dc0 	call	a5dc <__mulsi3>
    4948:	8009883a 	mov	r4,r16
    494c:	11401d04 	addi	r5,r2,116
    4950:	1023883a 	mov	r17,r2
    4954:	00057280 	call	5728 <_malloc_r>
    4958:	1021883a 	mov	r16,r2
    495c:	10000726 	beq	r2,zero,497c <__sfmoreglue+0x5c>
    4960:	11000304 	addi	r4,r2,12
    4964:	10000015 	stw	zero,0(r2)
    4968:	14800115 	stw	r18,4(r2)
    496c:	11000215 	stw	r4,8(r2)
    4970:	89801a04 	addi	r6,r17,104
    4974:	000b883a 	mov	r5,zero
    4978:	00062300 	call	6230 <memset>
    497c:	8005883a 	mov	r2,r16
    4980:	dfc00317 	ldw	ra,12(sp)
    4984:	dc800217 	ldw	r18,8(sp)
    4988:	dc400117 	ldw	r17,4(sp)
    498c:	dc000017 	ldw	r16,0(sp)
    4990:	dec00404 	addi	sp,sp,16
    4994:	f800283a 	ret

00004998 <__sfp>:
    4998:	defffd04 	addi	sp,sp,-12
    499c:	00800074 	movhi	r2,1
    49a0:	dc000015 	stw	r16,0(sp)
    49a4:	1405f117 	ldw	r16,6084(r2)
    49a8:	dc400115 	stw	r17,4(sp)
    49ac:	dfc00215 	stw	ra,8(sp)
    49b0:	80800e17 	ldw	r2,56(r16)
    49b4:	2023883a 	mov	r17,r4
    49b8:	10002b26 	beq	r2,zero,4a68 <__sfp+0xd0>
    49bc:	8400b804 	addi	r16,r16,736
    49c0:	80c00117 	ldw	r3,4(r16)
    49c4:	80800217 	ldw	r2,8(r16)
    49c8:	18ffffc4 	addi	r3,r3,-1
    49cc:	1800050e 	bge	r3,zero,49e4 <__sfp+0x4c>
    49d0:	00002106 	br	4a58 <__sfp+0xc0>
    49d4:	18ffffc4 	addi	r3,r3,-1
    49d8:	193fffd8 	cmpnei	r4,r3,-1
    49dc:	10801a04 	addi	r2,r2,104
    49e0:	20001d26 	beq	r4,zero,4a58 <__sfp+0xc0>
    49e4:	1100030f 	ldh	r4,12(r2)
    49e8:	203ffa1e 	bne	r4,zero,49d4 <__sfp+0x3c>
    49ec:	00fffff4 	movhi	r3,65535
    49f0:	18c00044 	addi	r3,r3,1
    49f4:	10001915 	stw	zero,100(r2)
    49f8:	10000015 	stw	zero,0(r2)
    49fc:	10000115 	stw	zero,4(r2)
    4a00:	10000215 	stw	zero,8(r2)
    4a04:	10c00315 	stw	r3,12(r2)
    4a08:	10000415 	stw	zero,16(r2)
    4a0c:	10000515 	stw	zero,20(r2)
    4a10:	10000615 	stw	zero,24(r2)
    4a14:	10001705 	stb	zero,92(r2)
    4a18:	10001745 	stb	zero,93(r2)
    4a1c:	10001785 	stb	zero,94(r2)
    4a20:	100017c5 	stb	zero,95(r2)
    4a24:	10001805 	stb	zero,96(r2)
    4a28:	10001845 	stb	zero,97(r2)
    4a2c:	10001885 	stb	zero,98(r2)
    4a30:	100018c5 	stb	zero,99(r2)
    4a34:	10000c15 	stw	zero,48(r2)
    4a38:	10000d15 	stw	zero,52(r2)
    4a3c:	10001115 	stw	zero,68(r2)
    4a40:	10001215 	stw	zero,72(r2)
    4a44:	dfc00217 	ldw	ra,8(sp)
    4a48:	dc400117 	ldw	r17,4(sp)
    4a4c:	dc000017 	ldw	r16,0(sp)
    4a50:	dec00304 	addi	sp,sp,12
    4a54:	f800283a 	ret
    4a58:	80800017 	ldw	r2,0(r16)
    4a5c:	10000526 	beq	r2,zero,4a74 <__sfp+0xdc>
    4a60:	1021883a 	mov	r16,r2
    4a64:	003fd606 	br	49c0 <__sfp+0x28>
    4a68:	8009883a 	mov	r4,r16
    4a6c:	00047b00 	call	47b0 <__sinit.part.0>
    4a70:	003fd206 	br	49bc <__sfp+0x24>
    4a74:	01400104 	movi	r5,4
    4a78:	8809883a 	mov	r4,r17
    4a7c:	00049200 	call	4920 <__sfmoreglue>
    4a80:	80800015 	stw	r2,0(r16)
    4a84:	103ff61e 	bne	r2,zero,4a60 <__sfp+0xc8>
    4a88:	00c00304 	movi	r3,12
    4a8c:	88c00015 	stw	r3,0(r17)
    4a90:	003fec06 	br	4a44 <__sfp+0xac>

00004a94 <_cleanup>:
    4a94:	00800074 	movhi	r2,1
    4a98:	1105f117 	ldw	r4,6084(r2)
    4a9c:	01400074 	movhi	r5,1
    4aa0:	29645004 	addi	r5,r5,-28352
    4aa4:	00054801 	jmpi	5480 <_fwalk_reent>

00004aa8 <__sinit>:
    4aa8:	20800e17 	ldw	r2,56(r4)
    4aac:	10000126 	beq	r2,zero,4ab4 <__sinit+0xc>
    4ab0:	f800283a 	ret
    4ab4:	00047b01 	jmpi	47b0 <__sinit.part.0>

00004ab8 <__sfp_lock_acquire>:
    4ab8:	f800283a 	ret

00004abc <__sfp_lock_release>:
    4abc:	f800283a 	ret

00004ac0 <__sinit_lock_acquire>:
    4ac0:	f800283a 	ret

00004ac4 <__sinit_lock_release>:
    4ac4:	f800283a 	ret

00004ac8 <__fp_lock_all>:
    4ac8:	00800074 	movhi	r2,1
    4acc:	1105f217 	ldw	r4,6088(r2)
    4ad0:	01400034 	movhi	r5,0
    4ad4:	2951e704 	addi	r5,r5,18332
    4ad8:	00053dc1 	jmpi	53dc <_fwalk>

00004adc <__fp_unlock_all>:
    4adc:	00800074 	movhi	r2,1
    4ae0:	1105f217 	ldw	r4,6088(r2)
    4ae4:	01400034 	movhi	r5,0
    4ae8:	29524604 	addi	r5,r5,18712
    4aec:	00053dc1 	jmpi	53dc <_fwalk>

00004af0 <_malloc_trim_r>:
    4af0:	defffb04 	addi	sp,sp,-20
    4af4:	dcc00315 	stw	r19,12(sp)
    4af8:	04c00074 	movhi	r19,1
    4afc:	dc800215 	stw	r18,8(sp)
    4b00:	dc400115 	stw	r17,4(sp)
    4b04:	dc000015 	stw	r16,0(sp)
    4b08:	dfc00415 	stw	ra,16(sp)
    4b0c:	2821883a 	mov	r16,r5
    4b10:	9cc00d04 	addi	r19,r19,52
    4b14:	2025883a 	mov	r18,r4
    4b18:	000d4ec0 	call	d4ec <__malloc_lock>
    4b1c:	98800217 	ldw	r2,8(r19)
    4b20:	14400117 	ldw	r17,4(r2)
    4b24:	00bfff04 	movi	r2,-4
    4b28:	88a2703a 	and	r17,r17,r2
    4b2c:	8c21c83a 	sub	r16,r17,r16
    4b30:	8403fbc4 	addi	r16,r16,4079
    4b34:	8020d33a 	srli	r16,r16,12
    4b38:	843fffc4 	addi	r16,r16,-1
    4b3c:	8020933a 	slli	r16,r16,12
    4b40:	80840008 	cmpgei	r2,r16,4096
    4b44:	10000626 	beq	r2,zero,4b60 <_malloc_trim_r+0x70>
    4b48:	000b883a 	mov	r5,zero
    4b4c:	9009883a 	mov	r4,r18
    4b50:	00079000 	call	7900 <_sbrk_r>
    4b54:	98c00217 	ldw	r3,8(r19)
    4b58:	1c47883a 	add	r3,r3,r17
    4b5c:	10c00a26 	beq	r2,r3,4b88 <_malloc_trim_r+0x98>
    4b60:	9009883a 	mov	r4,r18
    4b64:	000d5100 	call	d510 <__malloc_unlock>
    4b68:	0005883a 	mov	r2,zero
    4b6c:	dfc00417 	ldw	ra,16(sp)
    4b70:	dcc00317 	ldw	r19,12(sp)
    4b74:	dc800217 	ldw	r18,8(sp)
    4b78:	dc400117 	ldw	r17,4(sp)
    4b7c:	dc000017 	ldw	r16,0(sp)
    4b80:	dec00504 	addi	sp,sp,20
    4b84:	f800283a 	ret
    4b88:	040bc83a 	sub	r5,zero,r16
    4b8c:	9009883a 	mov	r4,r18
    4b90:	00079000 	call	7900 <_sbrk_r>
    4b94:	10bfffd8 	cmpnei	r2,r2,-1
    4b98:	10000d26 	beq	r2,zero,4bd0 <_malloc_trim_r+0xe0>
    4b9c:	00800074 	movhi	r2,1
    4ba0:	108d2b17 	ldw	r2,13484(r2)
    4ba4:	98c00217 	ldw	r3,8(r19)
    4ba8:	8c23c83a 	sub	r17,r17,r16
    4bac:	8c400054 	ori	r17,r17,1
    4bb0:	1421c83a 	sub	r16,r2,r16
    4bb4:	1c400115 	stw	r17,4(r3)
    4bb8:	00800074 	movhi	r2,1
    4bbc:	9009883a 	mov	r4,r18
    4bc0:	140d2b15 	stw	r16,13484(r2)
    4bc4:	000d5100 	call	d510 <__malloc_unlock>
    4bc8:	00800044 	movi	r2,1
    4bcc:	003fe706 	br	4b6c <_malloc_trim_r+0x7c>
    4bd0:	000b883a 	mov	r5,zero
    4bd4:	9009883a 	mov	r4,r18
    4bd8:	00079000 	call	7900 <_sbrk_r>
    4bdc:	99000217 	ldw	r4,8(r19)
    4be0:	1107c83a 	sub	r3,r2,r4
    4be4:	19400410 	cmplti	r5,r3,16
    4be8:	283fdd1e 	bne	r5,zero,4b60 <_malloc_trim_r+0x70>
    4bec:	01400074 	movhi	r5,1
    4bf0:	2945f317 	ldw	r5,6092(r5)
    4bf4:	18c00054 	ori	r3,r3,1
    4bf8:	20c00115 	stw	r3,4(r4)
    4bfc:	1145c83a 	sub	r2,r2,r5
    4c00:	01400074 	movhi	r5,1
    4c04:	288d2b15 	stw	r2,13484(r5)
    4c08:	003fd506 	br	4b60 <_malloc_trim_r+0x70>

00004c0c <_free_r>:
    4c0c:	28004f26 	beq	r5,zero,4d4c <_free_r+0x140>
    4c10:	defffd04 	addi	sp,sp,-12
    4c14:	dc400115 	stw	r17,4(sp)
    4c18:	dc000015 	stw	r16,0(sp)
    4c1c:	2023883a 	mov	r17,r4
    4c20:	2821883a 	mov	r16,r5
    4c24:	dfc00215 	stw	ra,8(sp)
    4c28:	000d4ec0 	call	d4ec <__malloc_lock>
    4c2c:	81ffff17 	ldw	r7,-4(r16)
    4c30:	00bfff84 	movi	r2,-2
    4c34:	80fffe04 	addi	r3,r16,-8
    4c38:	3884703a 	and	r2,r7,r2
    4c3c:	01800074 	movhi	r6,1
    4c40:	1889883a 	add	r4,r3,r2
    4c44:	31800d04 	addi	r6,r6,52
    4c48:	21400117 	ldw	r5,4(r4)
    4c4c:	32000217 	ldw	r8,8(r6)
    4c50:	027fff04 	movi	r9,-4
    4c54:	2a4a703a 	and	r5,r5,r9
    4c58:	41006426 	beq	r8,r4,4dec <_free_r+0x1e0>
    4c5c:	21400115 	stw	r5,4(r4)
    4c60:	39c0004c 	andi	r7,r7,1
    4c64:	2151883a 	add	r8,r4,r5
    4c68:	3800281e 	bne	r7,zero,4d0c <_free_r+0x100>
    4c6c:	82bffe17 	ldw	r10,-8(r16)
    4c70:	42000117 	ldw	r8,4(r8)
    4c74:	01c00074 	movhi	r7,1
    4c78:	1a87c83a 	sub	r3,r3,r10
    4c7c:	1a400217 	ldw	r9,8(r3)
    4c80:	39c00f04 	addi	r7,r7,60
    4c84:	1285883a 	add	r2,r2,r10
    4c88:	4200004c 	andi	r8,r8,1
    4c8c:	49c04c26 	beq	r9,r7,4dc0 <_free_r+0x1b4>
    4c90:	1a800317 	ldw	r10,12(r3)
    4c94:	4a800315 	stw	r10,12(r9)
    4c98:	52400215 	stw	r9,8(r10)
    4c9c:	40007126 	beq	r8,zero,4e64 <_free_r+0x258>
    4ca0:	11400054 	ori	r5,r2,1
    4ca4:	19400115 	stw	r5,4(r3)
    4ca8:	20800015 	stw	r2,0(r4)
    4cac:	11008028 	cmpgeui	r4,r2,512
    4cb0:	20002c1e 	bne	r4,zero,4d64 <_free_r+0x158>
    4cb4:	1008d0fa 	srli	r4,r2,3
    4cb8:	31c00117 	ldw	r7,4(r6)
    4cbc:	20800044 	addi	r2,r4,1
    4cc0:	200bd0ba 	srai	r5,r4,2
    4cc4:	100490fa 	slli	r2,r2,3
    4cc8:	01000044 	movi	r4,1
    4ccc:	2148983a 	sll	r4,r4,r5
    4cd0:	3085883a 	add	r2,r6,r2
    4cd4:	11400017 	ldw	r5,0(r2)
    4cd8:	21c8b03a 	or	r4,r4,r7
    4cdc:	11fffe04 	addi	r7,r2,-8
    4ce0:	19c00315 	stw	r7,12(r3)
    4ce4:	19400215 	stw	r5,8(r3)
    4ce8:	31000115 	stw	r4,4(r6)
    4cec:	10c00015 	stw	r3,0(r2)
    4cf0:	28c00315 	stw	r3,12(r5)
    4cf4:	8809883a 	mov	r4,r17
    4cf8:	dfc00217 	ldw	ra,8(sp)
    4cfc:	dc400117 	ldw	r17,4(sp)
    4d00:	dc000017 	ldw	r16,0(sp)
    4d04:	dec00304 	addi	sp,sp,12
    4d08:	000d5101 	jmpi	d510 <__malloc_unlock>
    4d0c:	41c00117 	ldw	r7,4(r8)
    4d10:	39c0004c 	andi	r7,r7,1
    4d14:	38000e1e 	bne	r7,zero,4d50 <_free_r+0x144>
    4d18:	01c00074 	movhi	r7,1
    4d1c:	1145883a 	add	r2,r2,r5
    4d20:	39c00f04 	addi	r7,r7,60
    4d24:	21400217 	ldw	r5,8(r4)
    4d28:	12400054 	ori	r9,r2,1
    4d2c:	1891883a 	add	r8,r3,r2
    4d30:	29c05226 	beq	r5,r7,4e7c <_free_r+0x270>
    4d34:	21000317 	ldw	r4,12(r4)
    4d38:	29000315 	stw	r4,12(r5)
    4d3c:	21400215 	stw	r5,8(r4)
    4d40:	1a400115 	stw	r9,4(r3)
    4d44:	40800015 	stw	r2,0(r8)
    4d48:	003fd806 	br	4cac <_free_r+0xa0>
    4d4c:	f800283a 	ret
    4d50:	11400054 	ori	r5,r2,1
    4d54:	817fff15 	stw	r5,-4(r16)
    4d58:	20800015 	stw	r2,0(r4)
    4d5c:	11008028 	cmpgeui	r4,r2,512
    4d60:	203fd426 	beq	r4,zero,4cb4 <_free_r+0xa8>
    4d64:	1008d27a 	srli	r4,r2,9
    4d68:	21400168 	cmpgeui	r5,r4,5
    4d6c:	2800341e 	bne	r5,zero,4e40 <_free_r+0x234>
    4d70:	1008d1ba 	srli	r4,r2,6
    4d74:	21c00e44 	addi	r7,r4,57
    4d78:	380e90fa 	slli	r7,r7,3
    4d7c:	21400e04 	addi	r5,r4,56
    4d80:	31cf883a 	add	r7,r6,r7
    4d84:	39000017 	ldw	r4,0(r7)
    4d88:	39fffe04 	addi	r7,r7,-8
    4d8c:	39004226 	beq	r7,r4,4e98 <_free_r+0x28c>
    4d90:	01bfff04 	movi	r6,-4
    4d94:	21400117 	ldw	r5,4(r4)
    4d98:	298a703a 	and	r5,r5,r6
    4d9c:	1140022e 	bgeu	r2,r5,4da8 <_free_r+0x19c>
    4da0:	21000217 	ldw	r4,8(r4)
    4da4:	393ffb1e 	bne	r7,r4,4d94 <_free_r+0x188>
    4da8:	21c00317 	ldw	r7,12(r4)
    4dac:	19c00315 	stw	r7,12(r3)
    4db0:	19000215 	stw	r4,8(r3)
    4db4:	38c00215 	stw	r3,8(r7)
    4db8:	20c00315 	stw	r3,12(r4)
    4dbc:	003fcd06 	br	4cf4 <_free_r+0xe8>
    4dc0:	40004d1e 	bne	r8,zero,4ef8 <_free_r+0x2ec>
    4dc4:	21800317 	ldw	r6,12(r4)
    4dc8:	21000217 	ldw	r4,8(r4)
    4dcc:	2885883a 	add	r2,r5,r2
    4dd0:	11400054 	ori	r5,r2,1
    4dd4:	21800315 	stw	r6,12(r4)
    4dd8:	31000215 	stw	r4,8(r6)
    4ddc:	19400115 	stw	r5,4(r3)
    4de0:	1887883a 	add	r3,r3,r2
    4de4:	18800015 	stw	r2,0(r3)
    4de8:	003fc206 	br	4cf4 <_free_r+0xe8>
    4dec:	39c0004c 	andi	r7,r7,1
    4df0:	1145883a 	add	r2,r2,r5
    4df4:	3800071e 	bne	r7,zero,4e14 <_free_r+0x208>
    4df8:	81fffe17 	ldw	r7,-8(r16)
    4dfc:	19c7c83a 	sub	r3,r3,r7
    4e00:	19000317 	ldw	r4,12(r3)
    4e04:	19400217 	ldw	r5,8(r3)
    4e08:	11c5883a 	add	r2,r2,r7
    4e0c:	29000315 	stw	r4,12(r5)
    4e10:	21400215 	stw	r5,8(r4)
    4e14:	01000074 	movhi	r4,1
    4e18:	11400054 	ori	r5,r2,1
    4e1c:	2105f417 	ldw	r4,6096(r4)
    4e20:	19400115 	stw	r5,4(r3)
    4e24:	30c00215 	stw	r3,8(r6)
    4e28:	113fb236 	bltu	r2,r4,4cf4 <_free_r+0xe8>
    4e2c:	00800074 	movhi	r2,1
    4e30:	114d2117 	ldw	r5,13444(r2)
    4e34:	8809883a 	mov	r4,r17
    4e38:	0004af00 	call	4af0 <_malloc_trim_r>
    4e3c:	003fad06 	br	4cf4 <_free_r+0xe8>
    4e40:	21400568 	cmpgeui	r5,r4,21
    4e44:	28000926 	beq	r5,zero,4e6c <_free_r+0x260>
    4e48:	21401568 	cmpgeui	r5,r4,85
    4e4c:	2800191e 	bne	r5,zero,4eb4 <_free_r+0x2a8>
    4e50:	1008d33a 	srli	r4,r2,12
    4e54:	21c01bc4 	addi	r7,r4,111
    4e58:	21401b84 	addi	r5,r4,110
    4e5c:	380e90fa 	slli	r7,r7,3
    4e60:	003fc706 	br	4d80 <_free_r+0x174>
    4e64:	1145883a 	add	r2,r2,r5
    4e68:	003fae06 	br	4d24 <_free_r+0x118>
    4e6c:	21c01704 	addi	r7,r4,92
    4e70:	214016c4 	addi	r5,r4,91
    4e74:	380e90fa 	slli	r7,r7,3
    4e78:	003fc106 	br	4d80 <_free_r+0x174>
    4e7c:	30c00515 	stw	r3,20(r6)
    4e80:	30c00415 	stw	r3,16(r6)
    4e84:	19c00315 	stw	r7,12(r3)
    4e88:	19c00215 	stw	r7,8(r3)
    4e8c:	1a400115 	stw	r9,4(r3)
    4e90:	40800015 	stw	r2,0(r8)
    4e94:	003f9706 	br	4cf4 <_free_r+0xe8>
    4e98:	280bd0ba 	srai	r5,r5,2
    4e9c:	00800044 	movi	r2,1
    4ea0:	32000117 	ldw	r8,4(r6)
    4ea4:	114a983a 	sll	r5,r2,r5
    4ea8:	2a0ab03a 	or	r5,r5,r8
    4eac:	31400115 	stw	r5,4(r6)
    4eb0:	003fbe06 	br	4dac <_free_r+0x1a0>
    4eb4:	21405568 	cmpgeui	r5,r4,341
    4eb8:	2800051e 	bne	r5,zero,4ed0 <_free_r+0x2c4>
    4ebc:	1008d3fa 	srli	r4,r2,15
    4ec0:	21c01e04 	addi	r7,r4,120
    4ec4:	21401dc4 	addi	r5,r4,119
    4ec8:	380e90fa 	slli	r7,r7,3
    4ecc:	003fac06 	br	4d80 <_free_r+0x174>
    4ed0:	21015568 	cmpgeui	r4,r4,1365
    4ed4:	2000051e 	bne	r4,zero,4eec <_free_r+0x2e0>
    4ed8:	1008d4ba 	srli	r4,r2,18
    4edc:	21c01f44 	addi	r7,r4,125
    4ee0:	21401f04 	addi	r5,r4,124
    4ee4:	380e90fa 	slli	r7,r7,3
    4ee8:	003fa506 	br	4d80 <_free_r+0x174>
    4eec:	01c0fe04 	movi	r7,1016
    4ef0:	01401f84 	movi	r5,126
    4ef4:	003fa206 	br	4d80 <_free_r+0x174>
    4ef8:	11400054 	ori	r5,r2,1
    4efc:	19400115 	stw	r5,4(r3)
    4f00:	20800015 	stw	r2,0(r4)
    4f04:	003f7b06 	br	4cf4 <_free_r+0xe8>

00004f08 <__sfvwrite_r>:
    4f08:	30800217 	ldw	r2,8(r6)
    4f0c:	1000ca26 	beq	r2,zero,5238 <__sfvwrite_r+0x330>
    4f10:	2880030b 	ldhu	r2,12(r5)
    4f14:	defff304 	addi	sp,sp,-52
    4f18:	dd000715 	stw	r20,28(sp)
    4f1c:	dc000315 	stw	r16,12(sp)
    4f20:	dfc00c15 	stw	ra,48(sp)
    4f24:	df000b15 	stw	fp,44(sp)
    4f28:	ddc00a15 	stw	r23,40(sp)
    4f2c:	dd800915 	stw	r22,36(sp)
    4f30:	dd400815 	stw	r21,32(sp)
    4f34:	dcc00615 	stw	r19,24(sp)
    4f38:	dc800515 	stw	r18,20(sp)
    4f3c:	dc400415 	stw	r17,16(sp)
    4f40:	d9000015 	stw	r4,0(sp)
    4f44:	10c0020c 	andi	r3,r2,8
    4f48:	2821883a 	mov	r16,r5
    4f4c:	3029883a 	mov	r20,r6
    4f50:	18002426 	beq	r3,zero,4fe4 <__sfvwrite_r+0xdc>
    4f54:	28c00417 	ldw	r3,16(r5)
    4f58:	18002226 	beq	r3,zero,4fe4 <__sfvwrite_r+0xdc>
    4f5c:	10c0008c 	andi	r3,r2,2
    4f60:	a4400017 	ldw	r17,0(r20)
    4f64:	18002726 	beq	r3,zero,5004 <__sfvwrite_r+0xfc>
    4f68:	80c00917 	ldw	r3,36(r16)
    4f6c:	80800717 	ldw	r2,28(r16)
    4f70:	05600034 	movhi	r21,32768
    4f74:	0027883a 	mov	r19,zero
    4f78:	0025883a 	mov	r18,zero
    4f7c:	ad7f0004 	addi	r21,r21,-1024
    4f80:	980d883a 	mov	r6,r19
    4f84:	100b883a 	mov	r5,r2
    4f88:	d9000017 	ldw	r4,0(sp)
    4f8c:	90001126 	beq	r18,zero,4fd4 <__sfvwrite_r+0xcc>
    4f90:	900f883a 	mov	r7,r18
    4f94:	ac80012e 	bgeu	r21,r18,4f9c <__sfvwrite_r+0x94>
    4f98:	a80f883a 	mov	r7,r21
    4f9c:	183ee83a 	callr	r3
    4fa0:	0080a00e 	bge	zero,r2,5224 <__sfvwrite_r+0x31c>
    4fa4:	a0c00217 	ldw	r3,8(r20)
    4fa8:	98a7883a 	add	r19,r19,r2
    4fac:	90a5c83a 	sub	r18,r18,r2
    4fb0:	1885c83a 	sub	r2,r3,r2
    4fb4:	a0800215 	stw	r2,8(r20)
    4fb8:	10006426 	beq	r2,zero,514c <__sfvwrite_r+0x244>
    4fbc:	80800717 	ldw	r2,28(r16)
    4fc0:	80c00917 	ldw	r3,36(r16)
    4fc4:	980d883a 	mov	r6,r19
    4fc8:	100b883a 	mov	r5,r2
    4fcc:	d9000017 	ldw	r4,0(sp)
    4fd0:	903fef1e 	bne	r18,zero,4f90 <__sfvwrite_r+0x88>
    4fd4:	8cc00017 	ldw	r19,0(r17)
    4fd8:	8c800117 	ldw	r18,4(r17)
    4fdc:	8c400204 	addi	r17,r17,8
    4fe0:	003fe706 	br	4f80 <__sfvwrite_r+0x78>
    4fe4:	d9000017 	ldw	r4,0(sp)
    4fe8:	800b883a 	mov	r5,r16
    4fec:	0002a900 	call	2a90 <__swsetup_r>
    4ff0:	1000f81e 	bne	r2,zero,53d4 <__sfvwrite_r+0x4cc>
    4ff4:	8080030b 	ldhu	r2,12(r16)
    4ff8:	a4400017 	ldw	r17,0(r20)
    4ffc:	10c0008c 	andi	r3,r2,2
    5000:	183fd91e 	bne	r3,zero,4f68 <__sfvwrite_r+0x60>
    5004:	10c0004c 	andi	r3,r2,1
    5008:	84800217 	ldw	r18,8(r16)
    500c:	87000017 	ldw	fp,0(r16)
    5010:	18008b1e 	bne	r3,zero,5240 <__sfvwrite_r+0x338>
    5014:	00e00034 	movhi	r3,32768
    5018:	18ffff84 	addi	r3,r3,-2
    501c:	01200034 	movhi	r4,32768
    5020:	d8c00115 	stw	r3,4(sp)
    5024:	20ffffc4 	addi	r3,r4,-1
    5028:	002d883a 	mov	r22,zero
    502c:	002f883a 	mov	r23,zero
    5030:	d8c00215 	stw	r3,8(sp)
    5034:	b8004126 	beq	r23,zero,513c <__sfvwrite_r+0x234>
    5038:	1100800c 	andi	r4,r2,512
    503c:	20009126 	beq	r4,zero,5284 <__sfvwrite_r+0x37c>
    5040:	902b883a 	mov	r21,r18
    5044:	bc80b836 	bltu	r23,r18,5328 <__sfvwrite_r+0x420>
    5048:	1101200c 	andi	r4,r2,1152
    504c:	20002626 	beq	r4,zero,50e8 <__sfvwrite_r+0x1e0>
    5050:	84800517 	ldw	r18,20(r16)
    5054:	81400417 	ldw	r5,16(r16)
    5058:	b9000044 	addi	r4,r23,1
    505c:	948d883a 	add	r6,r18,r18
    5060:	348d883a 	add	r6,r6,r18
    5064:	3024d7fa 	srli	r18,r6,31
    5068:	e167c83a 	sub	r19,fp,r5
    506c:	24c9883a 	add	r4,r4,r19
    5070:	91a5883a 	add	r18,r18,r6
    5074:	9025d07a 	srai	r18,r18,1
    5078:	900d883a 	mov	r6,r18
    507c:	9100022e 	bgeu	r18,r4,5088 <__sfvwrite_r+0x180>
    5080:	2025883a 	mov	r18,r4
    5084:	200d883a 	mov	r6,r4
    5088:	1081000c 	andi	r2,r2,1024
    508c:	1000bf26 	beq	r2,zero,538c <__sfvwrite_r+0x484>
    5090:	d9000017 	ldw	r4,0(sp)
    5094:	300b883a 	mov	r5,r6
    5098:	00057280 	call	5728 <_malloc_r>
    509c:	1000c826 	beq	r2,zero,53c0 <__sfvwrite_r+0x4b8>
    50a0:	81400417 	ldw	r5,16(r16)
    50a4:	980d883a 	mov	r6,r19
    50a8:	1009883a 	mov	r4,r2
    50ac:	00060040 	call	6004 <memcpy>
    50b0:	100f883a 	mov	r7,r2
    50b4:	8080030b 	ldhu	r2,12(r16)
    50b8:	00fedfc4 	movi	r3,-1153
    50bc:	10c4703a 	and	r2,r2,r3
    50c0:	10802014 	ori	r2,r2,128
    50c4:	8080030d 	sth	r2,12(r16)
    50c8:	94c5c83a 	sub	r2,r18,r19
    50cc:	3cf9883a 	add	fp,r7,r19
    50d0:	84800515 	stw	r18,20(r16)
    50d4:	81c00415 	stw	r7,16(r16)
    50d8:	87000015 	stw	fp,0(r16)
    50dc:	b825883a 	mov	r18,r23
    50e0:	80800215 	stw	r2,8(r16)
    50e4:	b82b883a 	mov	r21,r23
    50e8:	a80d883a 	mov	r6,r21
    50ec:	b00b883a 	mov	r5,r22
    50f0:	e009883a 	mov	r4,fp
    50f4:	00061040 	call	6104 <memmove>
    50f8:	80800217 	ldw	r2,8(r16)
    50fc:	81800017 	ldw	r6,0(r16)
    5100:	b827883a 	mov	r19,r23
    5104:	14a5c83a 	sub	r18,r2,r18
    5108:	354d883a 	add	r6,r6,r21
    510c:	84800215 	stw	r18,8(r16)
    5110:	81800015 	stw	r6,0(r16)
    5114:	002f883a 	mov	r23,zero
    5118:	a0800217 	ldw	r2,8(r20)
    511c:	b4ed883a 	add	r22,r22,r19
    5120:	14e7c83a 	sub	r19,r2,r19
    5124:	a4c00215 	stw	r19,8(r20)
    5128:	98000826 	beq	r19,zero,514c <__sfvwrite_r+0x244>
    512c:	8080030b 	ldhu	r2,12(r16)
    5130:	84800217 	ldw	r18,8(r16)
    5134:	87000017 	ldw	fp,0(r16)
    5138:	b83fbf1e 	bne	r23,zero,5038 <__sfvwrite_r+0x130>
    513c:	8d800017 	ldw	r22,0(r17)
    5140:	8dc00117 	ldw	r23,4(r17)
    5144:	8c400204 	addi	r17,r17,8
    5148:	003fba06 	br	5034 <__sfvwrite_r+0x12c>
    514c:	0005883a 	mov	r2,zero
    5150:	dfc00c17 	ldw	ra,48(sp)
    5154:	df000b17 	ldw	fp,44(sp)
    5158:	ddc00a17 	ldw	r23,40(sp)
    515c:	dd800917 	ldw	r22,36(sp)
    5160:	dd400817 	ldw	r21,32(sp)
    5164:	dd000717 	ldw	r20,28(sp)
    5168:	dcc00617 	ldw	r19,24(sp)
    516c:	dc800517 	ldw	r18,20(sp)
    5170:	dc400417 	ldw	r17,16(sp)
    5174:	dc000317 	ldw	r16,12(sp)
    5178:	dec00d04 	addi	sp,sp,52
    517c:	f800283a 	ret
    5180:	b1c07116 	blt	r22,r7,5348 <__sfvwrite_r+0x440>
    5184:	80800917 	ldw	r2,36(r16)
    5188:	81400717 	ldw	r5,28(r16)
    518c:	d9000017 	ldw	r4,0(sp)
    5190:	b80d883a 	mov	r6,r23
    5194:	103ee83a 	callr	r2
    5198:	1025883a 	mov	r18,r2
    519c:	0080210e 	bge	zero,r2,5224 <__sfvwrite_r+0x31c>
    51a0:	acabc83a 	sub	r21,r21,r18
    51a4:	a8006326 	beq	r21,zero,5334 <__sfvwrite_r+0x42c>
    51a8:	00800044 	movi	r2,1
    51ac:	a0c00217 	ldw	r3,8(r20)
    51b0:	bcaf883a 	add	r23,r23,r18
    51b4:	9ca7c83a 	sub	r19,r19,r18
    51b8:	1ca5c83a 	sub	r18,r3,r18
    51bc:	a4800215 	stw	r18,8(r20)
    51c0:	903fe226 	beq	r18,zero,514c <__sfvwrite_r+0x244>
    51c4:	84800217 	ldw	r18,8(r16)
    51c8:	87000017 	ldw	fp,0(r16)
    51cc:	98002126 	beq	r19,zero,5254 <__sfvwrite_r+0x34c>
    51d0:	10002426 	beq	r2,zero,5264 <__sfvwrite_r+0x35c>
    51d4:	a805883a 	mov	r2,r21
    51d8:	982d883a 	mov	r22,r19
    51dc:	14c0012e 	bgeu	r2,r19,51e4 <__sfvwrite_r+0x2dc>
    51e0:	102d883a 	mov	r22,r2
    51e4:	80800417 	ldw	r2,16(r16)
    51e8:	81c00517 	ldw	r7,20(r16)
    51ec:	173fe42e 	bgeu	r2,fp,5180 <__sfvwrite_r+0x278>
    51f0:	3ca5883a 	add	r18,r7,r18
    51f4:	95bfe20e 	bge	r18,r22,5180 <__sfvwrite_r+0x278>
    51f8:	b80b883a 	mov	r5,r23
    51fc:	e009883a 	mov	r4,fp
    5200:	900d883a 	mov	r6,r18
    5204:	00061040 	call	6104 <memmove>
    5208:	80800017 	ldw	r2,0(r16)
    520c:	d9000017 	ldw	r4,0(sp)
    5210:	800b883a 	mov	r5,r16
    5214:	1485883a 	add	r2,r2,r18
    5218:	80800015 	stw	r2,0(r16)
    521c:	00047140 	call	4714 <_fflush_r>
    5220:	103fdf26 	beq	r2,zero,51a0 <__sfvwrite_r+0x298>
    5224:	8080030b 	ldhu	r2,12(r16)
    5228:	10801014 	ori	r2,r2,64
    522c:	8080030d 	sth	r2,12(r16)
    5230:	00bfffc4 	movi	r2,-1
    5234:	003fc606 	br	5150 <__sfvwrite_r+0x248>
    5238:	0005883a 	mov	r2,zero
    523c:	f800283a 	ret
    5240:	0027883a 	mov	r19,zero
    5244:	002b883a 	mov	r21,zero
    5248:	0005883a 	mov	r2,zero
    524c:	002f883a 	mov	r23,zero
    5250:	983fdf1e 	bne	r19,zero,51d0 <__sfvwrite_r+0x2c8>
    5254:	8cc00117 	ldw	r19,4(r17)
    5258:	8dc00017 	ldw	r23,0(r17)
    525c:	8c400204 	addi	r17,r17,8
    5260:	983ffc26 	beq	r19,zero,5254 <__sfvwrite_r+0x34c>
    5264:	980d883a 	mov	r6,r19
    5268:	01400284 	movi	r5,10
    526c:	b809883a 	mov	r4,r23
    5270:	0005f1c0 	call	5f1c <memchr>
    5274:	10004226 	beq	r2,zero,5380 <__sfvwrite_r+0x478>
    5278:	10800044 	addi	r2,r2,1
    527c:	15ebc83a 	sub	r21,r2,r23
    5280:	003fd406 	br	51d4 <__sfvwrite_r+0x2cc>
    5284:	80800417 	ldw	r2,16(r16)
    5288:	17001436 	bltu	r2,fp,52dc <__sfvwrite_r+0x3d4>
    528c:	84c00517 	ldw	r19,20(r16)
    5290:	bcc01236 	bltu	r23,r19,52dc <__sfvwrite_r+0x3d4>
    5294:	d8800117 	ldw	r2,4(sp)
    5298:	15c0372e 	bgeu	r2,r23,5378 <__sfvwrite_r+0x470>
    529c:	d9000217 	ldw	r4,8(sp)
    52a0:	980b883a 	mov	r5,r19
    52a4:	000049c0 	call	49c <__divsi3>
    52a8:	980b883a 	mov	r5,r19
    52ac:	1009883a 	mov	r4,r2
    52b0:	000a5dc0 	call	a5dc <__mulsi3>
    52b4:	81400717 	ldw	r5,28(r16)
    52b8:	82800917 	ldw	r10,36(r16)
    52bc:	d9000017 	ldw	r4,0(sp)
    52c0:	100f883a 	mov	r7,r2
    52c4:	b00d883a 	mov	r6,r22
    52c8:	503ee83a 	callr	r10
    52cc:	00bfd50e 	bge	zero,r2,5224 <__sfvwrite_r+0x31c>
    52d0:	1027883a 	mov	r19,r2
    52d4:	bcefc83a 	sub	r23,r23,r19
    52d8:	003f8f06 	br	5118 <__sfvwrite_r+0x210>
    52dc:	9027883a 	mov	r19,r18
    52e0:	bc80012e 	bgeu	r23,r18,52e8 <__sfvwrite_r+0x3e0>
    52e4:	b827883a 	mov	r19,r23
    52e8:	e009883a 	mov	r4,fp
    52ec:	980d883a 	mov	r6,r19
    52f0:	b00b883a 	mov	r5,r22
    52f4:	00061040 	call	6104 <memmove>
    52f8:	80800217 	ldw	r2,8(r16)
    52fc:	81000017 	ldw	r4,0(r16)
    5300:	14c5c83a 	sub	r2,r2,r19
    5304:	24c9883a 	add	r4,r4,r19
    5308:	80800215 	stw	r2,8(r16)
    530c:	81000015 	stw	r4,0(r16)
    5310:	103ff01e 	bne	r2,zero,52d4 <__sfvwrite_r+0x3cc>
    5314:	d9000017 	ldw	r4,0(sp)
    5318:	800b883a 	mov	r5,r16
    531c:	00047140 	call	4714 <_fflush_r>
    5320:	103fec26 	beq	r2,zero,52d4 <__sfvwrite_r+0x3cc>
    5324:	003fbf06 	br	5224 <__sfvwrite_r+0x31c>
    5328:	b825883a 	mov	r18,r23
    532c:	b82b883a 	mov	r21,r23
    5330:	003f6d06 	br	50e8 <__sfvwrite_r+0x1e0>
    5334:	d9000017 	ldw	r4,0(sp)
    5338:	800b883a 	mov	r5,r16
    533c:	00047140 	call	4714 <_fflush_r>
    5340:	103f9a26 	beq	r2,zero,51ac <__sfvwrite_r+0x2a4>
    5344:	003fb706 	br	5224 <__sfvwrite_r+0x31c>
    5348:	b00d883a 	mov	r6,r22
    534c:	b80b883a 	mov	r5,r23
    5350:	e009883a 	mov	r4,fp
    5354:	00061040 	call	6104 <memmove>
    5358:	80c00217 	ldw	r3,8(r16)
    535c:	80800017 	ldw	r2,0(r16)
    5360:	b025883a 	mov	r18,r22
    5364:	1d87c83a 	sub	r3,r3,r22
    5368:	15ad883a 	add	r22,r2,r22
    536c:	80c00215 	stw	r3,8(r16)
    5370:	85800015 	stw	r22,0(r16)
    5374:	003f8a06 	br	51a0 <__sfvwrite_r+0x298>
    5378:	b809883a 	mov	r4,r23
    537c:	003fc806 	br	52a0 <__sfvwrite_r+0x398>
    5380:	98800044 	addi	r2,r19,1
    5384:	102b883a 	mov	r21,r2
    5388:	003f9306 	br	51d8 <__sfvwrite_r+0x2d0>
    538c:	d9000017 	ldw	r4,0(sp)
    5390:	00072d40 	call	72d4 <_realloc_r>
    5394:	100f883a 	mov	r7,r2
    5398:	103f4b1e 	bne	r2,zero,50c8 <__sfvwrite_r+0x1c0>
    539c:	dc400017 	ldw	r17,0(sp)
    53a0:	81400417 	ldw	r5,16(r16)
    53a4:	8809883a 	mov	r4,r17
    53a8:	0004c0c0 	call	4c0c <_free_r>
    53ac:	8080030b 	ldhu	r2,12(r16)
    53b0:	00c00304 	movi	r3,12
    53b4:	88c00015 	stw	r3,0(r17)
    53b8:	10bfdfcc 	andi	r2,r2,65407
    53bc:	003f9a06 	br	5228 <__sfvwrite_r+0x320>
    53c0:	d8c00017 	ldw	r3,0(sp)
    53c4:	00800304 	movi	r2,12
    53c8:	18800015 	stw	r2,0(r3)
    53cc:	8080030b 	ldhu	r2,12(r16)
    53d0:	003f9506 	br	5228 <__sfvwrite_r+0x320>
    53d4:	00bfffc4 	movi	r2,-1
    53d8:	003f5d06 	br	5150 <__sfvwrite_r+0x248>

000053dc <_fwalk>:
    53dc:	defffa04 	addi	sp,sp,-24
    53e0:	dc800215 	stw	r18,8(sp)
    53e4:	dfc00515 	stw	ra,20(sp)
    53e8:	dd000415 	stw	r20,16(sp)
    53ec:	dcc00315 	stw	r19,12(sp)
    53f0:	dc400115 	stw	r17,4(sp)
    53f4:	dc000015 	stw	r16,0(sp)
    53f8:	2480b804 	addi	r18,r4,736
    53fc:	90001e26 	beq	r18,zero,5478 <_fwalk+0x9c>
    5400:	2827883a 	mov	r19,r5
    5404:	0029883a 	mov	r20,zero
    5408:	94400117 	ldw	r17,4(r18)
    540c:	94000217 	ldw	r16,8(r18)
    5410:	8c7fffc4 	addi	r17,r17,-1
    5414:	88000d16 	blt	r17,zero,544c <_fwalk+0x70>
    5418:	8080030b 	ldhu	r2,12(r16)
    541c:	8c7fffc4 	addi	r17,r17,-1
    5420:	108000b0 	cmpltui	r2,r2,2
    5424:	1000061e 	bne	r2,zero,5440 <_fwalk+0x64>
    5428:	8080038f 	ldh	r2,14(r16)
    542c:	8009883a 	mov	r4,r16
    5430:	10bfffe0 	cmpeqi	r2,r2,-1
    5434:	1000021e 	bne	r2,zero,5440 <_fwalk+0x64>
    5438:	983ee83a 	callr	r19
    543c:	a0a8b03a 	or	r20,r20,r2
    5440:	88bfffd8 	cmpnei	r2,r17,-1
    5444:	84001a04 	addi	r16,r16,104
    5448:	103ff31e 	bne	r2,zero,5418 <_fwalk+0x3c>
    544c:	94800017 	ldw	r18,0(r18)
    5450:	903fed1e 	bne	r18,zero,5408 <_fwalk+0x2c>
    5454:	a005883a 	mov	r2,r20
    5458:	dfc00517 	ldw	ra,20(sp)
    545c:	dd000417 	ldw	r20,16(sp)
    5460:	dcc00317 	ldw	r19,12(sp)
    5464:	dc800217 	ldw	r18,8(sp)
    5468:	dc400117 	ldw	r17,4(sp)
    546c:	dc000017 	ldw	r16,0(sp)
    5470:	dec00604 	addi	sp,sp,24
    5474:	f800283a 	ret
    5478:	0029883a 	mov	r20,zero
    547c:	003ff506 	br	5454 <_fwalk+0x78>

00005480 <_fwalk_reent>:
    5480:	defff904 	addi	sp,sp,-28
    5484:	dc800215 	stw	r18,8(sp)
    5488:	dfc00615 	stw	ra,24(sp)
    548c:	dd400515 	stw	r21,20(sp)
    5490:	dd000415 	stw	r20,16(sp)
    5494:	dcc00315 	stw	r19,12(sp)
    5498:	dc400115 	stw	r17,4(sp)
    549c:	dc000015 	stw	r16,0(sp)
    54a0:	2480b804 	addi	r18,r4,736
    54a4:	90002126 	beq	r18,zero,552c <_fwalk_reent+0xac>
    54a8:	2829883a 	mov	r20,r5
    54ac:	2027883a 	mov	r19,r4
    54b0:	002b883a 	mov	r21,zero
    54b4:	94400117 	ldw	r17,4(r18)
    54b8:	94000217 	ldw	r16,8(r18)
    54bc:	8c7fffc4 	addi	r17,r17,-1
    54c0:	88000e16 	blt	r17,zero,54fc <_fwalk_reent+0x7c>
    54c4:	8080030b 	ldhu	r2,12(r16)
    54c8:	8c7fffc4 	addi	r17,r17,-1
    54cc:	108000b0 	cmpltui	r2,r2,2
    54d0:	1000071e 	bne	r2,zero,54f0 <_fwalk_reent+0x70>
    54d4:	8080038f 	ldh	r2,14(r16)
    54d8:	800b883a 	mov	r5,r16
    54dc:	9809883a 	mov	r4,r19
    54e0:	10bfffe0 	cmpeqi	r2,r2,-1
    54e4:	1000021e 	bne	r2,zero,54f0 <_fwalk_reent+0x70>
    54e8:	a03ee83a 	callr	r20
    54ec:	a8aab03a 	or	r21,r21,r2
    54f0:	88bfffd8 	cmpnei	r2,r17,-1
    54f4:	84001a04 	addi	r16,r16,104
    54f8:	103ff21e 	bne	r2,zero,54c4 <_fwalk_reent+0x44>
    54fc:	94800017 	ldw	r18,0(r18)
    5500:	903fec1e 	bne	r18,zero,54b4 <_fwalk_reent+0x34>
    5504:	a805883a 	mov	r2,r21
    5508:	dfc00617 	ldw	ra,24(sp)
    550c:	dd400517 	ldw	r21,20(sp)
    5510:	dd000417 	ldw	r20,16(sp)
    5514:	dcc00317 	ldw	r19,12(sp)
    5518:	dc800217 	ldw	r18,8(sp)
    551c:	dc400117 	ldw	r17,4(sp)
    5520:	dc000017 	ldw	r16,0(sp)
    5524:	dec00704 	addi	sp,sp,28
    5528:	f800283a 	ret
    552c:	002b883a 	mov	r21,zero
    5530:	003ff406 	br	5504 <_fwalk_reent+0x84>

00005534 <__localeconv_l>:
    5534:	20803c04 	addi	r2,r4,240
    5538:	f800283a 	ret

0000553c <_localeconv_r>:
    553c:	00800074 	movhi	r2,1
    5540:	10814b04 	addi	r2,r2,1324
    5544:	f800283a 	ret

00005548 <localeconv>:
    5548:	00800074 	movhi	r2,1
    554c:	10814b04 	addi	r2,r2,1324
    5550:	f800283a 	ret

00005554 <__swhatbuf_r>:
    5554:	deffea04 	addi	sp,sp,-88
    5558:	dc001215 	stw	r16,72(sp)
    555c:	2821883a 	mov	r16,r5
    5560:	2940038f 	ldh	r5,14(r5)
    5564:	dc801415 	stw	r18,80(sp)
    5568:	dc401315 	stw	r17,76(sp)
    556c:	dfc01515 	stw	ra,84(sp)
    5570:	3023883a 	mov	r17,r6
    5574:	3825883a 	mov	r18,r7
    5578:	28001016 	blt	r5,zero,55bc <__swhatbuf_r+0x68>
    557c:	d80d883a 	mov	r6,sp
    5580:	00094380 	call	9438 <_fstat_r>
    5584:	10000d16 	blt	r2,zero,55bc <__swhatbuf_r+0x68>
    5588:	d8c00117 	ldw	r3,4(sp)
    558c:	00820004 	movi	r2,2048
    5590:	18fc000c 	andi	r3,r3,61440
    5594:	18c80020 	cmpeqi	r3,r3,8192
    5598:	90c00015 	stw	r3,0(r18)
    559c:	00c10004 	movi	r3,1024
    55a0:	88c00015 	stw	r3,0(r17)
    55a4:	dfc01517 	ldw	ra,84(sp)
    55a8:	dc801417 	ldw	r18,80(sp)
    55ac:	dc401317 	ldw	r17,76(sp)
    55b0:	dc001217 	ldw	r16,72(sp)
    55b4:	dec01604 	addi	sp,sp,88
    55b8:	f800283a 	ret
    55bc:	8080030b 	ldhu	r2,12(r16)
    55c0:	90000015 	stw	zero,0(r18)
    55c4:	1080200c 	andi	r2,r2,128
    55c8:	10000426 	beq	r2,zero,55dc <__swhatbuf_r+0x88>
    55cc:	00801004 	movi	r2,64
    55d0:	88800015 	stw	r2,0(r17)
    55d4:	0005883a 	mov	r2,zero
    55d8:	003ff206 	br	55a4 <__swhatbuf_r+0x50>
    55dc:	00810004 	movi	r2,1024
    55e0:	88800015 	stw	r2,0(r17)
    55e4:	0005883a 	mov	r2,zero
    55e8:	003fee06 	br	55a4 <__swhatbuf_r+0x50>

000055ec <__smakebuf_r>:
    55ec:	28c0030b 	ldhu	r3,12(r5)
    55f0:	defffa04 	addi	sp,sp,-24
    55f4:	dc000215 	stw	r16,8(sp)
    55f8:	dfc00515 	stw	ra,20(sp)
    55fc:	dc800415 	stw	r18,16(sp)
    5600:	dc400315 	stw	r17,12(sp)
    5604:	18c0008c 	andi	r3,r3,2
    5608:	2821883a 	mov	r16,r5
    560c:	18000b26 	beq	r3,zero,563c <__smakebuf_r+0x50>
    5610:	28c010c4 	addi	r3,r5,67
    5614:	28c00015 	stw	r3,0(r5)
    5618:	28c00415 	stw	r3,16(r5)
    561c:	00c00044 	movi	r3,1
    5620:	28c00515 	stw	r3,20(r5)
    5624:	dfc00517 	ldw	ra,20(sp)
    5628:	dc800417 	ldw	r18,16(sp)
    562c:	dc400317 	ldw	r17,12(sp)
    5630:	dc000217 	ldw	r16,8(sp)
    5634:	dec00604 	addi	sp,sp,24
    5638:	f800283a 	ret
    563c:	d9c00104 	addi	r7,sp,4
    5640:	d80d883a 	mov	r6,sp
    5644:	2023883a 	mov	r17,r4
    5648:	00055540 	call	5554 <__swhatbuf_r>
    564c:	1025883a 	mov	r18,r2
    5650:	d8800117 	ldw	r2,4(sp)
    5654:	1000131e 	bne	r2,zero,56a4 <__smakebuf_r+0xb8>
    5658:	d9400017 	ldw	r5,0(sp)
    565c:	8809883a 	mov	r4,r17
    5660:	00057280 	call	5728 <_malloc_r>
    5664:	10001c26 	beq	r2,zero,56d8 <__smakebuf_r+0xec>
    5668:	01000034 	movhi	r4,0
    566c:	2111e904 	addi	r4,r4,18340
    5670:	80c0030b 	ldhu	r3,12(r16)
    5674:	89000f15 	stw	r4,60(r17)
    5678:	80800015 	stw	r2,0(r16)
    567c:	80800415 	stw	r2,16(r16)
    5680:	d8800017 	ldw	r2,0(sp)
    5684:	d9400117 	ldw	r5,4(sp)
    5688:	18c02014 	ori	r3,r3,128
    568c:	80c0030d 	sth	r3,12(r16)
    5690:	80800515 	stw	r2,20(r16)
    5694:	28001c1e 	bne	r5,zero,5708 <__smakebuf_r+0x11c>
    5698:	90c6b03a 	or	r3,r18,r3
    569c:	80c0030d 	sth	r3,12(r16)
    56a0:	003fe006 	br	5624 <__smakebuf_r+0x38>
    56a4:	8140038f 	ldh	r5,14(r16)
    56a8:	8809883a 	mov	r4,r17
    56ac:	00094980 	call	9498 <_isatty_r>
    56b0:	103fe926 	beq	r2,zero,5658 <__smakebuf_r+0x6c>
    56b4:	8080030b 	ldhu	r2,12(r16)
    56b8:	80c010c4 	addi	r3,r16,67
    56bc:	80c00015 	stw	r3,0(r16)
    56c0:	10800054 	ori	r2,r2,1
    56c4:	8080030d 	sth	r2,12(r16)
    56c8:	00800044 	movi	r2,1
    56cc:	80c00415 	stw	r3,16(r16)
    56d0:	80800515 	stw	r2,20(r16)
    56d4:	003fe006 	br	5658 <__smakebuf_r+0x6c>
    56d8:	8080030b 	ldhu	r2,12(r16)
    56dc:	10c0800c 	andi	r3,r2,512
    56e0:	183fd01e 	bne	r3,zero,5624 <__smakebuf_r+0x38>
    56e4:	10bfff0c 	andi	r2,r2,65532
    56e8:	10800094 	ori	r2,r2,2
    56ec:	80c010c4 	addi	r3,r16,67
    56f0:	8080030d 	sth	r2,12(r16)
    56f4:	00800044 	movi	r2,1
    56f8:	80c00015 	stw	r3,0(r16)
    56fc:	80c00415 	stw	r3,16(r16)
    5700:	80800515 	stw	r2,20(r16)
    5704:	003fc706 	br	5624 <__smakebuf_r+0x38>
    5708:	8140038f 	ldh	r5,14(r16)
    570c:	8809883a 	mov	r4,r17
    5710:	00094980 	call	9498 <_isatty_r>
    5714:	80c0030b 	ldhu	r3,12(r16)
    5718:	103fdf26 	beq	r2,zero,5698 <__smakebuf_r+0xac>
    571c:	18ffff0c 	andi	r3,r3,65532
    5720:	18c00054 	ori	r3,r3,1
    5724:	003fdc06 	br	5698 <__smakebuf_r+0xac>

00005728 <_malloc_r>:
    5728:	defff604 	addi	sp,sp,-40
    572c:	dc400115 	stw	r17,4(sp)
    5730:	2c4002c4 	addi	r17,r5,11
    5734:	dc800215 	stw	r18,8(sp)
    5738:	dfc00915 	stw	ra,36(sp)
    573c:	df000815 	stw	fp,32(sp)
    5740:	ddc00715 	stw	r23,28(sp)
    5744:	dd800615 	stw	r22,24(sp)
    5748:	dd400515 	stw	r21,20(sp)
    574c:	dd000415 	stw	r20,16(sp)
    5750:	dcc00315 	stw	r19,12(sp)
    5754:	dc000015 	stw	r16,0(sp)
    5758:	888005e8 	cmpgeui	r2,r17,23
    575c:	2025883a 	mov	r18,r4
    5760:	10001b1e 	bne	r2,zero,57d0 <_malloc_r+0xa8>
    5764:	29400468 	cmpgeui	r5,r5,17
    5768:	2800951e 	bne	r5,zero,59c0 <_malloc_r+0x298>
    576c:	000d4ec0 	call	d4ec <__malloc_lock>
    5770:	04400404 	movi	r17,16
    5774:	00800604 	movi	r2,24
    5778:	01800084 	movi	r6,2
    577c:	04c00074 	movhi	r19,1
    5780:	9cc00d04 	addi	r19,r19,52
    5784:	9885883a 	add	r2,r19,r2
    5788:	14000117 	ldw	r16,4(r2)
    578c:	10fffe04 	addi	r3,r2,-8
    5790:	80c09e26 	beq	r16,r3,5a0c <_malloc_r+0x2e4>
    5794:	80800117 	ldw	r2,4(r16)
    5798:	81000317 	ldw	r4,12(r16)
    579c:	00ffff04 	movi	r3,-4
    57a0:	10c4703a 	and	r2,r2,r3
    57a4:	81400217 	ldw	r5,8(r16)
    57a8:	8085883a 	add	r2,r16,r2
    57ac:	10c00117 	ldw	r3,4(r2)
    57b0:	29000315 	stw	r4,12(r5)
    57b4:	21400215 	stw	r5,8(r4)
    57b8:	18c00054 	ori	r3,r3,1
    57bc:	10c00115 	stw	r3,4(r2)
    57c0:	9009883a 	mov	r4,r18
    57c4:	000d5100 	call	d510 <__malloc_unlock>
    57c8:	80800204 	addi	r2,r16,8
    57cc:	00007f06 	br	59cc <_malloc_r+0x2a4>
    57d0:	00bffe04 	movi	r2,-8
    57d4:	88a2703a 	and	r17,r17,r2
    57d8:	88007916 	blt	r17,zero,59c0 <_malloc_r+0x298>
    57dc:	89407836 	bltu	r17,r5,59c0 <_malloc_r+0x298>
    57e0:	000d4ec0 	call	d4ec <__malloc_lock>
    57e4:	88807e28 	cmpgeui	r2,r17,504
    57e8:	10013326 	beq	r2,zero,5cb8 <_malloc_r+0x590>
    57ec:	8804d27a 	srli	r2,r17,9
    57f0:	10008226 	beq	r2,zero,59fc <_malloc_r+0x2d4>
    57f4:	10c00168 	cmpgeui	r3,r2,5
    57f8:	1801151e 	bne	r3,zero,5c50 <_malloc_r+0x528>
    57fc:	8804d1ba 	srli	r2,r17,6
    5800:	11800e44 	addi	r6,r2,57
    5804:	300a90fa 	slli	r5,r6,3
    5808:	12000e04 	addi	r8,r2,56
    580c:	04c00074 	movhi	r19,1
    5810:	9cc00d04 	addi	r19,r19,52
    5814:	994b883a 	add	r5,r19,r5
    5818:	2c000117 	ldw	r16,4(r5)
    581c:	297ffe04 	addi	r5,r5,-8
    5820:	2c001126 	beq	r5,r16,5868 <_malloc_r+0x140>
    5824:	80800117 	ldw	r2,4(r16)
    5828:	00ffff04 	movi	r3,-4
    582c:	10c4703a 	and	r2,r2,r3
    5830:	1447c83a 	sub	r3,r2,r17
    5834:	19000408 	cmpgei	r4,r3,16
    5838:	2000e81e 	bne	r4,zero,5bdc <_malloc_r+0x4b4>
    583c:	1800e90e 	bge	r3,zero,5be4 <_malloc_r+0x4bc>
    5840:	01ffff04 	movi	r7,-4
    5844:	00000606 	br	5860 <_malloc_r+0x138>
    5848:	80800117 	ldw	r2,4(r16)
    584c:	11c4703a 	and	r2,r2,r7
    5850:	1447c83a 	sub	r3,r2,r17
    5854:	19000408 	cmpgei	r4,r3,16
    5858:	2000e01e 	bne	r4,zero,5bdc <_malloc_r+0x4b4>
    585c:	1800e10e 	bge	r3,zero,5be4 <_malloc_r+0x4bc>
    5860:	84000317 	ldw	r16,12(r16)
    5864:	2c3ff81e 	bne	r5,r16,5848 <_malloc_r+0x120>
    5868:	9c000417 	ldw	r16,16(r19)
    586c:	02000074 	movhi	r8,1
    5870:	42000f04 	addi	r8,r8,60
    5874:	82006c26 	beq	r16,r8,5a28 <_malloc_r+0x300>
    5878:	80c00117 	ldw	r3,4(r16)
    587c:	00bfff04 	movi	r2,-4
    5880:	1884703a 	and	r2,r3,r2
    5884:	1447c83a 	sub	r3,r2,r17
    5888:	19000410 	cmplti	r4,r3,16
    588c:	20011526 	beq	r4,zero,5ce4 <_malloc_r+0x5bc>
    5890:	9a000515 	stw	r8,20(r19)
    5894:	9a000415 	stw	r8,16(r19)
    5898:	18010a0e 	bge	r3,zero,5cc4 <_malloc_r+0x59c>
    589c:	10c08028 	cmpgeui	r3,r2,512
    58a0:	1800d21e 	bne	r3,zero,5bec <_malloc_r+0x4c4>
    58a4:	1004d0fa 	srli	r2,r2,3
    58a8:	99400117 	ldw	r5,4(r19)
    58ac:	10c00044 	addi	r3,r2,1
    58b0:	1009d0ba 	srai	r4,r2,2
    58b4:	180690fa 	slli	r3,r3,3
    58b8:	00800044 	movi	r2,1
    58bc:	1104983a 	sll	r2,r2,r4
    58c0:	98c7883a 	add	r3,r19,r3
    58c4:	19000017 	ldw	r4,0(r3)
    58c8:	1144b03a 	or	r2,r2,r5
    58cc:	197ffe04 	addi	r5,r3,-8
    58d0:	81400315 	stw	r5,12(r16)
    58d4:	81000215 	stw	r4,8(r16)
    58d8:	98800115 	stw	r2,4(r19)
    58dc:	1c000015 	stw	r16,0(r3)
    58e0:	24000315 	stw	r16,12(r4)
    58e4:	3007d0ba 	srai	r3,r6,2
    58e8:	01000044 	movi	r4,1
    58ec:	20c8983a 	sll	r4,r4,r3
    58f0:	11005236 	bltu	r2,r4,5a3c <_malloc_r+0x314>
    58f4:	2086703a 	and	r3,r4,r2
    58f8:	18000a1e 	bne	r3,zero,5924 <_malloc_r+0x1fc>
    58fc:	00ffff04 	movi	r3,-4
    5900:	2109883a 	add	r4,r4,r4
    5904:	30cc703a 	and	r6,r6,r3
    5908:	2086703a 	and	r3,r4,r2
    590c:	31800104 	addi	r6,r6,4
    5910:	1800041e 	bne	r3,zero,5924 <_malloc_r+0x1fc>
    5914:	2109883a 	add	r4,r4,r4
    5918:	2086703a 	and	r3,r4,r2
    591c:	31800104 	addi	r6,r6,4
    5920:	183ffc26 	beq	r3,zero,5914 <_malloc_r+0x1ec>
    5924:	027fff04 	movi	r9,-4
    5928:	301490fa 	slli	r10,r6,3
    592c:	3017883a 	mov	r11,r6
    5930:	9a95883a 	add	r10,r19,r10
    5934:	500f883a 	mov	r7,r10
    5938:	3c000317 	ldw	r16,12(r7)
    593c:	3c00cd26 	beq	r7,r16,5c74 <_malloc_r+0x54c>
    5940:	80800117 	ldw	r2,4(r16)
    5944:	1244703a 	and	r2,r2,r9
    5948:	1447c83a 	sub	r3,r2,r17
    594c:	19400408 	cmpgei	r5,r3,16
    5950:	2800081e 	bne	r5,zero,5974 <_malloc_r+0x24c>
    5954:	1800cc0e 	bge	r3,zero,5c88 <_malloc_r+0x560>
    5958:	84000317 	ldw	r16,12(r16)
    595c:	3c00c526 	beq	r7,r16,5c74 <_malloc_r+0x54c>
    5960:	80800117 	ldw	r2,4(r16)
    5964:	1244703a 	and	r2,r2,r9
    5968:	1447c83a 	sub	r3,r2,r17
    596c:	19400410 	cmplti	r5,r3,16
    5970:	283ff81e 	bne	r5,zero,5954 <_malloc_r+0x22c>
    5974:	81000317 	ldw	r4,12(r16)
    5978:	81400217 	ldw	r5,8(r16)
    597c:	89800054 	ori	r6,r17,1
    5980:	81800115 	stw	r6,4(r16)
    5984:	29000315 	stw	r4,12(r5)
    5988:	21400215 	stw	r5,8(r4)
    598c:	8463883a 	add	r17,r16,r17
    5990:	9c400515 	stw	r17,20(r19)
    5994:	9c400415 	stw	r17,16(r19)
    5998:	19000054 	ori	r4,r3,1
    599c:	89000115 	stw	r4,4(r17)
    59a0:	8085883a 	add	r2,r16,r2
    59a4:	8a000315 	stw	r8,12(r17)
    59a8:	8a000215 	stw	r8,8(r17)
    59ac:	10c00015 	stw	r3,0(r2)
    59b0:	9009883a 	mov	r4,r18
    59b4:	000d5100 	call	d510 <__malloc_unlock>
    59b8:	80800204 	addi	r2,r16,8
    59bc:	00000306 	br	59cc <_malloc_r+0x2a4>
    59c0:	00800304 	movi	r2,12
    59c4:	90800015 	stw	r2,0(r18)
    59c8:	0005883a 	mov	r2,zero
    59cc:	dfc00917 	ldw	ra,36(sp)
    59d0:	df000817 	ldw	fp,32(sp)
    59d4:	ddc00717 	ldw	r23,28(sp)
    59d8:	dd800617 	ldw	r22,24(sp)
    59dc:	dd400517 	ldw	r21,20(sp)
    59e0:	dd000417 	ldw	r20,16(sp)
    59e4:	dcc00317 	ldw	r19,12(sp)
    59e8:	dc800217 	ldw	r18,8(sp)
    59ec:	dc400117 	ldw	r17,4(sp)
    59f0:	dc000017 	ldw	r16,0(sp)
    59f4:	dec00a04 	addi	sp,sp,40
    59f8:	f800283a 	ret
    59fc:	01408004 	movi	r5,512
    5a00:	01801004 	movi	r6,64
    5a04:	02000fc4 	movi	r8,63
    5a08:	003f8006 	br	580c <_malloc_r+0xe4>
    5a0c:	14000317 	ldw	r16,12(r2)
    5a10:	31800084 	addi	r6,r6,2
    5a14:	143f5f1e 	bne	r2,r16,5794 <_malloc_r+0x6c>
    5a18:	9c000417 	ldw	r16,16(r19)
    5a1c:	02000074 	movhi	r8,1
    5a20:	42000f04 	addi	r8,r8,60
    5a24:	823f941e 	bne	r16,r8,5878 <_malloc_r+0x150>
    5a28:	3007d0ba 	srai	r3,r6,2
    5a2c:	01000044 	movi	r4,1
    5a30:	98800117 	ldw	r2,4(r19)
    5a34:	20c8983a 	sll	r4,r4,r3
    5a38:	113fae2e 	bgeu	r2,r4,58f4 <_malloc_r+0x1cc>
    5a3c:	9c000217 	ldw	r16,8(r19)
    5a40:	00bfff04 	movi	r2,-4
    5a44:	85000117 	ldw	r20,4(r16)
    5a48:	a0ac703a 	and	r22,r20,r2
    5a4c:	b4400336 	bltu	r22,r17,5a5c <_malloc_r+0x334>
    5a50:	b445c83a 	sub	r2,r22,r17
    5a54:	10c00408 	cmpgei	r3,r2,16
    5a58:	1800561e 	bne	r3,zero,5bb4 <_malloc_r+0x48c>
    5a5c:	00800074 	movhi	r2,1
    5a60:	1085f317 	ldw	r2,6092(r2)
    5a64:	00c00074 	movhi	r3,1
    5a68:	1d0d2117 	ldw	r20,13444(r3)
    5a6c:	10bfffd8 	cmpnei	r2,r2,-1
    5a70:	85ab883a 	add	r21,r16,r22
    5a74:	8d29883a 	add	r20,r17,r20
    5a78:	1000c826 	beq	r2,zero,5d9c <_malloc_r+0x674>
    5a7c:	a50403c4 	addi	r20,r20,4111
    5a80:	00bc0004 	movi	r2,-4096
    5a84:	a0a8703a 	and	r20,r20,r2
    5a88:	a00b883a 	mov	r5,r20
    5a8c:	9009883a 	mov	r4,r18
    5a90:	00079000 	call	7900 <_sbrk_r>
    5a94:	102f883a 	mov	r23,r2
    5a98:	10bfffd8 	cmpnei	r2,r2,-1
    5a9c:	10009a26 	beq	r2,zero,5d08 <_malloc_r+0x5e0>
    5aa0:	bd409836 	bltu	r23,r21,5d04 <_malloc_r+0x5dc>
    5aa4:	00800074 	movhi	r2,1
    5aa8:	108d2b17 	ldw	r2,13484(r2)
    5aac:	00c00074 	movhi	r3,1
    5ab0:	a085883a 	add	r2,r20,r2
    5ab4:	188d2b15 	stw	r2,13484(r3)
    5ab8:	1007883a 	mov	r3,r2
    5abc:	adc0dd26 	beq	r21,r23,5e34 <_malloc_r+0x70c>
    5ac0:	00800074 	movhi	r2,1
    5ac4:	1085f317 	ldw	r2,6092(r2)
    5ac8:	10bfffd8 	cmpnei	r2,r2,-1
    5acc:	1000e026 	beq	r2,zero,5e50 <_malloc_r+0x728>
    5ad0:	bd6bc83a 	sub	r21,r23,r21
    5ad4:	a8c7883a 	add	r3,r21,r3
    5ad8:	00800074 	movhi	r2,1
    5adc:	10cd2b15 	stw	r3,13484(r2)
    5ae0:	bf0001cc 	andi	fp,r23,7
    5ae4:	e000b626 	beq	fp,zero,5dc0 <_malloc_r+0x698>
    5ae8:	bf2fc83a 	sub	r23,r23,fp
    5aec:	bdc00204 	addi	r23,r23,8
    5af0:	00840204 	movi	r2,4104
    5af4:	1705c83a 	sub	r2,r2,fp
    5af8:	bd29883a 	add	r20,r23,r20
    5afc:	1505c83a 	sub	r2,r2,r20
    5b00:	1543ffcc 	andi	r21,r2,4095
    5b04:	a80b883a 	mov	r5,r21
    5b08:	9009883a 	mov	r4,r18
    5b0c:	00079000 	call	7900 <_sbrk_r>
    5b10:	10ffffe0 	cmpeqi	r3,r2,-1
    5b14:	1800e41e 	bne	r3,zero,5ea8 <_malloc_r+0x780>
    5b18:	15c5c83a 	sub	r2,r2,r23
    5b1c:	1569883a 	add	r20,r2,r21
    5b20:	00800074 	movhi	r2,1
    5b24:	108d2b17 	ldw	r2,13484(r2)
    5b28:	9dc00215 	stw	r23,8(r19)
    5b2c:	a5000054 	ori	r20,r20,1
    5b30:	a885883a 	add	r2,r21,r2
    5b34:	00c00074 	movhi	r3,1
    5b38:	188d2b15 	stw	r2,13484(r3)
    5b3c:	bd000115 	stw	r20,4(r23)
    5b40:	84c0c626 	beq	r16,r19,5e5c <_malloc_r+0x734>
    5b44:	b0c00428 	cmpgeui	r3,r22,16
    5b48:	1800c626 	beq	r3,zero,5e64 <_malloc_r+0x73c>
    5b4c:	81000117 	ldw	r4,4(r16)
    5b50:	017ffe04 	movi	r5,-8
    5b54:	b0fffd04 	addi	r3,r22,-12
    5b58:	1946703a 	and	r3,r3,r5
    5b5c:	2100004c 	andi	r4,r4,1
    5b60:	20c8b03a 	or	r4,r4,r3
    5b64:	81000115 	stw	r4,4(r16)
    5b68:	01400144 	movi	r5,5
    5b6c:	80c9883a 	add	r4,r16,r3
    5b70:	21400115 	stw	r5,4(r4)
    5b74:	21400215 	stw	r5,8(r4)
    5b78:	18c00428 	cmpgeui	r3,r3,16
    5b7c:	1800cf1e 	bne	r3,zero,5ebc <_malloc_r+0x794>
    5b80:	bd000117 	ldw	r20,4(r23)
    5b84:	b821883a 	mov	r16,r23
    5b88:	00c00074 	movhi	r3,1
    5b8c:	18cd2017 	ldw	r3,13440(r3)
    5b90:	1880022e 	bgeu	r3,r2,5b9c <_malloc_r+0x474>
    5b94:	00c00074 	movhi	r3,1
    5b98:	188d2015 	stw	r2,13440(r3)
    5b9c:	00c00074 	movhi	r3,1
    5ba0:	18cd1f17 	ldw	r3,13436(r3)
    5ba4:	18805a2e 	bgeu	r3,r2,5d10 <_malloc_r+0x5e8>
    5ba8:	00c00074 	movhi	r3,1
    5bac:	188d1f15 	stw	r2,13436(r3)
    5bb0:	00005706 	br	5d10 <_malloc_r+0x5e8>
    5bb4:	88c00054 	ori	r3,r17,1
    5bb8:	80c00115 	stw	r3,4(r16)
    5bbc:	8463883a 	add	r17,r16,r17
    5bc0:	10800054 	ori	r2,r2,1
    5bc4:	9c400215 	stw	r17,8(r19)
    5bc8:	88800115 	stw	r2,4(r17)
    5bcc:	9009883a 	mov	r4,r18
    5bd0:	000d5100 	call	d510 <__malloc_unlock>
    5bd4:	80800204 	addi	r2,r16,8
    5bd8:	003f7c06 	br	59cc <_malloc_r+0x2a4>
    5bdc:	400d883a 	mov	r6,r8
    5be0:	003f2106 	br	5868 <_malloc_r+0x140>
    5be4:	81000317 	ldw	r4,12(r16)
    5be8:	003eee06 	br	57a4 <_malloc_r+0x7c>
    5bec:	1006d27a 	srli	r3,r2,9
    5bf0:	19000168 	cmpgeui	r4,r3,5
    5bf4:	20003e26 	beq	r4,zero,5cf0 <_malloc_r+0x5c8>
    5bf8:	19000568 	cmpgeui	r4,r3,21
    5bfc:	20007a1e 	bne	r4,zero,5de8 <_malloc_r+0x6c0>
    5c00:	19401704 	addi	r5,r3,92
    5c04:	280a90fa 	slli	r5,r5,3
    5c08:	190016c4 	addi	r4,r3,91
    5c0c:	994b883a 	add	r5,r19,r5
    5c10:	28c00017 	ldw	r3,0(r5)
    5c14:	297ffe04 	addi	r5,r5,-8
    5c18:	28c06226 	beq	r5,r3,5da4 <_malloc_r+0x67c>
    5c1c:	01ffff04 	movi	r7,-4
    5c20:	19000117 	ldw	r4,4(r3)
    5c24:	21c8703a 	and	r4,r4,r7
    5c28:	1100022e 	bgeu	r2,r4,5c34 <_malloc_r+0x50c>
    5c2c:	18c00217 	ldw	r3,8(r3)
    5c30:	28fffb1e 	bne	r5,r3,5c20 <_malloc_r+0x4f8>
    5c34:	19400317 	ldw	r5,12(r3)
    5c38:	98800117 	ldw	r2,4(r19)
    5c3c:	81400315 	stw	r5,12(r16)
    5c40:	80c00215 	stw	r3,8(r16)
    5c44:	2c000215 	stw	r16,8(r5)
    5c48:	1c000315 	stw	r16,12(r3)
    5c4c:	003f2506 	br	58e4 <_malloc_r+0x1bc>
    5c50:	10c00568 	cmpgeui	r3,r2,21
    5c54:	18003826 	beq	r3,zero,5d38 <_malloc_r+0x610>
    5c58:	10c01568 	cmpgeui	r3,r2,85
    5c5c:	1800691e 	bne	r3,zero,5e04 <_malloc_r+0x6dc>
    5c60:	8804d33a 	srli	r2,r17,12
    5c64:	11801bc4 	addi	r6,r2,111
    5c68:	12001b84 	addi	r8,r2,110
    5c6c:	300a90fa 	slli	r5,r6,3
    5c70:	003ee606 	br	580c <_malloc_r+0xe4>
    5c74:	5ac00044 	addi	r11,r11,1
    5c78:	588000cc 	andi	r2,r11,3
    5c7c:	39c00204 	addi	r7,r7,8
    5c80:	103f2d1e 	bne	r2,zero,5938 <_malloc_r+0x210>
    5c84:	00003306 	br	5d54 <_malloc_r+0x62c>
    5c88:	8085883a 	add	r2,r16,r2
    5c8c:	10c00117 	ldw	r3,4(r2)
    5c90:	81000317 	ldw	r4,12(r16)
    5c94:	81400217 	ldw	r5,8(r16)
    5c98:	18c00054 	ori	r3,r3,1
    5c9c:	10c00115 	stw	r3,4(r2)
    5ca0:	29000315 	stw	r4,12(r5)
    5ca4:	21400215 	stw	r5,8(r4)
    5ca8:	9009883a 	mov	r4,r18
    5cac:	000d5100 	call	d510 <__malloc_unlock>
    5cb0:	80800204 	addi	r2,r16,8
    5cb4:	003f4506 	br	59cc <_malloc_r+0x2a4>
    5cb8:	880cd0fa 	srli	r6,r17,3
    5cbc:	88800204 	addi	r2,r17,8
    5cc0:	003eae06 	br	577c <_malloc_r+0x54>
    5cc4:	8085883a 	add	r2,r16,r2
    5cc8:	10c00117 	ldw	r3,4(r2)
    5ccc:	9009883a 	mov	r4,r18
    5cd0:	18c00054 	ori	r3,r3,1
    5cd4:	10c00115 	stw	r3,4(r2)
    5cd8:	000d5100 	call	d510 <__malloc_unlock>
    5cdc:	80800204 	addi	r2,r16,8
    5ce0:	003f3a06 	br	59cc <_malloc_r+0x2a4>
    5ce4:	89000054 	ori	r4,r17,1
    5ce8:	81000115 	stw	r4,4(r16)
    5cec:	003f2706 	br	598c <_malloc_r+0x264>
    5cf0:	1006d1ba 	srli	r3,r2,6
    5cf4:	19400e44 	addi	r5,r3,57
    5cf8:	19000e04 	addi	r4,r3,56
    5cfc:	280a90fa 	slli	r5,r5,3
    5d00:	003fc206 	br	5c0c <_malloc_r+0x4e4>
    5d04:	84c04626 	beq	r16,r19,5e20 <_malloc_r+0x6f8>
    5d08:	9c000217 	ldw	r16,8(r19)
    5d0c:	85000117 	ldw	r20,4(r16)
    5d10:	00bfff04 	movi	r2,-4
    5d14:	a0a8703a 	and	r20,r20,r2
    5d18:	a445c83a 	sub	r2,r20,r17
    5d1c:	a4400236 	bltu	r20,r17,5d28 <_malloc_r+0x600>
    5d20:	10c00408 	cmpgei	r3,r2,16
    5d24:	183fa31e 	bne	r3,zero,5bb4 <_malloc_r+0x48c>
    5d28:	9009883a 	mov	r4,r18
    5d2c:	000d5100 	call	d510 <__malloc_unlock>
    5d30:	0005883a 	mov	r2,zero
    5d34:	003f2506 	br	59cc <_malloc_r+0x2a4>
    5d38:	11801704 	addi	r6,r2,92
    5d3c:	120016c4 	addi	r8,r2,91
    5d40:	300a90fa 	slli	r5,r6,3
    5d44:	003eb106 	br	580c <_malloc_r+0xe4>
    5d48:	50800217 	ldw	r2,8(r10)
    5d4c:	31bfffc4 	addi	r6,r6,-1
    5d50:	1280701e 	bne	r2,r10,5f14 <_malloc_r+0x7ec>
    5d54:	308000cc 	andi	r2,r6,3
    5d58:	52bffe04 	addi	r10,r10,-8
    5d5c:	103ffa1e 	bne	r2,zero,5d48 <_malloc_r+0x620>
    5d60:	98c00117 	ldw	r3,4(r19)
    5d64:	0104303a 	nor	r2,zero,r4
    5d68:	10c4703a 	and	r2,r2,r3
    5d6c:	98800115 	stw	r2,4(r19)
    5d70:	2109883a 	add	r4,r4,r4
    5d74:	113f3136 	bltu	r2,r4,5a3c <_malloc_r+0x314>
    5d78:	203f3026 	beq	r4,zero,5a3c <_malloc_r+0x314>
    5d7c:	2086703a 	and	r3,r4,r2
    5d80:	1800041e 	bne	r3,zero,5d94 <_malloc_r+0x66c>
    5d84:	2109883a 	add	r4,r4,r4
    5d88:	2086703a 	and	r3,r4,r2
    5d8c:	5ac00104 	addi	r11,r11,4
    5d90:	183ffc26 	beq	r3,zero,5d84 <_malloc_r+0x65c>
    5d94:	580d883a 	mov	r6,r11
    5d98:	003ee306 	br	5928 <_malloc_r+0x200>
    5d9c:	a5000404 	addi	r20,r20,16
    5da0:	003f3906 	br	5a88 <_malloc_r+0x360>
    5da4:	2009d0ba 	srai	r4,r4,2
    5da8:	00800044 	movi	r2,1
    5dac:	99c00117 	ldw	r7,4(r19)
    5db0:	1104983a 	sll	r2,r2,r4
    5db4:	11c4b03a 	or	r2,r2,r7
    5db8:	98800115 	stw	r2,4(r19)
    5dbc:	003f9f06 	br	5c3c <_malloc_r+0x514>
    5dc0:	bd05883a 	add	r2,r23,r20
    5dc4:	0085c83a 	sub	r2,zero,r2
    5dc8:	1543ffcc 	andi	r21,r2,4095
    5dcc:	a80b883a 	mov	r5,r21
    5dd0:	9009883a 	mov	r4,r18
    5dd4:	00079000 	call	7900 <_sbrk_r>
    5dd8:	10ffffe0 	cmpeqi	r3,r2,-1
    5ddc:	183f4e26 	beq	r3,zero,5b18 <_malloc_r+0x3f0>
    5de0:	002b883a 	mov	r21,zero
    5de4:	003f4e06 	br	5b20 <_malloc_r+0x3f8>
    5de8:	19001568 	cmpgeui	r4,r3,85
    5dec:	2000201e 	bne	r4,zero,5e70 <_malloc_r+0x748>
    5df0:	1006d33a 	srli	r3,r2,12
    5df4:	19401bc4 	addi	r5,r3,111
    5df8:	19001b84 	addi	r4,r3,110
    5dfc:	280a90fa 	slli	r5,r5,3
    5e00:	003f8206 	br	5c0c <_malloc_r+0x4e4>
    5e04:	10c05568 	cmpgeui	r3,r2,341
    5e08:	1800201e 	bne	r3,zero,5e8c <_malloc_r+0x764>
    5e0c:	8804d3fa 	srli	r2,r17,15
    5e10:	11801e04 	addi	r6,r2,120
    5e14:	12001dc4 	addi	r8,r2,119
    5e18:	300a90fa 	slli	r5,r6,3
    5e1c:	003e7b06 	br	580c <_malloc_r+0xe4>
    5e20:	00800074 	movhi	r2,1
    5e24:	10cd2b17 	ldw	r3,13484(r2)
    5e28:	a0c7883a 	add	r3,r20,r3
    5e2c:	10cd2b15 	stw	r3,13484(r2)
    5e30:	003f2306 	br	5ac0 <_malloc_r+0x398>
    5e34:	a903ffcc 	andi	r4,r21,4095
    5e38:	203f211e 	bne	r4,zero,5ac0 <_malloc_r+0x398>
    5e3c:	9c000217 	ldw	r16,8(r19)
    5e40:	b529883a 	add	r20,r22,r20
    5e44:	a5000054 	ori	r20,r20,1
    5e48:	85000115 	stw	r20,4(r16)
    5e4c:	003f4e06 	br	5b88 <_malloc_r+0x460>
    5e50:	00800074 	movhi	r2,1
    5e54:	15c5f315 	stw	r23,6092(r2)
    5e58:	003f2106 	br	5ae0 <_malloc_r+0x3b8>
    5e5c:	b821883a 	mov	r16,r23
    5e60:	003f4906 	br	5b88 <_malloc_r+0x460>
    5e64:	00800044 	movi	r2,1
    5e68:	b8800115 	stw	r2,4(r23)
    5e6c:	003fae06 	br	5d28 <_malloc_r+0x600>
    5e70:	19005568 	cmpgeui	r4,r3,341
    5e74:	2000191e 	bne	r4,zero,5edc <_malloc_r+0x7b4>
    5e78:	1006d3fa 	srli	r3,r2,15
    5e7c:	19401e04 	addi	r5,r3,120
    5e80:	19001dc4 	addi	r4,r3,119
    5e84:	280a90fa 	slli	r5,r5,3
    5e88:	003f6006 	br	5c0c <_malloc_r+0x4e4>
    5e8c:	10815568 	cmpgeui	r2,r2,1365
    5e90:	1000191e 	bne	r2,zero,5ef8 <_malloc_r+0x7d0>
    5e94:	8804d4ba 	srli	r2,r17,18
    5e98:	11801f44 	addi	r6,r2,125
    5e9c:	12001f04 	addi	r8,r2,124
    5ea0:	300a90fa 	slli	r5,r6,3
    5ea4:	003e5906 	br	580c <_malloc_r+0xe4>
    5ea8:	e73ffe04 	addi	fp,fp,-8
    5eac:	a729883a 	add	r20,r20,fp
    5eb0:	a5e9c83a 	sub	r20,r20,r23
    5eb4:	002b883a 	mov	r21,zero
    5eb8:	003f1906 	br	5b20 <_malloc_r+0x3f8>
    5ebc:	81400204 	addi	r5,r16,8
    5ec0:	9009883a 	mov	r4,r18
    5ec4:	0004c0c0 	call	4c0c <_free_r>
    5ec8:	9c000217 	ldw	r16,8(r19)
    5ecc:	00800074 	movhi	r2,1
    5ed0:	108d2b17 	ldw	r2,13484(r2)
    5ed4:	85000117 	ldw	r20,4(r16)
    5ed8:	003f2b06 	br	5b88 <_malloc_r+0x460>
    5edc:	18c15568 	cmpgeui	r3,r3,1365
    5ee0:	1800091e 	bne	r3,zero,5f08 <_malloc_r+0x7e0>
    5ee4:	1006d4ba 	srli	r3,r2,18
    5ee8:	19401f44 	addi	r5,r3,125
    5eec:	19001f04 	addi	r4,r3,124
    5ef0:	280a90fa 	slli	r5,r5,3
    5ef4:	003f4506 	br	5c0c <_malloc_r+0x4e4>
    5ef8:	0140fe04 	movi	r5,1016
    5efc:	01801fc4 	movi	r6,127
    5f00:	02001f84 	movi	r8,126
    5f04:	003e4106 	br	580c <_malloc_r+0xe4>
    5f08:	0140fe04 	movi	r5,1016
    5f0c:	01001f84 	movi	r4,126
    5f10:	003f3e06 	br	5c0c <_malloc_r+0x4e4>
    5f14:	98800117 	ldw	r2,4(r19)
    5f18:	003f9506 	br	5d70 <_malloc_r+0x648>

00005f1c <memchr>:
    5f1c:	208000cc 	andi	r2,r4,3
    5f20:	280f883a 	mov	r7,r5
    5f24:	10003526 	beq	r2,zero,5ffc <memchr+0xe0>
    5f28:	30bfffc4 	addi	r2,r6,-1
    5f2c:	30001926 	beq	r6,zero,5f94 <memchr+0x78>
    5f30:	20c00003 	ldbu	r3,0(r4)
    5f34:	29803fcc 	andi	r6,r5,255
    5f38:	30c0061e 	bne	r6,r3,5f54 <memchr+0x38>
    5f3c:	00001706 	br	5f9c <memchr+0x80>
    5f40:	10bfffc4 	addi	r2,r2,-1
    5f44:	10ffffe0 	cmpeqi	r3,r2,-1
    5f48:	1800121e 	bne	r3,zero,5f94 <memchr+0x78>
    5f4c:	20c00003 	ldbu	r3,0(r4)
    5f50:	19801226 	beq	r3,r6,5f9c <memchr+0x80>
    5f54:	21000044 	addi	r4,r4,1
    5f58:	20c000cc 	andi	r3,r4,3
    5f5c:	183ff81e 	bne	r3,zero,5f40 <memchr+0x24>
    5f60:	10c00128 	cmpgeui	r3,r2,4
    5f64:	18000f1e 	bne	r3,zero,5fa4 <memchr+0x88>
    5f68:	10000a26 	beq	r2,zero,5f94 <memchr+0x78>
    5f6c:	20c00003 	ldbu	r3,0(r4)
    5f70:	29403fcc 	andi	r5,r5,255
    5f74:	19400926 	beq	r3,r5,5f9c <memchr+0x80>
    5f78:	2085883a 	add	r2,r4,r2
    5f7c:	39403fcc 	andi	r5,r7,255
    5f80:	00000206 	br	5f8c <memchr+0x70>
    5f84:	20c00003 	ldbu	r3,0(r4)
    5f88:	19400426 	beq	r3,r5,5f9c <memchr+0x80>
    5f8c:	21000044 	addi	r4,r4,1
    5f90:	113ffc1e 	bne	r2,r4,5f84 <memchr+0x68>
    5f94:	0005883a 	mov	r2,zero
    5f98:	f800283a 	ret
    5f9c:	2005883a 	mov	r2,r4
    5fa0:	f800283a 	ret
    5fa4:	280c923a 	slli	r6,r5,8
    5fa8:	2a403fcc 	andi	r9,r5,255
    5fac:	02bfbff4 	movhi	r10,65279
    5fb0:	31bfffcc 	andi	r6,r6,65535
    5fb4:	3246b03a 	or	r3,r6,r9
    5fb8:	1812943a 	slli	r9,r3,16
    5fbc:	02202074 	movhi	r8,32897
    5fc0:	52bfbfc4 	addi	r10,r10,-257
    5fc4:	48d2b03a 	or	r9,r9,r3
    5fc8:	42202004 	addi	r8,r8,-32640
    5fcc:	20c00017 	ldw	r3,0(r4)
    5fd0:	48c6f03a 	xor	r3,r9,r3
    5fd4:	1a8d883a 	add	r6,r3,r10
    5fd8:	00c6303a 	nor	r3,zero,r3
    5fdc:	30c6703a 	and	r3,r6,r3
    5fe0:	1a06703a 	and	r3,r3,r8
    5fe4:	183fe11e 	bne	r3,zero,5f6c <memchr+0x50>
    5fe8:	10bfff04 	addi	r2,r2,-4
    5fec:	10c00128 	cmpgeui	r3,r2,4
    5ff0:	21000104 	addi	r4,r4,4
    5ff4:	183ff51e 	bne	r3,zero,5fcc <memchr+0xb0>
    5ff8:	003fdb06 	br	5f68 <memchr+0x4c>
    5ffc:	3005883a 	mov	r2,r6
    6000:	003fd706 	br	5f60 <memchr+0x44>

00006004 <memcpy>:
    6004:	30c00430 	cmpltui	r3,r6,16
    6008:	2005883a 	mov	r2,r4
    600c:	18002d1e 	bne	r3,zero,60c4 <memcpy+0xc0>
    6010:	2906b03a 	or	r3,r5,r4
    6014:	18c000cc 	andi	r3,r3,3
    6018:	1800351e 	bne	r3,zero,60f0 <memcpy+0xec>
    601c:	32fffc04 	addi	r11,r6,-16
    6020:	5816d13a 	srli	r11,r11,4
    6024:	2007883a 	mov	r3,r4
    6028:	280f883a 	mov	r7,r5
    602c:	5ac00044 	addi	r11,r11,1
    6030:	5816913a 	slli	r11,r11,4
    6034:	22c9883a 	add	r4,r4,r11
    6038:	3a000017 	ldw	r8,0(r7)
    603c:	3a800117 	ldw	r10,4(r7)
    6040:	3a400217 	ldw	r9,8(r7)
    6044:	39c00404 	addi	r7,r7,16
    6048:	1a000015 	stw	r8,0(r3)
    604c:	3a3fff17 	ldw	r8,-4(r7)
    6050:	1a800115 	stw	r10,4(r3)
    6054:	1a400215 	stw	r9,8(r3)
    6058:	18c00404 	addi	r3,r3,16
    605c:	1a3fff15 	stw	r8,-4(r3)
    6060:	20fff51e 	bne	r4,r3,6038 <memcpy+0x34>
    6064:	3100030c 	andi	r4,r6,12
    6068:	2acb883a 	add	r5,r5,r11
    606c:	320003cc 	andi	r8,r6,15
    6070:	20002226 	beq	r4,zero,60fc <memcpy+0xf8>
    6074:	2809883a 	mov	r4,r5
    6078:	1813883a 	mov	r9,r3
    607c:	21000104 	addi	r4,r4,4
    6080:	22bfff17 	ldw	r10,-4(r4)
    6084:	410fc83a 	sub	r7,r8,r4
    6088:	4a400104 	addi	r9,r9,4
    608c:	29cf883a 	add	r7,r5,r7
    6090:	4abfff15 	stw	r10,-4(r9)
    6094:	39c00128 	cmpgeui	r7,r7,4
    6098:	383ff81e 	bne	r7,zero,607c <memcpy+0x78>
    609c:	413fff04 	addi	r4,r8,-4
    60a0:	2008d0ba 	srli	r4,r4,2
    60a4:	318000cc 	andi	r6,r6,3
    60a8:	31ffffc4 	addi	r7,r6,-1
    60ac:	21000044 	addi	r4,r4,1
    60b0:	200890ba 	slli	r4,r4,2
    60b4:	1907883a 	add	r3,r3,r4
    60b8:	290b883a 	add	r5,r5,r4
    60bc:	3000041e 	bne	r6,zero,60d0 <memcpy+0xcc>
    60c0:	f800283a 	ret
    60c4:	2007883a 	mov	r3,r4
    60c8:	31ffffc4 	addi	r7,r6,-1
    60cc:	303ffc26 	beq	r6,zero,60c0 <memcpy+0xbc>
    60d0:	39c00044 	addi	r7,r7,1
    60d4:	19cf883a 	add	r7,r3,r7
    60d8:	29400044 	addi	r5,r5,1
    60dc:	29bfffc3 	ldbu	r6,-1(r5)
    60e0:	18c00044 	addi	r3,r3,1
    60e4:	19bfffc5 	stb	r6,-1(r3)
    60e8:	19fffb1e 	bne	r3,r7,60d8 <memcpy+0xd4>
    60ec:	f800283a 	ret
    60f0:	31ffffc4 	addi	r7,r6,-1
    60f4:	2007883a 	mov	r3,r4
    60f8:	003ff506 	br	60d0 <memcpy+0xcc>
    60fc:	400d883a 	mov	r6,r8
    6100:	003ff106 	br	60c8 <memcpy+0xc4>

00006104 <memmove>:
    6104:	2005883a 	mov	r2,r4
    6108:	29000a2e 	bgeu	r5,r4,6134 <memmove+0x30>
    610c:	2989883a 	add	r4,r5,r6
    6110:	1100082e 	bgeu	r2,r4,6134 <memmove+0x30>
    6114:	1187883a 	add	r3,r2,r6
    6118:	30003e26 	beq	r6,zero,6214 <memmove+0x110>
    611c:	213fffc4 	addi	r4,r4,-1
    6120:	21400003 	ldbu	r5,0(r4)
    6124:	18ffffc4 	addi	r3,r3,-1
    6128:	19400005 	stb	r5,0(r3)
    612c:	10fffb1e 	bne	r2,r3,611c <memmove+0x18>
    6130:	f800283a 	ret
    6134:	30c00430 	cmpltui	r3,r6,16
    6138:	18000b26 	beq	r3,zero,6168 <memmove+0x64>
    613c:	1007883a 	mov	r3,r2
    6140:	31ffffc4 	addi	r7,r6,-1
    6144:	30003726 	beq	r6,zero,6224 <memmove+0x120>
    6148:	39c00044 	addi	r7,r7,1
    614c:	29cf883a 	add	r7,r5,r7
    6150:	29400044 	addi	r5,r5,1
    6154:	29bfffc3 	ldbu	r6,-1(r5)
    6158:	18c00044 	addi	r3,r3,1
    615c:	19bfffc5 	stb	r6,-1(r3)
    6160:	29fffb1e 	bne	r5,r7,6150 <memmove+0x4c>
    6164:	f800283a 	ret
    6168:	2886b03a 	or	r3,r5,r2
    616c:	18c000cc 	andi	r3,r3,3
    6170:	1800291e 	bne	r3,zero,6218 <memmove+0x114>
    6174:	327ffc04 	addi	r9,r6,-16
    6178:	4812d13a 	srli	r9,r9,4
    617c:	280f883a 	mov	r7,r5
    6180:	1007883a 	mov	r3,r2
    6184:	4a400044 	addi	r9,r9,1
    6188:	4812913a 	slli	r9,r9,4
    618c:	1251883a 	add	r8,r2,r9
    6190:	39000017 	ldw	r4,0(r7)
    6194:	18c00404 	addi	r3,r3,16
    6198:	39c00404 	addi	r7,r7,16
    619c:	193ffc15 	stw	r4,-16(r3)
    61a0:	393ffd17 	ldw	r4,-12(r7)
    61a4:	193ffd15 	stw	r4,-12(r3)
    61a8:	393ffe17 	ldw	r4,-8(r7)
    61ac:	193ffe15 	stw	r4,-8(r3)
    61b0:	393fff17 	ldw	r4,-4(r7)
    61b4:	193fff15 	stw	r4,-4(r3)
    61b8:	40fff51e 	bne	r8,r3,6190 <memmove+0x8c>
    61bc:	3100030c 	andi	r4,r6,12
    61c0:	2a4b883a 	add	r5,r5,r9
    61c4:	320003cc 	andi	r8,r6,15
    61c8:	20001726 	beq	r4,zero,6228 <memmove+0x124>
    61cc:	2813883a 	mov	r9,r5
    61d0:	180f883a 	mov	r7,r3
    61d4:	4a400104 	addi	r9,r9,4
    61d8:	39c00104 	addi	r7,r7,4
    61dc:	4abfff17 	ldw	r10,-4(r9)
    61e0:	41c9c83a 	sub	r4,r8,r7
    61e4:	1909883a 	add	r4,r3,r4
    61e8:	3abfff15 	stw	r10,-4(r7)
    61ec:	21000128 	cmpgeui	r4,r4,4
    61f0:	203ff81e 	bne	r4,zero,61d4 <memmove+0xd0>
    61f4:	413fff04 	addi	r4,r8,-4
    61f8:	2008d0ba 	srli	r4,r4,2
    61fc:	318000cc 	andi	r6,r6,3
    6200:	21000044 	addi	r4,r4,1
    6204:	200890ba 	slli	r4,r4,2
    6208:	1907883a 	add	r3,r3,r4
    620c:	290b883a 	add	r5,r5,r4
    6210:	003fcb06 	br	6140 <memmove+0x3c>
    6214:	f800283a 	ret
    6218:	31ffffc4 	addi	r7,r6,-1
    621c:	1007883a 	mov	r3,r2
    6220:	003fc906 	br	6148 <memmove+0x44>
    6224:	f800283a 	ret
    6228:	400d883a 	mov	r6,r8
    622c:	003fc406 	br	6140 <memmove+0x3c>

00006230 <memset>:
    6230:	20c000cc 	andi	r3,r4,3
    6234:	2005883a 	mov	r2,r4
    6238:	18003626 	beq	r3,zero,6314 <memset+0xe4>
    623c:	31ffffc4 	addi	r7,r6,-1
    6240:	30003326 	beq	r6,zero,6310 <memset+0xe0>
    6244:	2811883a 	mov	r8,r5
    6248:	2007883a 	mov	r3,r4
    624c:	00000306 	br	625c <memset+0x2c>
    6250:	39ffffc4 	addi	r7,r7,-1
    6254:	39bfffe0 	cmpeqi	r6,r7,-1
    6258:	30002d1e 	bne	r6,zero,6310 <memset+0xe0>
    625c:	18c00044 	addi	r3,r3,1
    6260:	1a3fffc5 	stb	r8,-1(r3)
    6264:	198000cc 	andi	r6,r3,3
    6268:	303ff91e 	bne	r6,zero,6250 <memset+0x20>
    626c:	39000130 	cmpltui	r4,r7,4
    6270:	2000221e 	bne	r4,zero,62fc <memset+0xcc>
    6274:	29003fcc 	andi	r4,r5,255
    6278:	200c923a 	slli	r6,r4,8
    627c:	3a000430 	cmpltui	r8,r7,16
    6280:	3108b03a 	or	r4,r6,r4
    6284:	200c943a 	slli	r6,r4,16
    6288:	310cb03a 	or	r6,r6,r4
    628c:	40000e1e 	bne	r8,zero,62c8 <memset+0x98>
    6290:	3a3ffc04 	addi	r8,r7,-16
    6294:	4010d13a 	srli	r8,r8,4
    6298:	42000044 	addi	r8,r8,1
    629c:	4010913a 	slli	r8,r8,4
    62a0:	1a11883a 	add	r8,r3,r8
    62a4:	19800015 	stw	r6,0(r3)
    62a8:	19800115 	stw	r6,4(r3)
    62ac:	19800215 	stw	r6,8(r3)
    62b0:	18c00404 	addi	r3,r3,16
    62b4:	19bfff15 	stw	r6,-4(r3)
    62b8:	40fffa1e 	bne	r8,r3,62a4 <memset+0x74>
    62bc:	3900030c 	andi	r4,r7,12
    62c0:	39c003cc 	andi	r7,r7,15
    62c4:	20000d26 	beq	r4,zero,62fc <memset+0xcc>
    62c8:	1809883a 	mov	r4,r3
    62cc:	21000104 	addi	r4,r4,4
    62d0:	3911c83a 	sub	r8,r7,r4
    62d4:	1a11883a 	add	r8,r3,r8
    62d8:	21bfff15 	stw	r6,-4(r4)
    62dc:	42000128 	cmpgeui	r8,r8,4
    62e0:	403ffa1e 	bne	r8,zero,62cc <memset+0x9c>
    62e4:	393fff04 	addi	r4,r7,-4
    62e8:	2008d0ba 	srli	r4,r4,2
    62ec:	39c000cc 	andi	r7,r7,3
    62f0:	21000044 	addi	r4,r4,1
    62f4:	200890ba 	slli	r4,r4,2
    62f8:	1907883a 	add	r3,r3,r4
    62fc:	38000426 	beq	r7,zero,6310 <memset+0xe0>
    6300:	19cf883a 	add	r7,r3,r7
    6304:	18c00044 	addi	r3,r3,1
    6308:	197fffc5 	stb	r5,-1(r3)
    630c:	38fffd1e 	bne	r7,r3,6304 <memset+0xd4>
    6310:	f800283a 	ret
    6314:	2007883a 	mov	r3,r4
    6318:	300f883a 	mov	r7,r6
    631c:	003fd306 	br	626c <memset+0x3c>

00006320 <_Balloc>:
    6320:	20801317 	ldw	r2,76(r4)
    6324:	defffc04 	addi	sp,sp,-16
    6328:	dc400115 	stw	r17,4(sp)
    632c:	dc000015 	stw	r16,0(sp)
    6330:	dfc00315 	stw	ra,12(sp)
    6334:	dc800215 	stw	r18,8(sp)
    6338:	2021883a 	mov	r16,r4
    633c:	2823883a 	mov	r17,r5
    6340:	10000e26 	beq	r2,zero,637c <_Balloc+0x5c>
    6344:	880690ba 	slli	r3,r17,2
    6348:	10c7883a 	add	r3,r2,r3
    634c:	18800017 	ldw	r2,0(r3)
    6350:	10001126 	beq	r2,zero,6398 <_Balloc+0x78>
    6354:	11000017 	ldw	r4,0(r2)
    6358:	19000015 	stw	r4,0(r3)
    635c:	10000415 	stw	zero,16(r2)
    6360:	10000315 	stw	zero,12(r2)
    6364:	dfc00317 	ldw	ra,12(sp)
    6368:	dc800217 	ldw	r18,8(sp)
    636c:	dc400117 	ldw	r17,4(sp)
    6370:	dc000017 	ldw	r16,0(sp)
    6374:	dec00404 	addi	sp,sp,16
    6378:	f800283a 	ret
    637c:	01800844 	movi	r6,33
    6380:	01400104 	movi	r5,4
    6384:	00090740 	call	9074 <_calloc_r>
    6388:	80801315 	stw	r2,76(r16)
    638c:	103fed1e 	bne	r2,zero,6344 <_Balloc+0x24>
    6390:	0005883a 	mov	r2,zero
    6394:	003ff306 	br	6364 <_Balloc+0x44>
    6398:	04800044 	movi	r18,1
    639c:	9464983a 	sll	r18,r18,r17
    63a0:	01400044 	movi	r5,1
    63a4:	8009883a 	mov	r4,r16
    63a8:	91800144 	addi	r6,r18,5
    63ac:	300c90ba 	slli	r6,r6,2
    63b0:	00090740 	call	9074 <_calloc_r>
    63b4:	103ff626 	beq	r2,zero,6390 <_Balloc+0x70>
    63b8:	14400115 	stw	r17,4(r2)
    63bc:	14800215 	stw	r18,8(r2)
    63c0:	003fe606 	br	635c <_Balloc+0x3c>

000063c4 <_Bfree>:
    63c4:	28000726 	beq	r5,zero,63e4 <_Bfree+0x20>
    63c8:	28c00117 	ldw	r3,4(r5)
    63cc:	20801317 	ldw	r2,76(r4)
    63d0:	180690ba 	slli	r3,r3,2
    63d4:	10c5883a 	add	r2,r2,r3
    63d8:	10c00017 	ldw	r3,0(r2)
    63dc:	28c00015 	stw	r3,0(r5)
    63e0:	11400015 	stw	r5,0(r2)
    63e4:	f800283a 	ret

000063e8 <__multadd>:
    63e8:	defff704 	addi	sp,sp,-36
    63ec:	dcc00315 	stw	r19,12(sp)
    63f0:	2cc00417 	ldw	r19,16(r5)
    63f4:	ddc00715 	stw	r23,28(sp)
    63f8:	dd800615 	stw	r22,24(sp)
    63fc:	dd400515 	stw	r21,20(sp)
    6400:	dd000415 	stw	r20,16(sp)
    6404:	dc800215 	stw	r18,8(sp)
    6408:	dc400115 	stw	r17,4(sp)
    640c:	dfc00815 	stw	ra,32(sp)
    6410:	dc000015 	stw	r16,0(sp)
    6414:	2829883a 	mov	r20,r5
    6418:	202b883a 	mov	r21,r4
    641c:	3025883a 	mov	r18,r6
    6420:	3823883a 	mov	r17,r7
    6424:	2d800504 	addi	r22,r5,20
    6428:	002f883a 	mov	r23,zero
    642c:	b4000017 	ldw	r16,0(r22)
    6430:	900b883a 	mov	r5,r18
    6434:	b5800104 	addi	r22,r22,4
    6438:	813fffcc 	andi	r4,r16,65535
    643c:	000a5dc0 	call	a5dc <__mulsi3>
    6440:	8008d43a 	srli	r4,r16,16
    6444:	900b883a 	mov	r5,r18
    6448:	1461883a 	add	r16,r2,r17
    644c:	000a5dc0 	call	a5dc <__mulsi3>
    6450:	800ed43a 	srli	r7,r16,16
    6454:	843fffcc 	andi	r16,r16,65535
    6458:	bdc00044 	addi	r23,r23,1
    645c:	11c5883a 	add	r2,r2,r7
    6460:	1006943a 	slli	r3,r2,16
    6464:	1022d43a 	srli	r17,r2,16
    6468:	1c21883a 	add	r16,r3,r16
    646c:	b43fff15 	stw	r16,-4(r22)
    6470:	bcffee16 	blt	r23,r19,642c <__multadd+0x44>
    6474:	88000826 	beq	r17,zero,6498 <__multadd+0xb0>
    6478:	a0800217 	ldw	r2,8(r20)
    647c:	9880120e 	bge	r19,r2,64c8 <__multadd+0xe0>
    6480:	98800144 	addi	r2,r19,5
    6484:	100490ba 	slli	r2,r2,2
    6488:	9cc00044 	addi	r19,r19,1
    648c:	a085883a 	add	r2,r20,r2
    6490:	14400015 	stw	r17,0(r2)
    6494:	a4c00415 	stw	r19,16(r20)
    6498:	a005883a 	mov	r2,r20
    649c:	dfc00817 	ldw	ra,32(sp)
    64a0:	ddc00717 	ldw	r23,28(sp)
    64a4:	dd800617 	ldw	r22,24(sp)
    64a8:	dd400517 	ldw	r21,20(sp)
    64ac:	dd000417 	ldw	r20,16(sp)
    64b0:	dcc00317 	ldw	r19,12(sp)
    64b4:	dc800217 	ldw	r18,8(sp)
    64b8:	dc400117 	ldw	r17,4(sp)
    64bc:	dc000017 	ldw	r16,0(sp)
    64c0:	dec00904 	addi	sp,sp,36
    64c4:	f800283a 	ret
    64c8:	a1400117 	ldw	r5,4(r20)
    64cc:	a809883a 	mov	r4,r21
    64d0:	29400044 	addi	r5,r5,1
    64d4:	00063200 	call	6320 <_Balloc>
    64d8:	a1800417 	ldw	r6,16(r20)
    64dc:	a1400304 	addi	r5,r20,12
    64e0:	11000304 	addi	r4,r2,12
    64e4:	31800084 	addi	r6,r6,2
    64e8:	300c90ba 	slli	r6,r6,2
    64ec:	1021883a 	mov	r16,r2
    64f0:	00060040 	call	6004 <memcpy>
    64f4:	a0000926 	beq	r20,zero,651c <__multadd+0x134>
    64f8:	a0c00117 	ldw	r3,4(r20)
    64fc:	a8801317 	ldw	r2,76(r21)
    6500:	180690ba 	slli	r3,r3,2
    6504:	10c5883a 	add	r2,r2,r3
    6508:	10c00017 	ldw	r3,0(r2)
    650c:	a0c00015 	stw	r3,0(r20)
    6510:	15000015 	stw	r20,0(r2)
    6514:	8029883a 	mov	r20,r16
    6518:	003fd906 	br	6480 <__multadd+0x98>
    651c:	8029883a 	mov	r20,r16
    6520:	003fd706 	br	6480 <__multadd+0x98>

00006524 <__s2b>:
    6524:	defff904 	addi	sp,sp,-28
    6528:	dc800215 	stw	r18,8(sp)
    652c:	dc000015 	stw	r16,0(sp)
    6530:	2025883a 	mov	r18,r4
    6534:	2821883a 	mov	r16,r5
    6538:	39000204 	addi	r4,r7,8
    653c:	01400244 	movi	r5,9
    6540:	dcc00315 	stw	r19,12(sp)
    6544:	dc400115 	stw	r17,4(sp)
    6548:	dfc00615 	stw	ra,24(sp)
    654c:	3823883a 	mov	r17,r7
    6550:	dd400515 	stw	r21,20(sp)
    6554:	dd000415 	stw	r20,16(sp)
    6558:	3027883a 	mov	r19,r6
    655c:	000049c0 	call	49c <__divsi3>
    6560:	88c00290 	cmplti	r3,r17,10
    6564:	1800311e 	bne	r3,zero,662c <__s2b+0x108>
    6568:	00c00044 	movi	r3,1
    656c:	000b883a 	mov	r5,zero
    6570:	18c7883a 	add	r3,r3,r3
    6574:	29400044 	addi	r5,r5,1
    6578:	18bffd16 	blt	r3,r2,6570 <__s2b+0x4c>
    657c:	9009883a 	mov	r4,r18
    6580:	00063200 	call	6320 <_Balloc>
    6584:	d8c00717 	ldw	r3,28(sp)
    6588:	10c00515 	stw	r3,20(r2)
    658c:	00c00044 	movi	r3,1
    6590:	10c00415 	stw	r3,16(r2)
    6594:	98c00290 	cmplti	r3,r19,10
    6598:	1800211e 	bne	r3,zero,6620 <__s2b+0xfc>
    659c:	85400244 	addi	r21,r16,9
    65a0:	84e9883a 	add	r20,r16,r19
    65a4:	a821883a 	mov	r16,r21
    65a8:	84000044 	addi	r16,r16,1
    65ac:	81ffffc7 	ldb	r7,-1(r16)
    65b0:	01800284 	movi	r6,10
    65b4:	100b883a 	mov	r5,r2
    65b8:	39fff404 	addi	r7,r7,-48
    65bc:	9009883a 	mov	r4,r18
    65c0:	00063e80 	call	63e8 <__multadd>
    65c4:	a43ff81e 	bne	r20,r16,65a8 <__s2b+0x84>
    65c8:	9c3ffe04 	addi	r16,r19,-8
    65cc:	ac21883a 	add	r16,r21,r16
    65d0:	9c400a0e 	bge	r19,r17,65fc <__s2b+0xd8>
    65d4:	8ce3c83a 	sub	r17,r17,r19
    65d8:	8463883a 	add	r17,r16,r17
    65dc:	84000044 	addi	r16,r16,1
    65e0:	81ffffc7 	ldb	r7,-1(r16)
    65e4:	01800284 	movi	r6,10
    65e8:	100b883a 	mov	r5,r2
    65ec:	39fff404 	addi	r7,r7,-48
    65f0:	9009883a 	mov	r4,r18
    65f4:	00063e80 	call	63e8 <__multadd>
    65f8:	8c3ff81e 	bne	r17,r16,65dc <__s2b+0xb8>
    65fc:	dfc00617 	ldw	ra,24(sp)
    6600:	dd400517 	ldw	r21,20(sp)
    6604:	dd000417 	ldw	r20,16(sp)
    6608:	dcc00317 	ldw	r19,12(sp)
    660c:	dc800217 	ldw	r18,8(sp)
    6610:	dc400117 	ldw	r17,4(sp)
    6614:	dc000017 	ldw	r16,0(sp)
    6618:	dec00704 	addi	sp,sp,28
    661c:	f800283a 	ret
    6620:	84000284 	addi	r16,r16,10
    6624:	04c00244 	movi	r19,9
    6628:	003fe906 	br	65d0 <__s2b+0xac>
    662c:	000b883a 	mov	r5,zero
    6630:	003fd206 	br	657c <__s2b+0x58>

00006634 <__hi0bits>:
    6634:	20bfffec 	andhi	r2,r4,65535
    6638:	1000131e 	bne	r2,zero,6688 <__hi0bits+0x54>
    663c:	2008943a 	slli	r4,r4,16
    6640:	00800404 	movi	r2,16
    6644:	20ffc02c 	andhi	r3,r4,65280
    6648:	1800021e 	bne	r3,zero,6654 <__hi0bits+0x20>
    664c:	2008923a 	slli	r4,r4,8
    6650:	10800204 	addi	r2,r2,8
    6654:	20fc002c 	andhi	r3,r4,61440
    6658:	1800021e 	bne	r3,zero,6664 <__hi0bits+0x30>
    665c:	2008913a 	slli	r4,r4,4
    6660:	10800104 	addi	r2,r2,4
    6664:	20f0002c 	andhi	r3,r4,49152
    6668:	1800021e 	bne	r3,zero,6674 <__hi0bits+0x40>
    666c:	200890ba 	slli	r4,r4,2
    6670:	10800084 	addi	r2,r2,2
    6674:	20000316 	blt	r4,zero,6684 <__hi0bits+0x50>
    6678:	2110002c 	andhi	r4,r4,16384
    667c:	10800044 	addi	r2,r2,1
    6680:	20000326 	beq	r4,zero,6690 <__hi0bits+0x5c>
    6684:	f800283a 	ret
    6688:	0005883a 	mov	r2,zero
    668c:	003fed06 	br	6644 <__hi0bits+0x10>
    6690:	00800804 	movi	r2,32
    6694:	f800283a 	ret

00006698 <__lo0bits>:
    6698:	20c00017 	ldw	r3,0(r4)
    669c:	188001cc 	andi	r2,r3,7
    66a0:	10000826 	beq	r2,zero,66c4 <__lo0bits+0x2c>
    66a4:	1880004c 	andi	r2,r3,1
    66a8:	10001f1e 	bne	r2,zero,6728 <__lo0bits+0x90>
    66ac:	1880008c 	andi	r2,r3,2
    66b0:	10002126 	beq	r2,zero,6738 <__lo0bits+0xa0>
    66b4:	1806d07a 	srli	r3,r3,1
    66b8:	00800044 	movi	r2,1
    66bc:	20c00015 	stw	r3,0(r4)
    66c0:	f800283a 	ret
    66c4:	18bfffcc 	andi	r2,r3,65535
    66c8:	1000151e 	bne	r2,zero,6720 <__lo0bits+0x88>
    66cc:	1806d43a 	srli	r3,r3,16
    66d0:	00800404 	movi	r2,16
    66d4:	19403fcc 	andi	r5,r3,255
    66d8:	2800021e 	bne	r5,zero,66e4 <__lo0bits+0x4c>
    66dc:	1806d23a 	srli	r3,r3,8
    66e0:	10800204 	addi	r2,r2,8
    66e4:	194003cc 	andi	r5,r3,15
    66e8:	2800021e 	bne	r5,zero,66f4 <__lo0bits+0x5c>
    66ec:	1806d13a 	srli	r3,r3,4
    66f0:	10800104 	addi	r2,r2,4
    66f4:	194000cc 	andi	r5,r3,3
    66f8:	2800021e 	bne	r5,zero,6704 <__lo0bits+0x6c>
    66fc:	1806d0ba 	srli	r3,r3,2
    6700:	10800084 	addi	r2,r2,2
    6704:	1940004c 	andi	r5,r3,1
    6708:	2800031e 	bne	r5,zero,6718 <__lo0bits+0x80>
    670c:	1806d07a 	srli	r3,r3,1
    6710:	10800044 	addi	r2,r2,1
    6714:	18000626 	beq	r3,zero,6730 <__lo0bits+0x98>
    6718:	20c00015 	stw	r3,0(r4)
    671c:	f800283a 	ret
    6720:	0005883a 	mov	r2,zero
    6724:	003feb06 	br	66d4 <__lo0bits+0x3c>
    6728:	0005883a 	mov	r2,zero
    672c:	f800283a 	ret
    6730:	00800804 	movi	r2,32
    6734:	f800283a 	ret
    6738:	1806d0ba 	srli	r3,r3,2
    673c:	00800084 	movi	r2,2
    6740:	20c00015 	stw	r3,0(r4)
    6744:	f800283a 	ret

00006748 <__i2b>:
    6748:	defffe04 	addi	sp,sp,-8
    674c:	dc000015 	stw	r16,0(sp)
    6750:	2821883a 	mov	r16,r5
    6754:	01400044 	movi	r5,1
    6758:	dfc00115 	stw	ra,4(sp)
    675c:	00063200 	call	6320 <_Balloc>
    6760:	01000044 	movi	r4,1
    6764:	14000515 	stw	r16,20(r2)
    6768:	11000415 	stw	r4,16(r2)
    676c:	dfc00117 	ldw	ra,4(sp)
    6770:	dc000017 	ldw	r16,0(sp)
    6774:	dec00204 	addi	sp,sp,8
    6778:	f800283a 	ret

0000677c <__multiply>:
    677c:	defff104 	addi	sp,sp,-60
    6780:	dd800b15 	stw	r22,44(sp)
    6784:	dc400615 	stw	r17,24(sp)
    6788:	2d800417 	ldw	r22,16(r5)
    678c:	34400417 	ldw	r17,16(r6)
    6790:	ddc00c15 	stw	r23,48(sp)
    6794:	dc800715 	stw	r18,28(sp)
    6798:	dfc00e15 	stw	ra,56(sp)
    679c:	df000d15 	stw	fp,52(sp)
    67a0:	dd400a15 	stw	r21,40(sp)
    67a4:	dd000915 	stw	r20,36(sp)
    67a8:	dcc00815 	stw	r19,32(sp)
    67ac:	dc000515 	stw	r16,20(sp)
    67b0:	2825883a 	mov	r18,r5
    67b4:	302f883a 	mov	r23,r6
    67b8:	b4400516 	blt	r22,r17,67d0 <__multiply+0x54>
    67bc:	8807883a 	mov	r3,r17
    67c0:	282f883a 	mov	r23,r5
    67c4:	b023883a 	mov	r17,r22
    67c8:	3025883a 	mov	r18,r6
    67cc:	182d883a 	mov	r22,r3
    67d0:	b8800217 	ldw	r2,8(r23)
    67d4:	8da9883a 	add	r20,r17,r22
    67d8:	b9400117 	ldw	r5,4(r23)
    67dc:	1500010e 	bge	r2,r20,67e4 <__multiply+0x68>
    67e0:	29400044 	addi	r5,r5,1
    67e4:	a02690ba 	slli	r19,r20,2
    67e8:	00063200 	call	6320 <_Balloc>
    67ec:	10c00504 	addi	r3,r2,20
    67f0:	1cc9883a 	add	r4,r3,r19
    67f4:	d8800415 	stw	r2,16(sp)
    67f8:	d8c00015 	stw	r3,0(sp)
    67fc:	d9000115 	stw	r4,4(sp)
    6800:	1805883a 	mov	r2,r3
    6804:	1900042e 	bgeu	r3,r4,6818 <__multiply+0x9c>
    6808:	d8c00117 	ldw	r3,4(sp)
    680c:	10000015 	stw	zero,0(r2)
    6810:	10800104 	addi	r2,r2,4
    6814:	10fffc36 	bltu	r2,r3,6808 <__multiply+0x8c>
    6818:	b02c90ba 	slli	r22,r22,2
    681c:	882290ba 	slli	r17,r17,2
    6820:	94800504 	addi	r18,r18,20
    6824:	b8800504 	addi	r2,r23,20
    6828:	9587883a 	add	r3,r18,r22
    682c:	d8800315 	stw	r2,12(sp)
    6830:	d8c00215 	stw	r3,8(sp)
    6834:	1463883a 	add	r17,r2,r17
    6838:	90c00936 	bltu	r18,r3,6860 <__multiply+0xe4>
    683c:	00004606 	br	6958 <__multiply+0x1dc>
    6840:	8020d43a 	srli	r16,r16,16
    6844:	8000271e 	bne	r16,zero,68e4 <__multiply+0x168>
    6848:	d8800017 	ldw	r2,0(sp)
    684c:	94800104 	addi	r18,r18,4
    6850:	10800104 	addi	r2,r2,4
    6854:	d8800015 	stw	r2,0(sp)
    6858:	d8800217 	ldw	r2,8(sp)
    685c:	90803e2e 	bgeu	r18,r2,6958 <__multiply+0x1dc>
    6860:	94000017 	ldw	r16,0(r18)
    6864:	873fffcc 	andi	fp,r16,65535
    6868:	e03ff526 	beq	fp,zero,6840 <__multiply+0xc4>
    686c:	dcc00017 	ldw	r19,0(sp)
    6870:	dd800317 	ldw	r22,12(sp)
    6874:	002b883a 	mov	r21,zero
    6878:	b5c00017 	ldw	r23,0(r22)
    687c:	9c000017 	ldw	r16,0(r19)
    6880:	e00b883a 	mov	r5,fp
    6884:	b93fffcc 	andi	r4,r23,65535
    6888:	000a5dc0 	call	a5dc <__mulsi3>
    688c:	b808d43a 	srli	r4,r23,16
    6890:	80ffffcc 	andi	r3,r16,65535
    6894:	10c5883a 	add	r2,r2,r3
    6898:	e00b883a 	mov	r5,fp
    689c:	156b883a 	add	r21,r2,r21
    68a0:	8020d43a 	srli	r16,r16,16
    68a4:	000a5dc0 	call	a5dc <__mulsi3>
    68a8:	a808d43a 	srli	r4,r21,16
    68ac:	1405883a 	add	r2,r2,r16
    68b0:	a8ffffcc 	andi	r3,r21,65535
    68b4:	1105883a 	add	r2,r2,r4
    68b8:	1008943a 	slli	r4,r2,16
    68bc:	9cc00104 	addi	r19,r19,4
    68c0:	b5800104 	addi	r22,r22,4
    68c4:	20c6b03a 	or	r3,r4,r3
    68c8:	98ffff15 	stw	r3,-4(r19)
    68cc:	102ad43a 	srli	r21,r2,16
    68d0:	b47fe936 	bltu	r22,r17,6878 <__multiply+0xfc>
    68d4:	9d400015 	stw	r21,0(r19)
    68d8:	94000017 	ldw	r16,0(r18)
    68dc:	8020d43a 	srli	r16,r16,16
    68e0:	803fd926 	beq	r16,zero,6848 <__multiply+0xcc>
    68e4:	ddc00017 	ldw	r23,0(sp)
    68e8:	dd400317 	ldw	r21,12(sp)
    68ec:	0027883a 	mov	r19,zero
    68f0:	bd800017 	ldw	r22,0(r23)
    68f4:	b039883a 	mov	fp,r22
    68f8:	a900000b 	ldhu	r4,0(r21)
    68fc:	e038d43a 	srli	fp,fp,16
    6900:	800b883a 	mov	r5,r16
    6904:	000a5dc0 	call	a5dc <__mulsi3>
    6908:	1739883a 	add	fp,r2,fp
    690c:	e4e7883a 	add	r19,fp,r19
    6910:	9804943a 	slli	r2,r19,16
    6914:	b0ffffcc 	andi	r3,r22,65535
    6918:	bdc00104 	addi	r23,r23,4
    691c:	10c6b03a 	or	r3,r2,r3
    6920:	b8ffff15 	stw	r3,-4(r23)
    6924:	ad400104 	addi	r21,r21,4
    6928:	a93fff8b 	ldhu	r4,-2(r21)
    692c:	bf000017 	ldw	fp,0(r23)
    6930:	800b883a 	mov	r5,r16
    6934:	000a5dc0 	call	a5dc <__mulsi3>
    6938:	980cd43a 	srli	r6,r19,16
    693c:	e0ffffcc 	andi	r3,fp,65535
    6940:	10c7883a 	add	r3,r2,r3
    6944:	19ad883a 	add	r22,r3,r6
    6948:	b026d43a 	srli	r19,r22,16
    694c:	ac7fea36 	bltu	r21,r17,68f8 <__multiply+0x17c>
    6950:	bd800015 	stw	r22,0(r23)
    6954:	003fbc06 	br	6848 <__multiply+0xcc>
    6958:	05000a0e 	bge	zero,r20,6984 <__multiply+0x208>
    695c:	d8c00117 	ldw	r3,4(sp)
    6960:	18bfff17 	ldw	r2,-4(r3)
    6964:	1cffff04 	addi	r19,r3,-4
    6968:	10000326 	beq	r2,zero,6978 <__multiply+0x1fc>
    696c:	00000506 	br	6984 <__multiply+0x208>
    6970:	98800017 	ldw	r2,0(r19)
    6974:	1000031e 	bne	r2,zero,6984 <__multiply+0x208>
    6978:	a53fffc4 	addi	r20,r20,-1
    697c:	9cffff04 	addi	r19,r19,-4
    6980:	a03ffb1e 	bne	r20,zero,6970 <__multiply+0x1f4>
    6984:	d8800417 	ldw	r2,16(sp)
    6988:	15000415 	stw	r20,16(r2)
    698c:	dfc00e17 	ldw	ra,56(sp)
    6990:	df000d17 	ldw	fp,52(sp)
    6994:	ddc00c17 	ldw	r23,48(sp)
    6998:	dd800b17 	ldw	r22,44(sp)
    699c:	dd400a17 	ldw	r21,40(sp)
    69a0:	dd000917 	ldw	r20,36(sp)
    69a4:	dcc00817 	ldw	r19,32(sp)
    69a8:	dc800717 	ldw	r18,28(sp)
    69ac:	dc400617 	ldw	r17,24(sp)
    69b0:	dc000517 	ldw	r16,20(sp)
    69b4:	dec00f04 	addi	sp,sp,60
    69b8:	f800283a 	ret

000069bc <__pow5mult>:
    69bc:	defffb04 	addi	sp,sp,-20
    69c0:	dcc00315 	stw	r19,12(sp)
    69c4:	dc000015 	stw	r16,0(sp)
    69c8:	dfc00415 	stw	ra,16(sp)
    69cc:	dc800215 	stw	r18,8(sp)
    69d0:	dc400115 	stw	r17,4(sp)
    69d4:	308000cc 	andi	r2,r6,3
    69d8:	3021883a 	mov	r16,r6
    69dc:	2027883a 	mov	r19,r4
    69e0:	10002d1e 	bne	r2,zero,6a98 <__pow5mult+0xdc>
    69e4:	2825883a 	mov	r18,r5
    69e8:	8021d0ba 	srai	r16,r16,2
    69ec:	80001926 	beq	r16,zero,6a54 <__pow5mult+0x98>
    69f0:	9c401217 	ldw	r17,72(r19)
    69f4:	8800061e 	bne	r17,zero,6a10 <__pow5mult+0x54>
    69f8:	00002f06 	br	6ab8 <__pow5mult+0xfc>
    69fc:	8021d07a 	srai	r16,r16,1
    6a00:	80001426 	beq	r16,zero,6a54 <__pow5mult+0x98>
    6a04:	88800017 	ldw	r2,0(r17)
    6a08:	10001a26 	beq	r2,zero,6a74 <__pow5mult+0xb8>
    6a0c:	1023883a 	mov	r17,r2
    6a10:	8080004c 	andi	r2,r16,1
    6a14:	103ff926 	beq	r2,zero,69fc <__pow5mult+0x40>
    6a18:	880d883a 	mov	r6,r17
    6a1c:	900b883a 	mov	r5,r18
    6a20:	9809883a 	mov	r4,r19
    6a24:	000677c0 	call	677c <__multiply>
    6a28:	90001926 	beq	r18,zero,6a90 <__pow5mult+0xd4>
    6a2c:	91000117 	ldw	r4,4(r18)
    6a30:	98c01317 	ldw	r3,76(r19)
    6a34:	8021d07a 	srai	r16,r16,1
    6a38:	200890ba 	slli	r4,r4,2
    6a3c:	1907883a 	add	r3,r3,r4
    6a40:	19000017 	ldw	r4,0(r3)
    6a44:	91000015 	stw	r4,0(r18)
    6a48:	1c800015 	stw	r18,0(r3)
    6a4c:	1025883a 	mov	r18,r2
    6a50:	803fec1e 	bne	r16,zero,6a04 <__pow5mult+0x48>
    6a54:	9005883a 	mov	r2,r18
    6a58:	dfc00417 	ldw	ra,16(sp)
    6a5c:	dcc00317 	ldw	r19,12(sp)
    6a60:	dc800217 	ldw	r18,8(sp)
    6a64:	dc400117 	ldw	r17,4(sp)
    6a68:	dc000017 	ldw	r16,0(sp)
    6a6c:	dec00504 	addi	sp,sp,20
    6a70:	f800283a 	ret
    6a74:	880d883a 	mov	r6,r17
    6a78:	880b883a 	mov	r5,r17
    6a7c:	9809883a 	mov	r4,r19
    6a80:	000677c0 	call	677c <__multiply>
    6a84:	88800015 	stw	r2,0(r17)
    6a88:	10000015 	stw	zero,0(r2)
    6a8c:	003fdf06 	br	6a0c <__pow5mult+0x50>
    6a90:	1025883a 	mov	r18,r2
    6a94:	003fd906 	br	69fc <__pow5mult+0x40>
    6a98:	100490ba 	slli	r2,r2,2
    6a9c:	00c00074 	movhi	r3,1
    6aa0:	000f883a 	mov	r7,zero
    6aa4:	10c7883a 	add	r3,r2,r3
    6aa8:	19bd9d17 	ldw	r6,-2444(r3)
    6aac:	00063e80 	call	63e8 <__multadd>
    6ab0:	1025883a 	mov	r18,r2
    6ab4:	003fcc06 	br	69e8 <__pow5mult+0x2c>
    6ab8:	01400044 	movi	r5,1
    6abc:	9809883a 	mov	r4,r19
    6ac0:	00063200 	call	6320 <_Balloc>
    6ac4:	1023883a 	mov	r17,r2
    6ac8:	00809c44 	movi	r2,625
    6acc:	88800515 	stw	r2,20(r17)
    6ad0:	00800044 	movi	r2,1
    6ad4:	88800415 	stw	r2,16(r17)
    6ad8:	9c401215 	stw	r17,72(r19)
    6adc:	88000015 	stw	zero,0(r17)
    6ae0:	003fcb06 	br	6a10 <__pow5mult+0x54>

00006ae4 <__lshift>:
    6ae4:	defff904 	addi	sp,sp,-28
    6ae8:	dcc00315 	stw	r19,12(sp)
    6aec:	dc400115 	stw	r17,4(sp)
    6af0:	2cc00417 	ldw	r19,16(r5)
    6af4:	3023d17a 	srai	r17,r6,5
    6af8:	28800217 	ldw	r2,8(r5)
    6afc:	dd400515 	stw	r21,20(sp)
    6b00:	8ce7883a 	add	r19,r17,r19
    6b04:	dd000415 	stw	r20,16(sp)
    6b08:	dc800215 	stw	r18,8(sp)
    6b0c:	dc000015 	stw	r16,0(sp)
    6b10:	dfc00615 	stw	ra,24(sp)
    6b14:	9c000044 	addi	r16,r19,1
    6b18:	2825883a 	mov	r18,r5
    6b1c:	302b883a 	mov	r21,r6
    6b20:	2029883a 	mov	r20,r4
    6b24:	29400117 	ldw	r5,4(r5)
    6b28:	1400030e 	bge	r2,r16,6b38 <__lshift+0x54>
    6b2c:	1085883a 	add	r2,r2,r2
    6b30:	29400044 	addi	r5,r5,1
    6b34:	143ffd16 	blt	r2,r16,6b2c <__lshift+0x48>
    6b38:	a009883a 	mov	r4,r20
    6b3c:	00063200 	call	6320 <_Balloc>
    6b40:	11000504 	addi	r4,r2,20
    6b44:	0440090e 	bge	zero,r17,6b6c <__lshift+0x88>
    6b48:	8c400144 	addi	r17,r17,5
    6b4c:	882290ba 	slli	r17,r17,2
    6b50:	2007883a 	mov	r3,r4
    6b54:	144b883a 	add	r5,r2,r17
    6b58:	18c00104 	addi	r3,r3,4
    6b5c:	183fff15 	stw	zero,-4(r3)
    6b60:	28fffd1e 	bne	r5,r3,6b58 <__lshift+0x74>
    6b64:	8c7ffb04 	addi	r17,r17,-20
    6b68:	2449883a 	add	r4,r4,r17
    6b6c:	92000417 	ldw	r8,16(r18)
    6b70:	90c00504 	addi	r3,r18,20
    6b74:	a98007cc 	andi	r6,r21,31
    6b78:	401090ba 	slli	r8,r8,2
    6b7c:	1a11883a 	add	r8,r3,r8
    6b80:	30002126 	beq	r6,zero,6c08 <__lshift+0x124>
    6b84:	02400804 	movi	r9,32
    6b88:	4993c83a 	sub	r9,r9,r6
    6b8c:	000f883a 	mov	r7,zero
    6b90:	19400017 	ldw	r5,0(r3)
    6b94:	21000104 	addi	r4,r4,4
    6b98:	18c00104 	addi	r3,r3,4
    6b9c:	298a983a 	sll	r5,r5,r6
    6ba0:	29cab03a 	or	r5,r5,r7
    6ba4:	217fff15 	stw	r5,-4(r4)
    6ba8:	197fff17 	ldw	r5,-4(r3)
    6bac:	2a4ed83a 	srl	r7,r5,r9
    6bb0:	1a3ff736 	bltu	r3,r8,6b90 <__lshift+0xac>
    6bb4:	21c00015 	stw	r7,0(r4)
    6bb8:	38000126 	beq	r7,zero,6bc0 <__lshift+0xdc>
    6bbc:	8027883a 	mov	r19,r16
    6bc0:	14c00415 	stw	r19,16(r2)
    6bc4:	90000726 	beq	r18,zero,6be4 <__lshift+0x100>
    6bc8:	91000117 	ldw	r4,4(r18)
    6bcc:	a0c01317 	ldw	r3,76(r20)
    6bd0:	200890ba 	slli	r4,r4,2
    6bd4:	1907883a 	add	r3,r3,r4
    6bd8:	19000017 	ldw	r4,0(r3)
    6bdc:	91000015 	stw	r4,0(r18)
    6be0:	1c800015 	stw	r18,0(r3)
    6be4:	dfc00617 	ldw	ra,24(sp)
    6be8:	dd400517 	ldw	r21,20(sp)
    6bec:	dd000417 	ldw	r20,16(sp)
    6bf0:	dcc00317 	ldw	r19,12(sp)
    6bf4:	dc800217 	ldw	r18,8(sp)
    6bf8:	dc400117 	ldw	r17,4(sp)
    6bfc:	dc000017 	ldw	r16,0(sp)
    6c00:	dec00704 	addi	sp,sp,28
    6c04:	f800283a 	ret
    6c08:	18c00104 	addi	r3,r3,4
    6c0c:	197fff17 	ldw	r5,-4(r3)
    6c10:	21000104 	addi	r4,r4,4
    6c14:	217fff15 	stw	r5,-4(r4)
    6c18:	1a3ffb36 	bltu	r3,r8,6c08 <__lshift+0x124>
    6c1c:	003fe806 	br	6bc0 <__lshift+0xdc>

00006c20 <__mcmp>:
    6c20:	20800417 	ldw	r2,16(r4)
    6c24:	28c00417 	ldw	r3,16(r5)
    6c28:	10c5c83a 	sub	r2,r2,r3
    6c2c:	10000e1e 	bne	r2,zero,6c68 <__mcmp+0x48>
    6c30:	180c90ba 	slli	r6,r3,2
    6c34:	21000504 	addi	r4,r4,20
    6c38:	29400504 	addi	r5,r5,20
    6c3c:	2187883a 	add	r3,r4,r6
    6c40:	298b883a 	add	r5,r5,r6
    6c44:	00000106 	br	6c4c <__mcmp+0x2c>
    6c48:	20c0082e 	bgeu	r4,r3,6c6c <__mcmp+0x4c>
    6c4c:	18ffff04 	addi	r3,r3,-4
    6c50:	297fff04 	addi	r5,r5,-4
    6c54:	19c00017 	ldw	r7,0(r3)
    6c58:	29800017 	ldw	r6,0(r5)
    6c5c:	39bffa26 	beq	r7,r6,6c48 <__mcmp+0x28>
    6c60:	3980032e 	bgeu	r7,r6,6c70 <__mcmp+0x50>
    6c64:	00bfffc4 	movi	r2,-1
    6c68:	f800283a 	ret
    6c6c:	f800283a 	ret
    6c70:	00800044 	movi	r2,1
    6c74:	f800283a 	ret

00006c78 <__mdiff>:
    6c78:	defffa04 	addi	sp,sp,-24
    6c7c:	dc800215 	stw	r18,8(sp)
    6c80:	30c00417 	ldw	r3,16(r6)
    6c84:	2c800417 	ldw	r18,16(r5)
    6c88:	dd000415 	stw	r20,16(sp)
    6c8c:	dcc00315 	stw	r19,12(sp)
    6c90:	dc400115 	stw	r17,4(sp)
    6c94:	dc000015 	stw	r16,0(sp)
    6c98:	dfc00515 	stw	ra,20(sp)
    6c9c:	90e5c83a 	sub	r18,r18,r3
    6ca0:	2827883a 	mov	r19,r5
    6ca4:	3029883a 	mov	r20,r6
    6ca8:	2c000504 	addi	r16,r5,20
    6cac:	34400504 	addi	r17,r6,20
    6cb0:	9000131e 	bne	r18,zero,6d00 <__mdiff+0x88>
    6cb4:	180690ba 	slli	r3,r3,2
    6cb8:	80c5883a 	add	r2,r16,r3
    6cbc:	88c7883a 	add	r3,r17,r3
    6cc0:	00000106 	br	6cc8 <__mdiff+0x50>
    6cc4:	8080552e 	bgeu	r16,r2,6e1c <__mdiff+0x1a4>
    6cc8:	10bfff04 	addi	r2,r2,-4
    6ccc:	18ffff04 	addi	r3,r3,-4
    6cd0:	11c00017 	ldw	r7,0(r2)
    6cd4:	19400017 	ldw	r5,0(r3)
    6cd8:	397ffa26 	beq	r7,r5,6cc4 <__mdiff+0x4c>
    6cdc:	39400a2e 	bgeu	r7,r5,6d08 <__mdiff+0x90>
    6ce0:	8007883a 	mov	r3,r16
    6ce4:	9805883a 	mov	r2,r19
    6ce8:	8821883a 	mov	r16,r17
    6cec:	a027883a 	mov	r19,r20
    6cf0:	1823883a 	mov	r17,r3
    6cf4:	1029883a 	mov	r20,r2
    6cf8:	04800044 	movi	r18,1
    6cfc:	00000206 	br	6d08 <__mdiff+0x90>
    6d00:	903ff716 	blt	r18,zero,6ce0 <__mdiff+0x68>
    6d04:	0025883a 	mov	r18,zero
    6d08:	99400117 	ldw	r5,4(r19)
    6d0c:	00063200 	call	6320 <_Balloc>
    6d10:	9a400417 	ldw	r9,16(r19)
    6d14:	a2c00417 	ldw	r11,16(r20)
    6d18:	12800504 	addi	r10,r2,20
    6d1c:	481090ba 	slli	r8,r9,2
    6d20:	581690ba 	slli	r11,r11,2
    6d24:	14800315 	stw	r18,12(r2)
    6d28:	8211883a 	add	r8,r16,r8
    6d2c:	8ad7883a 	add	r11,r17,r11
    6d30:	0007883a 	mov	r3,zero
    6d34:	00000106 	br	6d3c <__mdiff+0xc4>
    6d38:	3815883a 	mov	r10,r7
    6d3c:	81000017 	ldw	r4,0(r16)
    6d40:	89800017 	ldw	r6,0(r17)
    6d44:	51c00104 	addi	r7,r10,4
    6d48:	217fffcc 	andi	r5,r4,65535
    6d4c:	28cb883a 	add	r5,r5,r3
    6d50:	30ffffcc 	andi	r3,r6,65535
    6d54:	28cbc83a 	sub	r5,r5,r3
    6d58:	300cd43a 	srli	r6,r6,16
    6d5c:	2006d43a 	srli	r3,r4,16
    6d60:	2809d43a 	srai	r4,r5,16
    6d64:	297fffcc 	andi	r5,r5,65535
    6d68:	1987c83a 	sub	r3,r3,r6
    6d6c:	1907883a 	add	r3,r3,r4
    6d70:	1808943a 	slli	r4,r3,16
    6d74:	8c400104 	addi	r17,r17,4
    6d78:	84000104 	addi	r16,r16,4
    6d7c:	214ab03a 	or	r5,r4,r5
    6d80:	397fff15 	stw	r5,-4(r7)
    6d84:	1807d43a 	srai	r3,r3,16
    6d88:	8affeb36 	bltu	r17,r11,6d38 <__mdiff+0xc0>
    6d8c:	8200152e 	bgeu	r16,r8,6de4 <__mdiff+0x16c>
    6d90:	3815883a 	mov	r10,r7
    6d94:	800d883a 	mov	r6,r16
    6d98:	31000017 	ldw	r4,0(r6)
    6d9c:	52800104 	addi	r10,r10,4
    6da0:	31800104 	addi	r6,r6,4
    6da4:	217fffcc 	andi	r5,r4,65535
    6da8:	28cb883a 	add	r5,r5,r3
    6dac:	2817d43a 	srai	r11,r5,16
    6db0:	2006d43a 	srli	r3,r4,16
    6db4:	293fffcc 	andi	r4,r5,65535
    6db8:	1ac7883a 	add	r3,r3,r11
    6dbc:	180a943a 	slli	r5,r3,16
    6dc0:	1807d43a 	srai	r3,r3,16
    6dc4:	290ab03a 	or	r5,r5,r4
    6dc8:	517fff15 	stw	r5,-4(r10)
    6dcc:	323ff236 	bltu	r6,r8,6d98 <__mdiff+0x120>
    6dd0:	42bfffc4 	addi	r10,r8,-1
    6dd4:	5415c83a 	sub	r10,r10,r16
    6dd8:	5014d0ba 	srli	r10,r10,2
    6ddc:	501490ba 	slli	r10,r10,2
    6de0:	3a95883a 	add	r10,r7,r10
    6de4:	2800041e 	bne	r5,zero,6df8 <__mdiff+0x180>
    6de8:	52bfff04 	addi	r10,r10,-4
    6dec:	50c00017 	ldw	r3,0(r10)
    6df0:	4a7fffc4 	addi	r9,r9,-1
    6df4:	183ffc26 	beq	r3,zero,6de8 <__mdiff+0x170>
    6df8:	12400415 	stw	r9,16(r2)
    6dfc:	dfc00517 	ldw	ra,20(sp)
    6e00:	dd000417 	ldw	r20,16(sp)
    6e04:	dcc00317 	ldw	r19,12(sp)
    6e08:	dc800217 	ldw	r18,8(sp)
    6e0c:	dc400117 	ldw	r17,4(sp)
    6e10:	dc000017 	ldw	r16,0(sp)
    6e14:	dec00604 	addi	sp,sp,24
    6e18:	f800283a 	ret
    6e1c:	000b883a 	mov	r5,zero
    6e20:	00063200 	call	6320 <_Balloc>
    6e24:	00c00044 	movi	r3,1
    6e28:	10c00415 	stw	r3,16(r2)
    6e2c:	10000515 	stw	zero,20(r2)
    6e30:	003ff206 	br	6dfc <__mdiff+0x184>

00006e34 <__ulp>:
    6e34:	295ffc2c 	andhi	r5,r5,32752
    6e38:	00ff3034 	movhi	r3,64704
    6e3c:	28c7883a 	add	r3,r5,r3
    6e40:	00c0020e 	bge	zero,r3,6e4c <__ulp+0x18>
    6e44:	0005883a 	mov	r2,zero
    6e48:	f800283a 	ret
    6e4c:	00c7c83a 	sub	r3,zero,r3
    6e50:	1807d53a 	srai	r3,r3,20
    6e54:	18800508 	cmpgei	r2,r3,20
    6e58:	1000041e 	bne	r2,zero,6e6c <__ulp+0x38>
    6e5c:	01400234 	movhi	r5,8
    6e60:	28c7d83a 	sra	r3,r5,r3
    6e64:	0005883a 	mov	r2,zero
    6e68:	f800283a 	ret
    6e6c:	193ffb04 	addi	r4,r3,-20
    6e70:	208007c8 	cmpgei	r2,r4,31
    6e74:	0007883a 	mov	r3,zero
    6e78:	1000031e 	bne	r2,zero,6e88 <__ulp+0x54>
    6e7c:	00a00034 	movhi	r2,32768
    6e80:	1104d83a 	srl	r2,r2,r4
    6e84:	f800283a 	ret
    6e88:	00800044 	movi	r2,1
    6e8c:	f800283a 	ret

00006e90 <__b2d>:
    6e90:	defffa04 	addi	sp,sp,-24
    6e94:	dc000015 	stw	r16,0(sp)
    6e98:	24000417 	ldw	r16,16(r4)
    6e9c:	dc800215 	stw	r18,8(sp)
    6ea0:	24800504 	addi	r18,r4,20
    6ea4:	802090ba 	slli	r16,r16,2
    6ea8:	dc400115 	stw	r17,4(sp)
    6eac:	dd000415 	stw	r20,16(sp)
    6eb0:	9421883a 	add	r16,r18,r16
    6eb4:	847fff17 	ldw	r17,-4(r16)
    6eb8:	dcc00315 	stw	r19,12(sp)
    6ebc:	2829883a 	mov	r20,r5
    6ec0:	8809883a 	mov	r4,r17
    6ec4:	dfc00515 	stw	ra,20(sp)
    6ec8:	00066340 	call	6634 <__hi0bits>
    6ecc:	01000804 	movi	r4,32
    6ed0:	2087c83a 	sub	r3,r4,r2
    6ed4:	a0c00015 	stw	r3,0(r20)
    6ed8:	10c002c8 	cmpgei	r3,r2,11
    6edc:	84ffff04 	addi	r19,r16,-4
    6ee0:	18001f26 	beq	r3,zero,6f60 <__b2d+0xd0>
    6ee4:	10fffd44 	addi	r3,r2,-11
    6ee8:	94c00e2e 	bgeu	r18,r19,6f24 <__b2d+0x94>
    6eec:	80bffe17 	ldw	r2,-8(r16)
    6ef0:	18001226 	beq	r3,zero,6f3c <__b2d+0xac>
    6ef4:	20c9c83a 	sub	r4,r4,r3
    6ef8:	110cd83a 	srl	r6,r2,r4
    6efc:	88e2983a 	sll	r17,r17,r3
    6f00:	10c4983a 	sll	r2,r2,r3
    6f04:	817ffe04 	addi	r5,r16,-8
    6f08:	8986b03a 	or	r3,r17,r6
    6f0c:	18cffc34 	orhi	r3,r3,16368
    6f10:	91400b2e 	bgeu	r18,r5,6f40 <__b2d+0xb0>
    6f14:	817ffd17 	ldw	r5,-12(r16)
    6f18:	2908d83a 	srl	r4,r5,r4
    6f1c:	1104b03a 	or	r2,r2,r4
    6f20:	00000706 	br	6f40 <__b2d+0xb0>
    6f24:	18000426 	beq	r3,zero,6f38 <__b2d+0xa8>
    6f28:	88c6983a 	sll	r3,r17,r3
    6f2c:	0005883a 	mov	r2,zero
    6f30:	18cffc34 	orhi	r3,r3,16368
    6f34:	00000206 	br	6f40 <__b2d+0xb0>
    6f38:	0005883a 	mov	r2,zero
    6f3c:	88cffc34 	orhi	r3,r17,16368
    6f40:	dfc00517 	ldw	ra,20(sp)
    6f44:	dd000417 	ldw	r20,16(sp)
    6f48:	dcc00317 	ldw	r19,12(sp)
    6f4c:	dc800217 	ldw	r18,8(sp)
    6f50:	dc400117 	ldw	r17,4(sp)
    6f54:	dc000017 	ldw	r16,0(sp)
    6f58:	dec00604 	addi	sp,sp,24
    6f5c:	f800283a 	ret
    6f60:	014002c4 	movi	r5,11
    6f64:	2889c83a 	sub	r4,r5,r2
    6f68:	8906d83a 	srl	r3,r17,r4
    6f6c:	18cffc34 	orhi	r3,r3,16368
    6f70:	94c00536 	bltu	r18,r19,6f88 <__b2d+0xf8>
    6f74:	000b883a 	mov	r5,zero
    6f78:	10800544 	addi	r2,r2,21
    6f7c:	8884983a 	sll	r2,r17,r2
    6f80:	1144b03a 	or	r2,r2,r5
    6f84:	003fee06 	br	6f40 <__b2d+0xb0>
    6f88:	817ffe17 	ldw	r5,-8(r16)
    6f8c:	290ad83a 	srl	r5,r5,r4
    6f90:	003ff906 	br	6f78 <__b2d+0xe8>

00006f94 <__d2b>:
    6f94:	defff804 	addi	sp,sp,-32
    6f98:	dc400315 	stw	r17,12(sp)
    6f9c:	3023883a 	mov	r17,r6
    6fa0:	dd000615 	stw	r20,24(sp)
    6fa4:	dc000215 	stw	r16,8(sp)
    6fa8:	2829883a 	mov	r20,r5
    6fac:	8820d53a 	srli	r16,r17,20
    6fb0:	01400044 	movi	r5,1
    6fb4:	dcc00515 	stw	r19,20(sp)
    6fb8:	dc800415 	stw	r18,16(sp)
    6fbc:	dfc00715 	stw	ra,28(sp)
    6fc0:	3825883a 	mov	r18,r7
    6fc4:	00063200 	call	6320 <_Balloc>
    6fc8:	01800434 	movhi	r6,16
    6fcc:	31bfffc4 	addi	r6,r6,-1
    6fd0:	8401ffcc 	andi	r16,r16,2047
    6fd4:	1027883a 	mov	r19,r2
    6fd8:	89a2703a 	and	r17,r17,r6
    6fdc:	80000126 	beq	r16,zero,6fe4 <__d2b+0x50>
    6fe0:	8c400434 	orhi	r17,r17,16
    6fe4:	dc400115 	stw	r17,4(sp)
    6fe8:	a0002826 	beq	r20,zero,708c <__d2b+0xf8>
    6fec:	d809883a 	mov	r4,sp
    6ff0:	dd000015 	stw	r20,0(sp)
    6ff4:	00066980 	call	6698 <__lo0bits>
    6ff8:	d8c00117 	ldw	r3,4(sp)
    6ffc:	1000171e 	bne	r2,zero,705c <__d2b+0xc8>
    7000:	d9000017 	ldw	r4,0(sp)
    7004:	98c00615 	stw	r3,24(r19)
    7008:	99000515 	stw	r4,20(r19)
    700c:	18001d1e 	bne	r3,zero,7084 <__d2b+0xf0>
    7010:	04400044 	movi	r17,1
    7014:	9c400415 	stw	r17,16(r19)
    7018:	80002526 	beq	r16,zero,70b0 <__d2b+0x11c>
    701c:	00c00d44 	movi	r3,53
    7020:	843ef344 	addi	r16,r16,-1075
    7024:	80a1883a 	add	r16,r16,r2
    7028:	1885c83a 	sub	r2,r3,r2
    702c:	d8c00817 	ldw	r3,32(sp)
    7030:	94000015 	stw	r16,0(r18)
    7034:	18800015 	stw	r2,0(r3)
    7038:	9805883a 	mov	r2,r19
    703c:	dfc00717 	ldw	ra,28(sp)
    7040:	dd000617 	ldw	r20,24(sp)
    7044:	dcc00517 	ldw	r19,20(sp)
    7048:	dc800417 	ldw	r18,16(sp)
    704c:	dc400317 	ldw	r17,12(sp)
    7050:	dc000217 	ldw	r16,8(sp)
    7054:	dec00804 	addi	sp,sp,32
    7058:	f800283a 	ret
    705c:	01000804 	movi	r4,32
    7060:	2089c83a 	sub	r4,r4,r2
    7064:	1908983a 	sll	r4,r3,r4
    7068:	d9400017 	ldw	r5,0(sp)
    706c:	1886d83a 	srl	r3,r3,r2
    7070:	2148b03a 	or	r4,r4,r5
    7074:	99000515 	stw	r4,20(r19)
    7078:	d8c00115 	stw	r3,4(sp)
    707c:	98c00615 	stw	r3,24(r19)
    7080:	183fe326 	beq	r3,zero,7010 <__d2b+0x7c>
    7084:	04400084 	movi	r17,2
    7088:	003fe206 	br	7014 <__d2b+0x80>
    708c:	d9000104 	addi	r4,sp,4
    7090:	00066980 	call	6698 <__lo0bits>
    7094:	00c00044 	movi	r3,1
    7098:	98c00415 	stw	r3,16(r19)
    709c:	d8c00117 	ldw	r3,4(sp)
    70a0:	10800804 	addi	r2,r2,32
    70a4:	04400044 	movi	r17,1
    70a8:	98c00515 	stw	r3,20(r19)
    70ac:	803fdb1e 	bne	r16,zero,701c <__d2b+0x88>
    70b0:	880690ba 	slli	r3,r17,2
    70b4:	10bef384 	addi	r2,r2,-1074
    70b8:	8822917a 	slli	r17,r17,5
    70bc:	98c7883a 	add	r3,r19,r3
    70c0:	19000417 	ldw	r4,16(r3)
    70c4:	90800015 	stw	r2,0(r18)
    70c8:	00066340 	call	6634 <__hi0bits>
    70cc:	88a3c83a 	sub	r17,r17,r2
    70d0:	d8800817 	ldw	r2,32(sp)
    70d4:	14400015 	stw	r17,0(r2)
    70d8:	003fd706 	br	7038 <__d2b+0xa4>

000070dc <__ratio>:
    70dc:	defff904 	addi	sp,sp,-28
    70e0:	dc400315 	stw	r17,12(sp)
    70e4:	2823883a 	mov	r17,r5
    70e8:	d80b883a 	mov	r5,sp
    70ec:	dfc00615 	stw	ra,24(sp)
    70f0:	dcc00515 	stw	r19,20(sp)
    70f4:	dc800415 	stw	r18,16(sp)
    70f8:	2027883a 	mov	r19,r4
    70fc:	dc000215 	stw	r16,8(sp)
    7100:	0006e900 	call	6e90 <__b2d>
    7104:	d9400104 	addi	r5,sp,4
    7108:	8809883a 	mov	r4,r17
    710c:	1025883a 	mov	r18,r2
    7110:	1821883a 	mov	r16,r3
    7114:	0006e900 	call	6e90 <__b2d>
    7118:	89400417 	ldw	r5,16(r17)
    711c:	99000417 	ldw	r4,16(r19)
    7120:	d9800117 	ldw	r6,4(sp)
    7124:	2149c83a 	sub	r4,r4,r5
    7128:	d9400017 	ldw	r5,0(sp)
    712c:	2008917a 	slli	r4,r4,5
    7130:	298bc83a 	sub	r5,r5,r6
    7134:	2149883a 	add	r4,r4,r5
    7138:	01000e0e 	bge	zero,r4,7174 <__ratio+0x98>
    713c:	2008953a 	slli	r4,r4,20
    7140:	2421883a 	add	r16,r4,r16
    7144:	100d883a 	mov	r6,r2
    7148:	180f883a 	mov	r7,r3
    714c:	9009883a 	mov	r4,r18
    7150:	800b883a 	mov	r5,r16
    7154:	000afa40 	call	afa4 <__divdf3>
    7158:	dfc00617 	ldw	ra,24(sp)
    715c:	dcc00517 	ldw	r19,20(sp)
    7160:	dc800417 	ldw	r18,16(sp)
    7164:	dc400317 	ldw	r17,12(sp)
    7168:	dc000217 	ldw	r16,8(sp)
    716c:	dec00704 	addi	sp,sp,28
    7170:	f800283a 	ret
    7174:	2008953a 	slli	r4,r4,20
    7178:	1907c83a 	sub	r3,r3,r4
    717c:	003ff106 	br	7144 <__ratio+0x68>

00007180 <_mprec_log10>:
    7180:	defffe04 	addi	sp,sp,-8
    7184:	dc000015 	stw	r16,0(sp)
    7188:	dfc00115 	stw	ra,4(sp)
    718c:	20800608 	cmpgei	r2,r4,24
    7190:	2021883a 	mov	r16,r4
    7194:	10000d26 	beq	r2,zero,71cc <_mprec_log10+0x4c>
    7198:	0005883a 	mov	r2,zero
    719c:	00cffc34 	movhi	r3,16368
    71a0:	843fffc4 	addi	r16,r16,-1
    71a4:	000d883a 	mov	r6,zero
    71a8:	01d00934 	movhi	r7,16420
    71ac:	1009883a 	mov	r4,r2
    71b0:	180b883a 	mov	r5,r3
    71b4:	000bb680 	call	bb68 <__muldf3>
    71b8:	803ff91e 	bne	r16,zero,71a0 <_mprec_log10+0x20>
    71bc:	dfc00117 	ldw	ra,4(sp)
    71c0:	dc000017 	ldw	r16,0(sp)
    71c4:	dec00204 	addi	sp,sp,8
    71c8:	f800283a 	ret
    71cc:	202090fa 	slli	r16,r4,3
    71d0:	00800074 	movhi	r2,1
    71d4:	10bdb504 	addi	r2,r2,-2348
    71d8:	1421883a 	add	r16,r2,r16
    71dc:	80800017 	ldw	r2,0(r16)
    71e0:	80c00117 	ldw	r3,4(r16)
    71e4:	dfc00117 	ldw	ra,4(sp)
    71e8:	dc000017 	ldw	r16,0(sp)
    71ec:	dec00204 	addi	sp,sp,8
    71f0:	f800283a 	ret

000071f4 <__copybits>:
    71f4:	29ffffc4 	addi	r7,r5,-1
    71f8:	380fd17a 	srai	r7,r7,5
    71fc:	31400417 	ldw	r5,16(r6)
    7200:	30800504 	addi	r2,r6,20
    7204:	39c00044 	addi	r7,r7,1
    7208:	280a90ba 	slli	r5,r5,2
    720c:	380e90ba 	slli	r7,r7,2
    7210:	114b883a 	add	r5,r2,r5
    7214:	21cf883a 	add	r7,r4,r7
    7218:	11400c2e 	bgeu	r2,r5,724c <__copybits+0x58>
    721c:	2007883a 	mov	r3,r4
    7220:	10800104 	addi	r2,r2,4
    7224:	123fff17 	ldw	r8,-4(r2)
    7228:	18c00104 	addi	r3,r3,4
    722c:	1a3fff15 	stw	r8,-4(r3)
    7230:	117ffb36 	bltu	r2,r5,7220 <__copybits+0x2c>
    7234:	2985c83a 	sub	r2,r5,r6
    7238:	10bffac4 	addi	r2,r2,-21
    723c:	1004d0ba 	srli	r2,r2,2
    7240:	10800044 	addi	r2,r2,1
    7244:	100490ba 	slli	r2,r2,2
    7248:	2089883a 	add	r4,r4,r2
    724c:	21c0032e 	bgeu	r4,r7,725c <__copybits+0x68>
    7250:	21000104 	addi	r4,r4,4
    7254:	203fff15 	stw	zero,-4(r4)
    7258:	21fffd36 	bltu	r4,r7,7250 <__copybits+0x5c>
    725c:	f800283a 	ret

00007260 <__any_on>:
    7260:	20800417 	ldw	r2,16(r4)
    7264:	280dd17a 	srai	r6,r5,5
    7268:	21000504 	addi	r4,r4,20
    726c:	11800c0e 	bge	r2,r6,72a0 <__any_on+0x40>
    7270:	100690ba 	slli	r3,r2,2
    7274:	20c7883a 	add	r3,r4,r3
    7278:	20c0142e 	bgeu	r4,r3,72cc <__any_on+0x6c>
    727c:	18bfff17 	ldw	r2,-4(r3)
    7280:	18ffff04 	addi	r3,r3,-4
    7284:	1000041e 	bne	r2,zero,7298 <__any_on+0x38>
    7288:	20c00f2e 	bgeu	r4,r3,72c8 <__any_on+0x68>
    728c:	18ffff04 	addi	r3,r3,-4
    7290:	19400017 	ldw	r5,0(r3)
    7294:	283ffc26 	beq	r5,zero,7288 <__any_on+0x28>
    7298:	00800044 	movi	r2,1
    729c:	f800283a 	ret
    72a0:	300690ba 	slli	r3,r6,2
    72a4:	20c7883a 	add	r3,r4,r3
    72a8:	30bff30e 	bge	r6,r2,7278 <__any_on+0x18>
    72ac:	294007cc 	andi	r5,r5,31
    72b0:	283ff126 	beq	r5,zero,7278 <__any_on+0x18>
    72b4:	19800017 	ldw	r6,0(r3)
    72b8:	3144d83a 	srl	r2,r6,r5
    72bc:	114a983a 	sll	r5,r2,r5
    72c0:	317ff51e 	bne	r6,r5,7298 <__any_on+0x38>
    72c4:	003fec06 	br	7278 <__any_on+0x18>
    72c8:	f800283a 	ret
    72cc:	0005883a 	mov	r2,zero
    72d0:	f800283a 	ret

000072d4 <_realloc_r>:
    72d4:	defff504 	addi	sp,sp,-44
    72d8:	dcc00415 	stw	r19,16(sp)
    72dc:	dfc00a15 	stw	ra,40(sp)
    72e0:	df000915 	stw	fp,36(sp)
    72e4:	ddc00815 	stw	r23,32(sp)
    72e8:	dd800715 	stw	r22,28(sp)
    72ec:	dd400615 	stw	r21,24(sp)
    72f0:	dd000515 	stw	r20,20(sp)
    72f4:	dc800315 	stw	r18,12(sp)
    72f8:	dc400215 	stw	r17,8(sp)
    72fc:	dc000115 	stw	r16,4(sp)
    7300:	3027883a 	mov	r19,r6
    7304:	28008b26 	beq	r5,zero,7534 <_realloc_r+0x260>
    7308:	282d883a 	mov	r22,r5
    730c:	202b883a 	mov	r21,r4
    7310:	9c0002c4 	addi	r16,r19,11
    7314:	000d4ec0 	call	d4ec <__malloc_lock>
    7318:	808005f0 	cmpltui	r2,r16,23
    731c:	1000521e 	bne	r2,zero,7468 <_realloc_r+0x194>
    7320:	017ffe04 	movi	r5,-8
    7324:	8160703a 	and	r16,r16,r5
    7328:	8007883a 	mov	r3,r16
    732c:	80005116 	blt	r16,zero,7474 <_realloc_r+0x1a0>
    7330:	84c05036 	bltu	r16,r19,7474 <_realloc_r+0x1a0>
    7334:	b0bfff17 	ldw	r2,-4(r22)
    7338:	017fff04 	movi	r5,-4
    733c:	b4bffe04 	addi	r18,r22,-8
    7340:	1162703a 	and	r17,r2,r5
    7344:	9469883a 	add	r20,r18,r17
    7348:	88c0390e 	bge	r17,r3,7430 <_realloc_r+0x15c>
    734c:	07000074 	movhi	fp,1
    7350:	e7000d04 	addi	fp,fp,52
    7354:	e2000217 	ldw	r8,8(fp)
    7358:	a1000117 	ldw	r4,4(r20)
    735c:	45008e26 	beq	r8,r20,7598 <_realloc_r+0x2c4>
    7360:	01bfff84 	movi	r6,-2
    7364:	218c703a 	and	r6,r4,r6
    7368:	a18d883a 	add	r6,r20,r6
    736c:	31800117 	ldw	r6,4(r6)
    7370:	3180004c 	andi	r6,r6,1
    7374:	30004f1e 	bne	r6,zero,74b4 <_realloc_r+0x1e0>
    7378:	2148703a 	and	r4,r4,r5
    737c:	890b883a 	add	r5,r17,r4
    7380:	28c0cb0e 	bge	r5,r3,76b0 <_realloc_r+0x3dc>
    7384:	1080004c 	andi	r2,r2,1
    7388:	10004c1e 	bne	r2,zero,74bc <_realloc_r+0x1e8>
    738c:	b1fffe17 	ldw	r7,-8(r22)
    7390:	00bfff04 	movi	r2,-4
    7394:	91cfc83a 	sub	r7,r18,r7
    7398:	39400117 	ldw	r5,4(r7)
    739c:	288a703a 	and	r5,r5,r2
    73a0:	a0000426 	beq	r20,zero,73b4 <_realloc_r+0xe0>
    73a4:	896f883a 	add	r23,r17,r5
    73a8:	b92f883a 	add	r23,r23,r4
    73ac:	4500cb26 	beq	r8,r20,76dc <_realloc_r+0x408>
    73b0:	b8c0930e 	bge	r23,r3,7600 <_realloc_r+0x32c>
    73b4:	38004126 	beq	r7,zero,74bc <_realloc_r+0x1e8>
    73b8:	896f883a 	add	r23,r17,r5
    73bc:	b8c03f16 	blt	r23,r3,74bc <_realloc_r+0x1e8>
    73c0:	38c00217 	ldw	r3,8(r7)
    73c4:	38800317 	ldw	r2,12(r7)
    73c8:	89bfff04 	addi	r6,r17,-4
    73cc:	31000968 	cmpgeui	r4,r6,37
    73d0:	18800315 	stw	r2,12(r3)
    73d4:	10c00215 	stw	r3,8(r2)
    73d8:	3de9883a 	add	r20,r7,r23
    73dc:	38c00204 	addi	r3,r7,8
    73e0:	2000f81e 	bne	r4,zero,77c4 <_realloc_r+0x4f0>
    73e4:	30800530 	cmpltui	r2,r6,20
    73e8:	b1000017 	ldw	r4,0(r22)
    73ec:	1000eb1e 	bne	r2,zero,779c <_realloc_r+0x4c8>
    73f0:	39000215 	stw	r4,8(r7)
    73f4:	b1000117 	ldw	r4,4(r22)
    73f8:	30800728 	cmpgeui	r2,r6,28
    73fc:	39000315 	stw	r4,12(r7)
    7400:	1001041e 	bne	r2,zero,7814 <_realloc_r+0x540>
    7404:	b1000217 	ldw	r4,8(r22)
    7408:	38800404 	addi	r2,r7,16
    740c:	b5800204 	addi	r22,r22,8
    7410:	11000015 	stw	r4,0(r2)
    7414:	b1000117 	ldw	r4,4(r22)
    7418:	b823883a 	mov	r17,r23
    741c:	3825883a 	mov	r18,r7
    7420:	11000115 	stw	r4,4(r2)
    7424:	b1000217 	ldw	r4,8(r22)
    7428:	182d883a 	mov	r22,r3
    742c:	11000215 	stw	r4,8(r2)
    7430:	91800117 	ldw	r6,4(r18)
    7434:	8c05c83a 	sub	r2,r17,r16
    7438:	10c00430 	cmpltui	r3,r2,16
    743c:	3180004c 	andi	r6,r6,1
    7440:	18004926 	beq	r3,zero,7568 <_realloc_r+0x294>
    7444:	898cb03a 	or	r6,r17,r6
    7448:	91800115 	stw	r6,4(r18)
    744c:	a0800117 	ldw	r2,4(r20)
    7450:	10800054 	ori	r2,r2,1
    7454:	a0800115 	stw	r2,4(r20)
    7458:	a809883a 	mov	r4,r21
    745c:	000d5100 	call	d510 <__malloc_unlock>
    7460:	b027883a 	mov	r19,r22
    7464:	00000606 	br	7480 <_realloc_r+0x1ac>
    7468:	04000404 	movi	r16,16
    746c:	00c00404 	movi	r3,16
    7470:	84ffb02e 	bgeu	r16,r19,7334 <_realloc_r+0x60>
    7474:	00800304 	movi	r2,12
    7478:	a8800015 	stw	r2,0(r21)
    747c:	0027883a 	mov	r19,zero
    7480:	9805883a 	mov	r2,r19
    7484:	dfc00a17 	ldw	ra,40(sp)
    7488:	df000917 	ldw	fp,36(sp)
    748c:	ddc00817 	ldw	r23,32(sp)
    7490:	dd800717 	ldw	r22,28(sp)
    7494:	dd400617 	ldw	r21,24(sp)
    7498:	dd000517 	ldw	r20,20(sp)
    749c:	dcc00417 	ldw	r19,16(sp)
    74a0:	dc800317 	ldw	r18,12(sp)
    74a4:	dc400217 	ldw	r17,8(sp)
    74a8:	dc000117 	ldw	r16,4(sp)
    74ac:	dec00b04 	addi	sp,sp,44
    74b0:	f800283a 	ret
    74b4:	1080004c 	andi	r2,r2,1
    74b8:	10007826 	beq	r2,zero,769c <_realloc_r+0x3c8>
    74bc:	980b883a 	mov	r5,r19
    74c0:	a809883a 	mov	r4,r21
    74c4:	00057280 	call	5728 <_malloc_r>
    74c8:	1027883a 	mov	r19,r2
    74cc:	10001626 	beq	r2,zero,7528 <_realloc_r+0x254>
    74d0:	b0bfff17 	ldw	r2,-4(r22)
    74d4:	013fff84 	movi	r4,-2
    74d8:	98fffe04 	addi	r3,r19,-8
    74dc:	1104703a 	and	r2,r2,r4
    74e0:	9085883a 	add	r2,r18,r2
    74e4:	10c06726 	beq	r2,r3,7684 <_realloc_r+0x3b0>
    74e8:	89bfff04 	addi	r6,r17,-4
    74ec:	30800968 	cmpgeui	r2,r6,37
    74f0:	1000761e 	bne	r2,zero,76cc <_realloc_r+0x3f8>
    74f4:	30800530 	cmpltui	r2,r6,20
    74f8:	b1000017 	ldw	r4,0(r22)
    74fc:	10003726 	beq	r2,zero,75dc <_realloc_r+0x308>
    7500:	9805883a 	mov	r2,r19
    7504:	b007883a 	mov	r3,r22
    7508:	11000015 	stw	r4,0(r2)
    750c:	19000117 	ldw	r4,4(r3)
    7510:	11000115 	stw	r4,4(r2)
    7514:	18c00217 	ldw	r3,8(r3)
    7518:	10c00215 	stw	r3,8(r2)
    751c:	b00b883a 	mov	r5,r22
    7520:	a809883a 	mov	r4,r21
    7524:	0004c0c0 	call	4c0c <_free_r>
    7528:	a809883a 	mov	r4,r21
    752c:	000d5100 	call	d510 <__malloc_unlock>
    7530:	003fd306 	br	7480 <_realloc_r+0x1ac>
    7534:	300b883a 	mov	r5,r6
    7538:	dfc00a17 	ldw	ra,40(sp)
    753c:	df000917 	ldw	fp,36(sp)
    7540:	ddc00817 	ldw	r23,32(sp)
    7544:	dd800717 	ldw	r22,28(sp)
    7548:	dd400617 	ldw	r21,24(sp)
    754c:	dd000517 	ldw	r20,20(sp)
    7550:	dcc00417 	ldw	r19,16(sp)
    7554:	dc800317 	ldw	r18,12(sp)
    7558:	dc400217 	ldw	r17,8(sp)
    755c:	dc000117 	ldw	r16,4(sp)
    7560:	dec00b04 	addi	sp,sp,44
    7564:	00057281 	jmpi	5728 <_malloc_r>
    7568:	340cb03a 	or	r6,r6,r16
    756c:	91800115 	stw	r6,4(r18)
    7570:	940b883a 	add	r5,r18,r16
    7574:	10800054 	ori	r2,r2,1
    7578:	28800115 	stw	r2,4(r5)
    757c:	a0800117 	ldw	r2,4(r20)
    7580:	29400204 	addi	r5,r5,8
    7584:	a809883a 	mov	r4,r21
    7588:	10800054 	ori	r2,r2,1
    758c:	a0800115 	stw	r2,4(r20)
    7590:	0004c0c0 	call	4c0c <_free_r>
    7594:	003fb006 	br	7458 <_realloc_r+0x184>
    7598:	2148703a 	and	r4,r4,r5
    759c:	890b883a 	add	r5,r17,r4
    75a0:	81800404 	addi	r6,r16,16
    75a4:	29bf7716 	blt	r5,r6,7384 <_realloc_r+0xb0>
    75a8:	9425883a 	add	r18,r18,r16
    75ac:	2c05c83a 	sub	r2,r5,r16
    75b0:	e4800215 	stw	r18,8(fp)
    75b4:	10800054 	ori	r2,r2,1
    75b8:	90800115 	stw	r2,4(r18)
    75bc:	b0bfff17 	ldw	r2,-4(r22)
    75c0:	a809883a 	mov	r4,r21
    75c4:	b027883a 	mov	r19,r22
    75c8:	1080004c 	andi	r2,r2,1
    75cc:	1420b03a 	or	r16,r2,r16
    75d0:	b43fff15 	stw	r16,-4(r22)
    75d4:	000d5100 	call	d510 <__malloc_unlock>
    75d8:	003fa906 	br	7480 <_realloc_r+0x1ac>
    75dc:	99000015 	stw	r4,0(r19)
    75e0:	b0c00117 	ldw	r3,4(r22)
    75e4:	30800728 	cmpgeui	r2,r6,28
    75e8:	98c00115 	stw	r3,4(r19)
    75ec:	1000611e 	bne	r2,zero,7774 <_realloc_r+0x4a0>
    75f0:	b0c00204 	addi	r3,r22,8
    75f4:	98800204 	addi	r2,r19,8
    75f8:	b1000217 	ldw	r4,8(r22)
    75fc:	003fc206 	br	7508 <_realloc_r+0x234>
    7600:	a0800317 	ldw	r2,12(r20)
    7604:	a0c00217 	ldw	r3,8(r20)
    7608:	89bfff04 	addi	r6,r17,-4
    760c:	31000968 	cmpgeui	r4,r6,37
    7610:	18800315 	stw	r2,12(r3)
    7614:	10c00215 	stw	r3,8(r2)
    7618:	38c00217 	ldw	r3,8(r7)
    761c:	38800317 	ldw	r2,12(r7)
    7620:	3a000204 	addi	r8,r7,8
    7624:	3de9883a 	add	r20,r7,r23
    7628:	18800315 	stw	r2,12(r3)
    762c:	10c00215 	stw	r3,8(r2)
    7630:	20006f1e 	bne	r4,zero,77f0 <_realloc_r+0x51c>
    7634:	30800530 	cmpltui	r2,r6,20
    7638:	b0c00017 	ldw	r3,0(r22)
    763c:	10006a1e 	bne	r2,zero,77e8 <_realloc_r+0x514>
    7640:	38c00215 	stw	r3,8(r7)
    7644:	b0c00117 	ldw	r3,4(r22)
    7648:	30800728 	cmpgeui	r2,r6,28
    764c:	38c00315 	stw	r3,12(r7)
    7650:	10007a1e 	bne	r2,zero,783c <_realloc_r+0x568>
    7654:	b0c00217 	ldw	r3,8(r22)
    7658:	38800404 	addi	r2,r7,16
    765c:	b5800204 	addi	r22,r22,8
    7660:	10c00015 	stw	r3,0(r2)
    7664:	b0c00117 	ldw	r3,4(r22)
    7668:	b823883a 	mov	r17,r23
    766c:	3825883a 	mov	r18,r7
    7670:	10c00115 	stw	r3,4(r2)
    7674:	b0c00217 	ldw	r3,8(r22)
    7678:	402d883a 	mov	r22,r8
    767c:	10c00215 	stw	r3,8(r2)
    7680:	003f6b06 	br	7430 <_realloc_r+0x15c>
    7684:	98bfff17 	ldw	r2,-4(r19)
    7688:	00ffff04 	movi	r3,-4
    768c:	10c4703a 	and	r2,r2,r3
    7690:	88a3883a 	add	r17,r17,r2
    7694:	9469883a 	add	r20,r18,r17
    7698:	003f6506 	br	7430 <_realloc_r+0x15c>
    769c:	b1fffe17 	ldw	r7,-8(r22)
    76a0:	91cfc83a 	sub	r7,r18,r7
    76a4:	39000117 	ldw	r4,4(r7)
    76a8:	214a703a 	and	r5,r4,r5
    76ac:	003f4106 	br	73b4 <_realloc_r+0xe0>
    76b0:	a0800317 	ldw	r2,12(r20)
    76b4:	a0c00217 	ldw	r3,8(r20)
    76b8:	2823883a 	mov	r17,r5
    76bc:	9169883a 	add	r20,r18,r5
    76c0:	18800315 	stw	r2,12(r3)
    76c4:	10c00215 	stw	r3,8(r2)
    76c8:	003f5906 	br	7430 <_realloc_r+0x15c>
    76cc:	b00b883a 	mov	r5,r22
    76d0:	9809883a 	mov	r4,r19
    76d4:	00061040 	call	6104 <memmove>
    76d8:	003f9006 	br	751c <_realloc_r+0x248>
    76dc:	80800404 	addi	r2,r16,16
    76e0:	b8bf3416 	blt	r23,r2,73b4 <_realloc_r+0xe0>
    76e4:	38800317 	ldw	r2,12(r7)
    76e8:	38c00217 	ldw	r3,8(r7)
    76ec:	89bfff04 	addi	r6,r17,-4
    76f0:	31000968 	cmpgeui	r4,r6,37
    76f4:	18800315 	stw	r2,12(r3)
    76f8:	10c00215 	stw	r3,8(r2)
    76fc:	3cc00204 	addi	r19,r7,8
    7700:	20005a1e 	bne	r4,zero,786c <_realloc_r+0x598>
    7704:	30800530 	cmpltui	r2,r6,20
    7708:	b0c00017 	ldw	r3,0(r22)
    770c:	1000551e 	bne	r2,zero,7864 <_realloc_r+0x590>
    7710:	38c00215 	stw	r3,8(r7)
    7714:	b0c00117 	ldw	r3,4(r22)
    7718:	30800728 	cmpgeui	r2,r6,28
    771c:	38c00315 	stw	r3,12(r7)
    7720:	1000661e 	bne	r2,zero,78bc <_realloc_r+0x5e8>
    7724:	b0c00217 	ldw	r3,8(r22)
    7728:	38800404 	addi	r2,r7,16
    772c:	b5800204 	addi	r22,r22,8
    7730:	10c00015 	stw	r3,0(r2)
    7734:	b0c00117 	ldw	r3,4(r22)
    7738:	10c00115 	stw	r3,4(r2)
    773c:	b0c00217 	ldw	r3,8(r22)
    7740:	10c00215 	stw	r3,8(r2)
    7744:	3c07883a 	add	r3,r7,r16
    7748:	bc05c83a 	sub	r2,r23,r16
    774c:	e0c00215 	stw	r3,8(fp)
    7750:	10800054 	ori	r2,r2,1
    7754:	18800115 	stw	r2,4(r3)
    7758:	38800117 	ldw	r2,4(r7)
    775c:	a809883a 	mov	r4,r21
    7760:	1080004c 	andi	r2,r2,1
    7764:	1420b03a 	or	r16,r2,r16
    7768:	3c000115 	stw	r16,4(r7)
    776c:	000d5100 	call	d510 <__malloc_unlock>
    7770:	003f4306 	br	7480 <_realloc_r+0x1ac>
    7774:	b0800217 	ldw	r2,8(r22)
    7778:	31800920 	cmpeqi	r6,r6,36
    777c:	98800215 	stw	r2,8(r19)
    7780:	b0800317 	ldw	r2,12(r22)
    7784:	98800315 	stw	r2,12(r19)
    7788:	3000061e 	bne	r6,zero,77a4 <_realloc_r+0x4d0>
    778c:	b0c00404 	addi	r3,r22,16
    7790:	98800404 	addi	r2,r19,16
    7794:	b1000417 	ldw	r4,16(r22)
    7798:	003f5b06 	br	7508 <_realloc_r+0x234>
    779c:	1805883a 	mov	r2,r3
    77a0:	003f1b06 	br	7410 <_realloc_r+0x13c>
    77a4:	b1000417 	ldw	r4,16(r22)
    77a8:	b0c00604 	addi	r3,r22,24
    77ac:	98800604 	addi	r2,r19,24
    77b0:	99000415 	stw	r4,16(r19)
    77b4:	b1000517 	ldw	r4,20(r22)
    77b8:	99000515 	stw	r4,20(r19)
    77bc:	b1000617 	ldw	r4,24(r22)
    77c0:	003f5106 	br	7508 <_realloc_r+0x234>
    77c4:	b00b883a 	mov	r5,r22
    77c8:	1809883a 	mov	r4,r3
    77cc:	d9c00015 	stw	r7,0(sp)
    77d0:	00061040 	call	6104 <memmove>
    77d4:	d9c00017 	ldw	r7,0(sp)
    77d8:	102d883a 	mov	r22,r2
    77dc:	b823883a 	mov	r17,r23
    77e0:	3825883a 	mov	r18,r7
    77e4:	003f1206 	br	7430 <_realloc_r+0x15c>
    77e8:	4005883a 	mov	r2,r8
    77ec:	003f9c06 	br	7660 <_realloc_r+0x38c>
    77f0:	b00b883a 	mov	r5,r22
    77f4:	4009883a 	mov	r4,r8
    77f8:	d9c00015 	stw	r7,0(sp)
    77fc:	00061040 	call	6104 <memmove>
    7800:	d9c00017 	ldw	r7,0(sp)
    7804:	102d883a 	mov	r22,r2
    7808:	b823883a 	mov	r17,r23
    780c:	3825883a 	mov	r18,r7
    7810:	003f0706 	br	7430 <_realloc_r+0x15c>
    7814:	b0800217 	ldw	r2,8(r22)
    7818:	31800920 	cmpeqi	r6,r6,36
    781c:	38800415 	stw	r2,16(r7)
    7820:	b0800317 	ldw	r2,12(r22)
    7824:	38800515 	stw	r2,20(r7)
    7828:	b1000417 	ldw	r4,16(r22)
    782c:	3000151e 	bne	r6,zero,7884 <_realloc_r+0x5b0>
    7830:	38800604 	addi	r2,r7,24
    7834:	b5800404 	addi	r22,r22,16
    7838:	003ef506 	br	7410 <_realloc_r+0x13c>
    783c:	b0800217 	ldw	r2,8(r22)
    7840:	31800920 	cmpeqi	r6,r6,36
    7844:	38800415 	stw	r2,16(r7)
    7848:	b0800317 	ldw	r2,12(r22)
    784c:	38800515 	stw	r2,20(r7)
    7850:	b0c00417 	ldw	r3,16(r22)
    7854:	3000121e 	bne	r6,zero,78a0 <_realloc_r+0x5cc>
    7858:	38800604 	addi	r2,r7,24
    785c:	b5800404 	addi	r22,r22,16
    7860:	003f7f06 	br	7660 <_realloc_r+0x38c>
    7864:	9805883a 	mov	r2,r19
    7868:	003fb106 	br	7730 <_realloc_r+0x45c>
    786c:	b00b883a 	mov	r5,r22
    7870:	9809883a 	mov	r4,r19
    7874:	d9c00015 	stw	r7,0(sp)
    7878:	00061040 	call	6104 <memmove>
    787c:	d9c00017 	ldw	r7,0(sp)
    7880:	003fb006 	br	7744 <_realloc_r+0x470>
    7884:	b5800604 	addi	r22,r22,24
    7888:	39000615 	stw	r4,24(r7)
    788c:	b13fff17 	ldw	r4,-4(r22)
    7890:	38800804 	addi	r2,r7,32
    7894:	39000715 	stw	r4,28(r7)
    7898:	b1000017 	ldw	r4,0(r22)
    789c:	003edc06 	br	7410 <_realloc_r+0x13c>
    78a0:	b5800604 	addi	r22,r22,24
    78a4:	38c00615 	stw	r3,24(r7)
    78a8:	b0ffff17 	ldw	r3,-4(r22)
    78ac:	38800804 	addi	r2,r7,32
    78b0:	38c00715 	stw	r3,28(r7)
    78b4:	b0c00017 	ldw	r3,0(r22)
    78b8:	003f6906 	br	7660 <_realloc_r+0x38c>
    78bc:	b0800217 	ldw	r2,8(r22)
    78c0:	31800920 	cmpeqi	r6,r6,36
    78c4:	38800415 	stw	r2,16(r7)
    78c8:	b0800317 	ldw	r2,12(r22)
    78cc:	38800515 	stw	r2,20(r7)
    78d0:	b0c00417 	ldw	r3,16(r22)
    78d4:	3000031e 	bne	r6,zero,78e4 <_realloc_r+0x610>
    78d8:	38800604 	addi	r2,r7,24
    78dc:	b5800404 	addi	r22,r22,16
    78e0:	003f9306 	br	7730 <_realloc_r+0x45c>
    78e4:	b5800604 	addi	r22,r22,24
    78e8:	38c00615 	stw	r3,24(r7)
    78ec:	b0ffff17 	ldw	r3,-4(r22)
    78f0:	38800804 	addi	r2,r7,32
    78f4:	38c00715 	stw	r3,28(r7)
    78f8:	b0c00017 	ldw	r3,0(r22)
    78fc:	003f8c06 	br	7730 <_realloc_r+0x45c>

00007900 <_sbrk_r>:
    7900:	defffe04 	addi	sp,sp,-8
    7904:	dc000015 	stw	r16,0(sp)
    7908:	00800074 	movhi	r2,1
    790c:	2021883a 	mov	r16,r4
    7910:	2809883a 	mov	r4,r5
    7914:	dfc00115 	stw	ra,4(sp)
    7918:	100d2215 	stw	zero,13448(r2)
    791c:	000d6e80 	call	d6e8 <sbrk>
    7920:	10ffffd8 	cmpnei	r3,r2,-1
    7924:	18000426 	beq	r3,zero,7938 <_sbrk_r+0x38>
    7928:	dfc00117 	ldw	ra,4(sp)
    792c:	dc000017 	ldw	r16,0(sp)
    7930:	dec00204 	addi	sp,sp,8
    7934:	f800283a 	ret
    7938:	00c00074 	movhi	r3,1
    793c:	18cd2217 	ldw	r3,13448(r3)
    7940:	183ff926 	beq	r3,zero,7928 <_sbrk_r+0x28>
    7944:	80c00015 	stw	r3,0(r16)
    7948:	dfc00117 	ldw	ra,4(sp)
    794c:	dc000017 	ldw	r16,0(sp)
    7950:	dec00204 	addi	sp,sp,8
    7954:	f800283a 	ret

00007958 <__sread>:
    7958:	defffe04 	addi	sp,sp,-8
    795c:	dc000015 	stw	r16,0(sp)
    7960:	2821883a 	mov	r16,r5
    7964:	2940038f 	ldh	r5,14(r5)
    7968:	dfc00115 	stw	ra,4(sp)
    796c:	00096340 	call	9634 <_read_r>
    7970:	10000716 	blt	r2,zero,7990 <__sread+0x38>
    7974:	80c01417 	ldw	r3,80(r16)
    7978:	1887883a 	add	r3,r3,r2
    797c:	80c01415 	stw	r3,80(r16)
    7980:	dfc00117 	ldw	ra,4(sp)
    7984:	dc000017 	ldw	r16,0(sp)
    7988:	dec00204 	addi	sp,sp,8
    798c:	f800283a 	ret
    7990:	80c0030b 	ldhu	r3,12(r16)
    7994:	18fbffcc 	andi	r3,r3,61439
    7998:	80c0030d 	sth	r3,12(r16)
    799c:	dfc00117 	ldw	ra,4(sp)
    79a0:	dc000017 	ldw	r16,0(sp)
    79a4:	dec00204 	addi	sp,sp,8
    79a8:	f800283a 	ret

000079ac <__seofread>:
    79ac:	0005883a 	mov	r2,zero
    79b0:	f800283a 	ret

000079b4 <__swrite>:
    79b4:	2880030b 	ldhu	r2,12(r5)
    79b8:	defffb04 	addi	sp,sp,-20
    79bc:	dcc00315 	stw	r19,12(sp)
    79c0:	dc800215 	stw	r18,8(sp)
    79c4:	dc400115 	stw	r17,4(sp)
    79c8:	dc000015 	stw	r16,0(sp)
    79cc:	dfc00415 	stw	ra,16(sp)
    79d0:	10c0400c 	andi	r3,r2,256
    79d4:	2821883a 	mov	r16,r5
    79d8:	2023883a 	mov	r17,r4
    79dc:	3025883a 	mov	r18,r6
    79e0:	3827883a 	mov	r19,r7
    79e4:	2940038f 	ldh	r5,14(r5)
    79e8:	18000c1e 	bne	r3,zero,7a1c <__swrite+0x68>
    79ec:	10bbffcc 	andi	r2,r2,61439
    79f0:	980f883a 	mov	r7,r19
    79f4:	900d883a 	mov	r6,r18
    79f8:	8809883a 	mov	r4,r17
    79fc:	8080030d 	sth	r2,12(r16)
    7a00:	dfc00417 	ldw	ra,16(sp)
    7a04:	dcc00317 	ldw	r19,12(sp)
    7a08:	dc800217 	ldw	r18,8(sp)
    7a0c:	dc400117 	ldw	r17,4(sp)
    7a10:	dc000017 	ldw	r16,0(sp)
    7a14:	dec00504 	addi	sp,sp,20
    7a18:	0008fb81 	jmpi	8fb8 <_write_r>
    7a1c:	01c00084 	movi	r7,2
    7a20:	000d883a 	mov	r6,zero
    7a24:	00095800 	call	9580 <_lseek_r>
    7a28:	8080030b 	ldhu	r2,12(r16)
    7a2c:	8140038f 	ldh	r5,14(r16)
    7a30:	003fee06 	br	79ec <__swrite+0x38>

00007a34 <__sseek>:
    7a34:	defffe04 	addi	sp,sp,-8
    7a38:	dc000015 	stw	r16,0(sp)
    7a3c:	2821883a 	mov	r16,r5
    7a40:	2940038f 	ldh	r5,14(r5)
    7a44:	dfc00115 	stw	ra,4(sp)
    7a48:	00095800 	call	9580 <_lseek_r>
    7a4c:	10ffffd8 	cmpnei	r3,r2,-1
    7a50:	18000826 	beq	r3,zero,7a74 <__sseek+0x40>
    7a54:	80c0030b 	ldhu	r3,12(r16)
    7a58:	80801415 	stw	r2,80(r16)
    7a5c:	18c40014 	ori	r3,r3,4096
    7a60:	80c0030d 	sth	r3,12(r16)
    7a64:	dfc00117 	ldw	ra,4(sp)
    7a68:	dc000017 	ldw	r16,0(sp)
    7a6c:	dec00204 	addi	sp,sp,8
    7a70:	f800283a 	ret
    7a74:	80c0030b 	ldhu	r3,12(r16)
    7a78:	18fbffcc 	andi	r3,r3,61439
    7a7c:	80c0030d 	sth	r3,12(r16)
    7a80:	dfc00117 	ldw	ra,4(sp)
    7a84:	dc000017 	ldw	r16,0(sp)
    7a88:	dec00204 	addi	sp,sp,8
    7a8c:	f800283a 	ret

00007a90 <__sclose>:
    7a90:	2940038f 	ldh	r5,14(r5)
    7a94:	000901c1 	jmpi	901c <_close_r>

00007a98 <__sprint_r.part.0>:
    7a98:	28801917 	ldw	r2,100(r5)
    7a9c:	defff604 	addi	sp,sp,-40
    7aa0:	dd000415 	stw	r20,16(sp)
    7aa4:	dfc00915 	stw	ra,36(sp)
    7aa8:	df000815 	stw	fp,32(sp)
    7aac:	ddc00715 	stw	r23,28(sp)
    7ab0:	dd800615 	stw	r22,24(sp)
    7ab4:	dd400515 	stw	r21,20(sp)
    7ab8:	dcc00315 	stw	r19,12(sp)
    7abc:	dc800215 	stw	r18,8(sp)
    7ac0:	dc400115 	stw	r17,4(sp)
    7ac4:	dc000015 	stw	r16,0(sp)
    7ac8:	1088000c 	andi	r2,r2,8192
    7acc:	3029883a 	mov	r20,r6
    7ad0:	10002c26 	beq	r2,zero,7b84 <__sprint_r.part.0+0xec>
    7ad4:	30800217 	ldw	r2,8(r6)
    7ad8:	2823883a 	mov	r17,r5
    7adc:	2027883a 	mov	r19,r4
    7ae0:	35400017 	ldw	r21,0(r6)
    7ae4:	05ffff04 	movi	r23,-4
    7ae8:	10002426 	beq	r2,zero,7b7c <__sprint_r.part.0+0xe4>
    7aec:	ad800117 	ldw	r22,4(r21)
    7af0:	ac000017 	ldw	r16,0(r21)
    7af4:	b024d0ba 	srli	r18,r22,2
    7af8:	90001b26 	beq	r18,zero,7b68 <__sprint_r.part.0+0xd0>
    7afc:	0039883a 	mov	fp,zero
    7b00:	00000206 	br	7b0c <__sprint_r.part.0+0x74>
    7b04:	84000104 	addi	r16,r16,4
    7b08:	97001626 	beq	r18,fp,7b64 <__sprint_r.part.0+0xcc>
    7b0c:	81400017 	ldw	r5,0(r16)
    7b10:	880d883a 	mov	r6,r17
    7b14:	9809883a 	mov	r4,r19
    7b18:	00093980 	call	9398 <_fputwc_r>
    7b1c:	10bfffe0 	cmpeqi	r2,r2,-1
    7b20:	e7000044 	addi	fp,fp,1
    7b24:	103ff726 	beq	r2,zero,7b04 <__sprint_r.part.0+0x6c>
    7b28:	00bfffc4 	movi	r2,-1
    7b2c:	a0000215 	stw	zero,8(r20)
    7b30:	a0000115 	stw	zero,4(r20)
    7b34:	dfc00917 	ldw	ra,36(sp)
    7b38:	df000817 	ldw	fp,32(sp)
    7b3c:	ddc00717 	ldw	r23,28(sp)
    7b40:	dd800617 	ldw	r22,24(sp)
    7b44:	dd400517 	ldw	r21,20(sp)
    7b48:	dd000417 	ldw	r20,16(sp)
    7b4c:	dcc00317 	ldw	r19,12(sp)
    7b50:	dc800217 	ldw	r18,8(sp)
    7b54:	dc400117 	ldw	r17,4(sp)
    7b58:	dc000017 	ldw	r16,0(sp)
    7b5c:	dec00a04 	addi	sp,sp,40
    7b60:	f800283a 	ret
    7b64:	a0800217 	ldw	r2,8(r20)
    7b68:	b5ec703a 	and	r22,r22,r23
    7b6c:	1585c83a 	sub	r2,r2,r22
    7b70:	a0800215 	stw	r2,8(r20)
    7b74:	ad400204 	addi	r21,r21,8
    7b78:	103fdc1e 	bne	r2,zero,7aec <__sprint_r.part.0+0x54>
    7b7c:	0005883a 	mov	r2,zero
    7b80:	003fea06 	br	7b2c <__sprint_r.part.0+0x94>
    7b84:	0004f080 	call	4f08 <__sfvwrite_r>
    7b88:	003fe806 	br	7b2c <__sprint_r.part.0+0x94>

00007b8c <__sprint_r>:
    7b8c:	30c00217 	ldw	r3,8(r6)
    7b90:	18000126 	beq	r3,zero,7b98 <__sprint_r+0xc>
    7b94:	0007a981 	jmpi	7a98 <__sprint_r.part.0>
    7b98:	30000115 	stw	zero,4(r6)
    7b9c:	0005883a 	mov	r2,zero
    7ba0:	f800283a 	ret

00007ba4 <___vfiprintf_internal_r>:
    7ba4:	deffd004 	addi	sp,sp,-192
    7ba8:	df002e15 	stw	fp,184(sp)
    7bac:	dcc02915 	stw	r19,164(sp)
    7bb0:	dc802815 	stw	r18,160(sp)
    7bb4:	dfc02f15 	stw	ra,188(sp)
    7bb8:	ddc02d15 	stw	r23,180(sp)
    7bbc:	dd802c15 	stw	r22,176(sp)
    7bc0:	dd402b15 	stw	r21,172(sp)
    7bc4:	dd002a15 	stw	r20,168(sp)
    7bc8:	dc402715 	stw	r17,156(sp)
    7bcc:	dc002615 	stw	r16,152(sp)
    7bd0:	d9c00315 	stw	r7,12(sp)
    7bd4:	2027883a 	mov	r19,r4
    7bd8:	2825883a 	mov	r18,r5
    7bdc:	3039883a 	mov	fp,r6
    7be0:	20000226 	beq	r4,zero,7bec <___vfiprintf_internal_r+0x48>
    7be4:	20800e17 	ldw	r2,56(r4)
    7be8:	1002ba26 	beq	r2,zero,86d4 <___vfiprintf_internal_r+0xb30>
    7bec:	9080030b 	ldhu	r2,12(r18)
    7bf0:	10c8000c 	andi	r3,r2,8192
    7bf4:	1800061e 	bne	r3,zero,7c10 <___vfiprintf_internal_r+0x6c>
    7bf8:	90c01917 	ldw	r3,100(r18)
    7bfc:	0137ffc4 	movi	r4,-8193
    7c00:	10880014 	ori	r2,r2,8192
    7c04:	1906703a 	and	r3,r3,r4
    7c08:	9080030d 	sth	r2,12(r18)
    7c0c:	90c01915 	stw	r3,100(r18)
    7c10:	10c0020c 	andi	r3,r2,8
    7c14:	18009426 	beq	r3,zero,7e68 <___vfiprintf_internal_r+0x2c4>
    7c18:	90c00417 	ldw	r3,16(r18)
    7c1c:	18009226 	beq	r3,zero,7e68 <___vfiprintf_internal_r+0x2c4>
    7c20:	1080068c 	andi	r2,r2,26
    7c24:	10800298 	cmpnei	r2,r2,10
    7c28:	10009726 	beq	r2,zero,7e88 <___vfiprintf_internal_r+0x2e4>
    7c2c:	dc401604 	addi	r17,sp,88
    7c30:	dc400915 	stw	r17,36(sp)
    7c34:	d8000b15 	stw	zero,44(sp)
    7c38:	d8000a15 	stw	zero,40(sp)
    7c3c:	8811883a 	mov	r8,r17
    7c40:	d8000415 	stw	zero,16(sp)
    7c44:	d8000015 	stw	zero,0(sp)
    7c48:	e0800007 	ldb	r2,0(fp)
    7c4c:	1000a226 	beq	r2,zero,7ed8 <___vfiprintf_internal_r+0x334>
    7c50:	10800960 	cmpeqi	r2,r2,37
    7c54:	1003eb1e 	bne	r2,zero,8c04 <___vfiprintf_internal_r+0x1060>
    7c58:	e021883a 	mov	r16,fp
    7c5c:	00000206 	br	7c68 <___vfiprintf_internal_r+0xc4>
    7c60:	18009226 	beq	r3,zero,7eac <___vfiprintf_internal_r+0x308>
    7c64:	a021883a 	mov	r16,r20
    7c68:	80800047 	ldb	r2,1(r16)
    7c6c:	85000044 	addi	r20,r16,1
    7c70:	10c00958 	cmpnei	r3,r2,37
    7c74:	103ffa1e 	bne	r2,zero,7c60 <___vfiprintf_internal_r+0xbc>
    7c78:	a72bc83a 	sub	r21,r20,fp
    7c7c:	a8009626 	beq	r21,zero,7ed8 <___vfiprintf_internal_r+0x334>
    7c80:	d8c00b17 	ldw	r3,44(sp)
    7c84:	d8800a17 	ldw	r2,40(sp)
    7c88:	47000015 	stw	fp,0(r8)
    7c8c:	a8c7883a 	add	r3,r21,r3
    7c90:	10800044 	addi	r2,r2,1
    7c94:	d8800a15 	stw	r2,40(sp)
    7c98:	45400115 	stw	r21,4(r8)
    7c9c:	d8c00b15 	stw	r3,44(sp)
    7ca0:	10800208 	cmpgei	r2,r2,8
    7ca4:	1000841e 	bne	r2,zero,7eb8 <___vfiprintf_internal_r+0x314>
    7ca8:	42000204 	addi	r8,r8,8
    7cac:	d8c00017 	ldw	r3,0(sp)
    7cb0:	80800047 	ldb	r2,1(r16)
    7cb4:	1d47883a 	add	r3,r3,r21
    7cb8:	d8c00015 	stw	r3,0(sp)
    7cbc:	10008626 	beq	r2,zero,7ed8 <___vfiprintf_internal_r+0x334>
    7cc0:	a0800047 	ldb	r2,1(r20)
    7cc4:	a7000044 	addi	fp,r20,1
    7cc8:	d8000845 	stb	zero,33(sp)
    7ccc:	000b883a 	mov	r5,zero
    7cd0:	000d883a 	mov	r6,zero
    7cd4:	027fffc4 	movi	r9,-1
    7cd8:	0021883a 	mov	r16,zero
    7cdc:	0019883a 	mov	r12,zero
    7ce0:	e7000044 	addi	fp,fp,1
    7ce4:	10fff804 	addi	r3,r2,-32
    7ce8:	19001668 	cmpgeui	r4,r3,89
    7cec:	20009e1e 	bne	r4,zero,7f68 <___vfiprintf_internal_r+0x3c4>
    7cf0:	180690ba 	slli	r3,r3,2
    7cf4:	01000034 	movhi	r4,0
    7cf8:	1909883a 	add	r4,r3,r4
    7cfc:	20df4117 	ldw	r3,32004(r4)
    7d00:	1800683a 	jmp	r3
    7d04:	00008040 	call	804 <strlen+0x6c>
    7d08:	00007f68 	cmpgeui	zero,zero,509
    7d0c:	00007f68 	cmpgeui	zero,zero,509
    7d10:	00008034 	movhi	zero,512
    7d14:	00007f68 	cmpgeui	zero,zero,509
    7d18:	00007f68 	cmpgeui	zero,zero,509
    7d1c:	00007f68 	cmpgeui	zero,zero,509
    7d20:	00007f68 	cmpgeui	zero,zero,509
    7d24:	00007f68 	cmpgeui	zero,zero,509
    7d28:	00007f68 	cmpgeui	zero,zero,509
    7d2c:	0000800c 	andi	zero,zero,512
    7d30:	00007ffc 	xorhi	zero,zero,511
    7d34:	00007f68 	cmpgeui	zero,zero,509
    7d38:	00007fe4 	muli	zero,zero,511
    7d3c:	00007f98 	cmpnei	zero,zero,510
    7d40:	00007f68 	cmpgeui	zero,zero,509
    7d44:	00007f8c 	andi	zero,zero,510
    7d48:	00007f30 	cmpltui	zero,zero,508
    7d4c:	00007f30 	cmpltui	zero,zero,508
    7d50:	00007f30 	cmpltui	zero,zero,508
    7d54:	00007f30 	cmpltui	zero,zero,508
    7d58:	00007f30 	cmpltui	zero,zero,508
    7d5c:	00007f30 	cmpltui	zero,zero,508
    7d60:	00007f30 	cmpltui	zero,zero,508
    7d64:	00007f30 	cmpltui	zero,zero,508
    7d68:	00007f30 	cmpltui	zero,zero,508
    7d6c:	00007f68 	cmpgeui	zero,zero,509
    7d70:	00007f68 	cmpgeui	zero,zero,509
    7d74:	00007f68 	cmpgeui	zero,zero,509
    7d78:	00007f68 	cmpgeui	zero,zero,509
    7d7c:	00007f68 	cmpgeui	zero,zero,509
    7d80:	00007f68 	cmpgeui	zero,zero,509
    7d84:	00007f68 	cmpgeui	zero,zero,509
    7d88:	00007f68 	cmpgeui	zero,zero,509
    7d8c:	00007f68 	cmpgeui	zero,zero,509
    7d90:	00007f68 	cmpgeui	zero,zero,509
    7d94:	000085fc 	xorhi	zero,zero,535
    7d98:	00007f68 	cmpgeui	zero,zero,509
    7d9c:	00007f68 	cmpgeui	zero,zero,509
    7da0:	00007f68 	cmpgeui	zero,zero,509
    7da4:	00007f68 	cmpgeui	zero,zero,509
    7da8:	00007f68 	cmpgeui	zero,zero,509
    7dac:	00007f68 	cmpgeui	zero,zero,509
    7db0:	00007f68 	cmpgeui	zero,zero,509
    7db4:	00007f68 	cmpgeui	zero,zero,509
    7db8:	00007f68 	cmpgeui	zero,zero,509
    7dbc:	00007f68 	cmpgeui	zero,zero,509
    7dc0:	00008594 	movui	zero,534
    7dc4:	00007f68 	cmpgeui	zero,zero,509
    7dc8:	00007f68 	cmpgeui	zero,zero,509
    7dcc:	00007f68 	cmpgeui	zero,zero,509
    7dd0:	00007f68 	cmpgeui	zero,zero,509
    7dd4:	00007f68 	cmpgeui	zero,zero,509
    7dd8:	000085c8 	cmpgei	zero,zero,535
    7ddc:	00007f68 	cmpgeui	zero,zero,509
    7de0:	00007f68 	cmpgeui	zero,zero,509
    7de4:	00008198 	cmpnei	zero,zero,518
    7de8:	00007f68 	cmpgeui	zero,zero,509
    7dec:	00007f68 	cmpgeui	zero,zero,509
    7df0:	00007f68 	cmpgeui	zero,zero,509
    7df4:	00007f68 	cmpgeui	zero,zero,509
    7df8:	00007f68 	cmpgeui	zero,zero,509
    7dfc:	00007f68 	cmpgeui	zero,zero,509
    7e00:	00007f68 	cmpgeui	zero,zero,509
    7e04:	00007f68 	cmpgeui	zero,zero,509
    7e08:	00007f68 	cmpgeui	zero,zero,509
    7e0c:	00007f68 	cmpgeui	zero,zero,509
    7e10:	00008334 	movhi	zero,524
    7e14:	000082c0 	call	82c <strlen+0x94>
    7e18:	00007f68 	cmpgeui	zero,zero,509
    7e1c:	00007f68 	cmpgeui	zero,zero,509
    7e20:	00007f68 	cmpgeui	zero,zero,509
    7e24:	000080c8 	cmpgei	zero,zero,515
    7e28:	000082c0 	call	82c <strlen+0x94>
    7e2c:	00007f68 	cmpgeui	zero,zero,509
    7e30:	00007f68 	cmpgeui	zero,zero,509
    7e34:	000080b4 	movhi	zero,514
    7e38:	00007f68 	cmpgeui	zero,zero,509
    7e3c:	00008280 	call	828 <strlen+0x90>
    7e40:	00008158 	cmpnei	zero,zero,517
    7e44:	000080e0 	cmpeqi	zero,zero,515
    7e48:	000080d4 	movui	zero,515
    7e4c:	00007f68 	cmpgeui	zero,zero,509
    7e50:	00008220 	cmpeqi	zero,zero,520
    7e54:	00007f68 	cmpgeui	zero,zero,509
    7e58:	000081e0 	cmpeqi	zero,zero,519
    7e5c:	00007f68 	cmpgeui	zero,zero,509
    7e60:	00007f68 	cmpgeui	zero,zero,509
    7e64:	0000806c 	andhi	zero,zero,513
    7e68:	900b883a 	mov	r5,r18
    7e6c:	9809883a 	mov	r4,r19
    7e70:	0002a900 	call	2a90 <__swsetup_r>
    7e74:	10040b1e 	bne	r2,zero,8ea4 <___vfiprintf_internal_r+0x1300>
    7e78:	9080030b 	ldhu	r2,12(r18)
    7e7c:	1080068c 	andi	r2,r2,26
    7e80:	10800298 	cmpnei	r2,r2,10
    7e84:	103f691e 	bne	r2,zero,7c2c <___vfiprintf_internal_r+0x88>
    7e88:	9080038f 	ldh	r2,14(r18)
    7e8c:	103f6716 	blt	r2,zero,7c2c <___vfiprintf_internal_r+0x88>
    7e90:	d9c00317 	ldw	r7,12(sp)
    7e94:	e00d883a 	mov	r6,fp
    7e98:	900b883a 	mov	r5,r18
    7e9c:	9809883a 	mov	r4,r19
    7ea0:	0008ef80 	call	8ef8 <__sbprintf>
    7ea4:	d8800015 	stw	r2,0(sp)
    7ea8:	00001406 	br	7efc <___vfiprintf_internal_r+0x358>
    7eac:	a72bc83a 	sub	r21,r20,fp
    7eb0:	a83f8326 	beq	r21,zero,7cc0 <___vfiprintf_internal_r+0x11c>
    7eb4:	003f7206 	br	7c80 <___vfiprintf_internal_r+0xdc>
    7eb8:	18032f26 	beq	r3,zero,8b78 <___vfiprintf_internal_r+0xfd4>
    7ebc:	d9800904 	addi	r6,sp,36
    7ec0:	900b883a 	mov	r5,r18
    7ec4:	9809883a 	mov	r4,r19
    7ec8:	0007a980 	call	7a98 <__sprint_r.part.0>
    7ecc:	1000081e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    7ed0:	8811883a 	mov	r8,r17
    7ed4:	003f7506 	br	7cac <___vfiprintf_internal_r+0x108>
    7ed8:	d8800b17 	ldw	r2,44(sp)
    7edc:	10000426 	beq	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    7ee0:	d9800904 	addi	r6,sp,36
    7ee4:	900b883a 	mov	r5,r18
    7ee8:	9809883a 	mov	r4,r19
    7eec:	0007a980 	call	7a98 <__sprint_r.part.0>
    7ef0:	9080030b 	ldhu	r2,12(r18)
    7ef4:	1080100c 	andi	r2,r2,64
    7ef8:	1003ea1e 	bne	r2,zero,8ea4 <___vfiprintf_internal_r+0x1300>
    7efc:	d8800017 	ldw	r2,0(sp)
    7f00:	dfc02f17 	ldw	ra,188(sp)
    7f04:	df002e17 	ldw	fp,184(sp)
    7f08:	ddc02d17 	ldw	r23,180(sp)
    7f0c:	dd802c17 	ldw	r22,176(sp)
    7f10:	dd402b17 	ldw	r21,172(sp)
    7f14:	dd002a17 	ldw	r20,168(sp)
    7f18:	dcc02917 	ldw	r19,164(sp)
    7f1c:	dc802817 	ldw	r18,160(sp)
    7f20:	dc402717 	ldw	r17,156(sp)
    7f24:	dc002617 	ldw	r16,152(sp)
    7f28:	dec03004 	addi	sp,sp,192
    7f2c:	f800283a 	ret
    7f30:	0021883a 	mov	r16,zero
    7f34:	113ff404 	addi	r4,r2,-48
    7f38:	800690ba 	slli	r3,r16,2
    7f3c:	e7000044 	addi	fp,fp,1
    7f40:	e0bfffc7 	ldb	r2,-1(fp)
    7f44:	1c21883a 	add	r16,r3,r16
    7f48:	8421883a 	add	r16,r16,r16
    7f4c:	2421883a 	add	r16,r4,r16
    7f50:	113ff404 	addi	r4,r2,-48
    7f54:	20c002b0 	cmpltui	r3,r4,10
    7f58:	183ff71e 	bne	r3,zero,7f38 <___vfiprintf_internal_r+0x394>
    7f5c:	10fff804 	addi	r3,r2,-32
    7f60:	19001668 	cmpgeui	r4,r3,89
    7f64:	203f6226 	beq	r4,zero,7cf0 <___vfiprintf_internal_r+0x14c>
    7f68:	29403fcc 	andi	r5,r5,255
    7f6c:	2803ab1e 	bne	r5,zero,8e1c <___vfiprintf_internal_r+0x1278>
    7f70:	103fd926 	beq	r2,zero,7ed8 <___vfiprintf_internal_r+0x334>
    7f74:	d8800c05 	stb	r2,48(sp)
    7f78:	d8000845 	stb	zero,33(sp)
    7f7c:	05400044 	movi	r21,1
    7f80:	05800044 	movi	r22,1
    7f84:	ddc00c04 	addi	r23,sp,48
    7f88:	0000f306 	br	8358 <___vfiprintf_internal_r+0x7b4>
    7f8c:	63002014 	ori	r12,r12,128
    7f90:	e0800007 	ldb	r2,0(fp)
    7f94:	003f5206 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    7f98:	e0800007 	ldb	r2,0(fp)
    7f9c:	e0c00044 	addi	r3,fp,1
    7fa0:	11000aa0 	cmpeqi	r4,r2,42
    7fa4:	2003c21e 	bne	r4,zero,8eb0 <___vfiprintf_internal_r+0x130c>
    7fa8:	113ff404 	addi	r4,r2,-48
    7fac:	21c002b0 	cmpltui	r7,r4,10
    7fb0:	1839883a 	mov	fp,r3
    7fb4:	0013883a 	mov	r9,zero
    7fb8:	383f4a26 	beq	r7,zero,7ce4 <___vfiprintf_internal_r+0x140>
    7fbc:	480690ba 	slli	r3,r9,2
    7fc0:	e7000044 	addi	fp,fp,1
    7fc4:	e0bfffc7 	ldb	r2,-1(fp)
    7fc8:	1a53883a 	add	r9,r3,r9
    7fcc:	4a53883a 	add	r9,r9,r9
    7fd0:	4913883a 	add	r9,r9,r4
    7fd4:	113ff404 	addi	r4,r2,-48
    7fd8:	20c002b0 	cmpltui	r3,r4,10
    7fdc:	183ff71e 	bne	r3,zero,7fbc <___vfiprintf_internal_r+0x418>
    7fe0:	003f4006 	br	7ce4 <___vfiprintf_internal_r+0x140>
    7fe4:	e0800003 	ldbu	r2,0(fp)
    7fe8:	10803fcc 	andi	r2,r2,255
    7fec:	1080201c 	xori	r2,r2,128
    7ff0:	63000114 	ori	r12,r12,4
    7ff4:	10bfe004 	addi	r2,r2,-128
    7ff8:	003f3906 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    7ffc:	01400044 	movi	r5,1
    8000:	01800ac4 	movi	r6,43
    8004:	e0800007 	ldb	r2,0(fp)
    8008:	003f3506 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    800c:	d8800317 	ldw	r2,12(sp)
    8010:	14000017 	ldw	r16,0(r2)
    8014:	15c00104 	addi	r23,r2,4
    8018:	e0800003 	ldbu	r2,0(fp)
    801c:	80031416 	blt	r16,zero,8c70 <___vfiprintf_internal_r+0x10cc>
    8020:	ddc00315 	stw	r23,12(sp)
    8024:	10803fcc 	andi	r2,r2,255
    8028:	1080201c 	xori	r2,r2,128
    802c:	10bfe004 	addi	r2,r2,-128
    8030:	003f2b06 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    8034:	63000054 	ori	r12,r12,1
    8038:	e0800007 	ldb	r2,0(fp)
    803c:	003f2806 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    8040:	30c03fcc 	andi	r3,r6,255
    8044:	18c0201c 	xori	r3,r3,128
    8048:	18ffe004 	addi	r3,r3,-128
    804c:	e0800003 	ldbu	r2,0(fp)
    8050:	183ff41e 	bne	r3,zero,8024 <___vfiprintf_internal_r+0x480>
    8054:	10803fcc 	andi	r2,r2,255
    8058:	1080201c 	xori	r2,r2,128
    805c:	01400044 	movi	r5,1
    8060:	01800804 	movi	r6,32
    8064:	10bfe004 	addi	r2,r2,-128
    8068:	003f1d06 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    806c:	29403fcc 	andi	r5,r5,255
    8070:	2803741e 	bne	r5,zero,8e44 <___vfiprintf_internal_r+0x12a0>
    8074:	00c00074 	movhi	r3,1
    8078:	18fd8a04 	addi	r3,r3,-2520
    807c:	d8c00415 	stw	r3,16(sp)
    8080:	60c0080c 	andi	r3,r12,32
    8084:	18004b26 	beq	r3,zero,81b4 <___vfiprintf_internal_r+0x610>
    8088:	d8c00317 	ldw	r3,12(sp)
    808c:	1d400017 	ldw	r21,0(r3)
    8090:	1d800117 	ldw	r22,4(r3)
    8094:	18c00204 	addi	r3,r3,8
    8098:	d8c00315 	stw	r3,12(sp)
    809c:	60c0004c 	andi	r3,r12,1
    80a0:	18000226 	beq	r3,zero,80ac <___vfiprintf_internal_r+0x508>
    80a4:	ad86b03a 	or	r3,r21,r22
    80a8:	1802df1e 	bne	r3,zero,8c28 <___vfiprintf_internal_r+0x1084>
    80ac:	00800084 	movi	r2,2
    80b0:	00001906 	br	8118 <___vfiprintf_internal_r+0x574>
    80b4:	e0800007 	ldb	r2,0(fp)
    80b8:	10c01b18 	cmpnei	r3,r2,108
    80bc:	18033026 	beq	r3,zero,8d80 <___vfiprintf_internal_r+0x11dc>
    80c0:	63000414 	ori	r12,r12,16
    80c4:	003f0606 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    80c8:	63001014 	ori	r12,r12,64
    80cc:	e0800007 	ldb	r2,0(fp)
    80d0:	003f0306 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    80d4:	63000814 	ori	r12,r12,32
    80d8:	e0800007 	ldb	r2,0(fp)
    80dc:	003f0006 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    80e0:	d8c00317 	ldw	r3,12(sp)
    80e4:	00800c04 	movi	r2,48
    80e8:	d8800885 	stb	r2,34(sp)
    80ec:	00801e04 	movi	r2,120
    80f0:	01000074 	movhi	r4,1
    80f4:	d88008c5 	stb	r2,35(sp)
    80f8:	1d400017 	ldw	r21,0(r3)
    80fc:	18800104 	addi	r2,r3,4
    8100:	d8800315 	stw	r2,12(sp)
    8104:	20bd8a04 	addi	r2,r4,-2520
    8108:	d8800415 	stw	r2,16(sp)
    810c:	002d883a 	mov	r22,zero
    8110:	63000094 	ori	r12,r12,2
    8114:	00800084 	movi	r2,2
    8118:	d8000845 	stb	zero,33(sp)
    811c:	48ffffe0 	cmpeqi	r3,r9,-1
    8120:	001b883a 	mov	r13,zero
    8124:	18014c1e 	bne	r3,zero,8658 <___vfiprintf_internal_r+0xab4>
    8128:	053fdfc4 	movi	r20,-129
    812c:	ad86b03a 	or	r3,r21,r22
    8130:	6528703a 	and	r20,r12,r20
    8134:	1802411e 	bne	r3,zero,8a3c <___vfiprintf_internal_r+0xe98>
    8138:	48030d1e 	bne	r9,zero,8d70 <___vfiprintf_internal_r+0x11cc>
    813c:	1000791e 	bne	r2,zero,8324 <___vfiprintf_internal_r+0x780>
    8140:	6580004c 	andi	r22,r12,1
    8144:	b002b126 	beq	r22,zero,8c0c <___vfiprintf_internal_r+0x1068>
    8148:	00800c04 	movi	r2,48
    814c:	d88015c5 	stb	r2,87(sp)
    8150:	ddc015c4 	addi	r23,sp,87
    8154:	00017e06 	br	8750 <___vfiprintf_internal_r+0xbac>
    8158:	29403fcc 	andi	r5,r5,255
    815c:	2803461e 	bne	r5,zero,8e78 <___vfiprintf_internal_r+0x12d4>
    8160:	6080080c 	andi	r2,r12,32
    8164:	10016b1e 	bne	r2,zero,8714 <___vfiprintf_internal_r+0xb70>
    8168:	d8800317 	ldw	r2,12(sp)
    816c:	60c0040c 	andi	r3,r12,16
    8170:	15400017 	ldw	r21,0(r2)
    8174:	10800104 	addi	r2,r2,4
    8178:	18010d1e 	bne	r3,zero,85b0 <___vfiprintf_internal_r+0xa0c>
    817c:	60c0100c 	andi	r3,r12,64
    8180:	18031326 	beq	r3,zero,8dd0 <___vfiprintf_internal_r+0x122c>
    8184:	d8800315 	stw	r2,12(sp)
    8188:	ad7fffcc 	andi	r21,r21,65535
    818c:	002d883a 	mov	r22,zero
    8190:	0005883a 	mov	r2,zero
    8194:	003fe006 	br	8118 <___vfiprintf_internal_r+0x574>
    8198:	29403fcc 	andi	r5,r5,255
    819c:	2803251e 	bne	r5,zero,8e34 <___vfiprintf_internal_r+0x1290>
    81a0:	00c00074 	movhi	r3,1
    81a4:	18fd8504 	addi	r3,r3,-2540
    81a8:	d8c00415 	stw	r3,16(sp)
    81ac:	60c0080c 	andi	r3,r12,32
    81b0:	183fb51e 	bne	r3,zero,8088 <___vfiprintf_internal_r+0x4e4>
    81b4:	d9000317 	ldw	r4,12(sp)
    81b8:	60c0040c 	andi	r3,r12,16
    81bc:	25400017 	ldw	r21,0(r4)
    81c0:	21000104 	addi	r4,r4,4
    81c4:	d9000315 	stw	r4,12(sp)
    81c8:	18026e1e 	bne	r3,zero,8b84 <___vfiprintf_internal_r+0xfe0>
    81cc:	60c0100c 	andi	r3,r12,64
    81d0:	18026c26 	beq	r3,zero,8b84 <___vfiprintf_internal_r+0xfe0>
    81d4:	ad7fffcc 	andi	r21,r21,65535
    81d8:	002d883a 	mov	r22,zero
    81dc:	003faf06 	br	809c <___vfiprintf_internal_r+0x4f8>
    81e0:	29403fcc 	andi	r5,r5,255
    81e4:	2803151e 	bne	r5,zero,8e3c <___vfiprintf_internal_r+0x1298>
    81e8:	6080080c 	andi	r2,r12,32
    81ec:	10013b1e 	bne	r2,zero,86dc <___vfiprintf_internal_r+0xb38>
    81f0:	d8800317 	ldw	r2,12(sp)
    81f4:	60c0040c 	andi	r3,r12,16
    81f8:	15400017 	ldw	r21,0(r2)
    81fc:	10800104 	addi	r2,r2,4
    8200:	1800f81e 	bne	r3,zero,85e4 <___vfiprintf_internal_r+0xa40>
    8204:	60c0100c 	andi	r3,r12,64
    8208:	1802ed26 	beq	r3,zero,8dc0 <___vfiprintf_internal_r+0x121c>
    820c:	d8800315 	stw	r2,12(sp)
    8210:	ad7fffcc 	andi	r21,r21,65535
    8214:	002d883a 	mov	r22,zero
    8218:	00800044 	movi	r2,1
    821c:	003fbe06 	br	8118 <___vfiprintf_internal_r+0x574>
    8220:	d8800317 	ldw	r2,12(sp)
    8224:	d8000845 	stb	zero,33(sp)
    8228:	15c00017 	ldw	r23,0(r2)
    822c:	15000104 	addi	r20,r2,4
    8230:	b802da26 	beq	r23,zero,8d9c <___vfiprintf_internal_r+0x11f8>
    8234:	48bfffe0 	cmpeqi	r2,r9,-1
    8238:	1002901e 	bne	r2,zero,8c7c <___vfiprintf_internal_r+0x10d8>
    823c:	480d883a 	mov	r6,r9
    8240:	000b883a 	mov	r5,zero
    8244:	b809883a 	mov	r4,r23
    8248:	da000315 	stw	r8,12(sp)
    824c:	db000215 	stw	r12,8(sp)
    8250:	da400115 	stw	r9,4(sp)
    8254:	0005f1c0 	call	5f1c <memchr>
    8258:	da400117 	ldw	r9,4(sp)
    825c:	db000217 	ldw	r12,8(sp)
    8260:	da000317 	ldw	r8,12(sp)
    8264:	1002ef26 	beq	r2,zero,8e24 <___vfiprintf_internal_r+0x1280>
    8268:	15edc83a 	sub	r22,r2,r23
    826c:	b02b883a 	mov	r21,r22
    8270:	b000010e 	bge	r22,zero,8278 <___vfiprintf_internal_r+0x6d4>
    8274:	002b883a 	mov	r21,zero
    8278:	dd000315 	stw	r20,12(sp)
    827c:	00003606 	br	8358 <___vfiprintf_internal_r+0x7b4>
    8280:	29403fcc 	andi	r5,r5,255
    8284:	2802fa1e 	bne	r5,zero,8e70 <___vfiprintf_internal_r+0x12cc>
    8288:	d9000317 	ldw	r4,12(sp)
    828c:	6080080c 	andi	r2,r12,32
    8290:	20c00104 	addi	r3,r4,4
    8294:	10026a1e 	bne	r2,zero,8c40 <___vfiprintf_internal_r+0x109c>
    8298:	6080040c 	andi	r2,r12,16
    829c:	1002891e 	bne	r2,zero,8cc4 <___vfiprintf_internal_r+0x1120>
    82a0:	6300100c 	andi	r12,r12,64
    82a4:	60028726 	beq	r12,zero,8cc4 <___vfiprintf_internal_r+0x1120>
    82a8:	d8800317 	ldw	r2,12(sp)
    82ac:	d8c00315 	stw	r3,12(sp)
    82b0:	d8c00017 	ldw	r3,0(sp)
    82b4:	10800017 	ldw	r2,0(r2)
    82b8:	10c0000d 	sth	r3,0(r2)
    82bc:	003e6206 	br	7c48 <___vfiprintf_internal_r+0xa4>
    82c0:	29403fcc 	andi	r5,r5,255
    82c4:	2802e81e 	bne	r5,zero,8e68 <___vfiprintf_internal_r+0x12c4>
    82c8:	6080080c 	andi	r2,r12,32
    82cc:	10010a1e 	bne	r2,zero,86f8 <___vfiprintf_internal_r+0xb54>
    82d0:	d8800317 	ldw	r2,12(sp)
    82d4:	60c0040c 	andi	r3,r12,16
    82d8:	10800104 	addi	r2,r2,4
    82dc:	1800ce1e 	bne	r3,zero,8618 <___vfiprintf_internal_r+0xa74>
    82e0:	60c0100c 	andi	r3,r12,64
    82e4:	1800cc26 	beq	r3,zero,8618 <___vfiprintf_internal_r+0xa74>
    82e8:	d8c00317 	ldw	r3,12(sp)
    82ec:	d8800315 	stw	r2,12(sp)
    82f0:	1d40000f 	ldh	r21,0(r3)
    82f4:	a82dd7fa 	srai	r22,r21,31
    82f8:	b005883a 	mov	r2,r22
    82fc:	1000cc16 	blt	r2,zero,8630 <___vfiprintf_internal_r+0xa8c>
    8300:	48bfffd8 	cmpnei	r2,r9,-1
    8304:	db400843 	ldbu	r13,33(sp)
    8308:	10010926 	beq	r2,zero,8730 <___vfiprintf_internal_r+0xb8c>
    830c:	00ffdfc4 	movi	r3,-129
    8310:	ad84b03a 	or	r2,r21,r22
    8314:	60d8703a 	and	r12,r12,r3
    8318:	1001051e 	bne	r2,zero,8730 <___vfiprintf_internal_r+0xb8c>
    831c:	4801071e 	bne	r9,zero,873c <___vfiprintf_internal_r+0xb98>
    8320:	6029883a 	mov	r20,r12
    8324:	0013883a 	mov	r9,zero
    8328:	002d883a 	mov	r22,zero
    832c:	882f883a 	mov	r23,r17
    8330:	00010706 	br	8750 <___vfiprintf_internal_r+0xbac>
    8334:	d8c00317 	ldw	r3,12(sp)
    8338:	d8000845 	stb	zero,33(sp)
    833c:	05400044 	movi	r21,1
    8340:	18800017 	ldw	r2,0(r3)
    8344:	18c00104 	addi	r3,r3,4
    8348:	d8c00315 	stw	r3,12(sp)
    834c:	d8800c05 	stb	r2,48(sp)
    8350:	05800044 	movi	r22,1
    8354:	ddc00c04 	addi	r23,sp,48
    8358:	6029883a 	mov	r20,r12
    835c:	0013883a 	mov	r9,zero
    8360:	a340008c 	andi	r13,r20,2
    8364:	68000126 	beq	r13,zero,836c <___vfiprintf_internal_r+0x7c8>
    8368:	ad400084 	addi	r21,r21,2
    836c:	d9000a17 	ldw	r4,40(sp)
    8370:	a300210c 	andi	r12,r20,132
    8374:	d8800b17 	ldw	r2,44(sp)
    8378:	21800044 	addi	r6,r4,1
    837c:	300b883a 	mov	r5,r6
    8380:	6000021e 	bne	r12,zero,838c <___vfiprintf_internal_r+0x7e8>
    8384:	8547c83a 	sub	r3,r16,r21
    8388:	00c1ae16 	blt	zero,r3,8a44 <___vfiprintf_internal_r+0xea0>
    838c:	d9800847 	ldb	r6,33(sp)
    8390:	40c00204 	addi	r3,r8,8
    8394:	30000d26 	beq	r6,zero,83cc <___vfiprintf_internal_r+0x828>
    8398:	d9000844 	addi	r4,sp,33
    839c:	10800044 	addi	r2,r2,1
    83a0:	41000015 	stw	r4,0(r8)
    83a4:	01000044 	movi	r4,1
    83a8:	41000115 	stw	r4,4(r8)
    83ac:	d8800b15 	stw	r2,44(sp)
    83b0:	d9400a15 	stw	r5,40(sp)
    83b4:	29000208 	cmpgei	r4,r5,8
    83b8:	2001831e 	bne	r4,zero,89c8 <___vfiprintf_internal_r+0xe24>
    83bc:	2809883a 	mov	r4,r5
    83c0:	1811883a 	mov	r8,r3
    83c4:	29400044 	addi	r5,r5,1
    83c8:	18c00204 	addi	r3,r3,8
    83cc:	68001826 	beq	r13,zero,8430 <___vfiprintf_internal_r+0x88c>
    83d0:	d9000884 	addi	r4,sp,34
    83d4:	10800084 	addi	r2,r2,2
    83d8:	41000015 	stw	r4,0(r8)
    83dc:	01000084 	movi	r4,2
    83e0:	41000115 	stw	r4,4(r8)
    83e4:	d8800b15 	stw	r2,44(sp)
    83e8:	d9400a15 	stw	r5,40(sp)
    83ec:	29000208 	cmpgei	r4,r5,8
    83f0:	20018d26 	beq	r4,zero,8a28 <___vfiprintf_internal_r+0xe84>
    83f4:	1001ed26 	beq	r2,zero,8bac <___vfiprintf_internal_r+0x1008>
    83f8:	d9800904 	addi	r6,sp,36
    83fc:	900b883a 	mov	r5,r18
    8400:	9809883a 	mov	r4,r19
    8404:	da400215 	stw	r9,8(sp)
    8408:	db000115 	stw	r12,4(sp)
    840c:	0007a980 	call	7a98 <__sprint_r.part.0>
    8410:	103eb71e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    8414:	d9000a17 	ldw	r4,40(sp)
    8418:	d8800b17 	ldw	r2,44(sp)
    841c:	da400217 	ldw	r9,8(sp)
    8420:	db000117 	ldw	r12,4(sp)
    8424:	d8c01804 	addi	r3,sp,96
    8428:	21400044 	addi	r5,r4,1
    842c:	8811883a 	mov	r8,r17
    8430:	63002018 	cmpnei	r12,r12,128
    8434:	6000e326 	beq	r12,zero,87c4 <___vfiprintf_internal_r+0xc20>
    8438:	4d93c83a 	sub	r9,r9,r22
    843c:	02412216 	blt	zero,r9,88c8 <___vfiprintf_internal_r+0xd24>
    8440:	b085883a 	add	r2,r22,r2
    8444:	d9400a15 	stw	r5,40(sp)
    8448:	45c00015 	stw	r23,0(r8)
    844c:	45800115 	stw	r22,4(r8)
    8450:	d8800b15 	stw	r2,44(sp)
    8454:	29400210 	cmplti	r5,r5,8
    8458:	2800081e 	bne	r5,zero,847c <___vfiprintf_internal_r+0x8d8>
    845c:	10001426 	beq	r2,zero,84b0 <___vfiprintf_internal_r+0x90c>
    8460:	d9800904 	addi	r6,sp,36
    8464:	900b883a 	mov	r5,r18
    8468:	9809883a 	mov	r4,r19
    846c:	0007a980 	call	7a98 <__sprint_r.part.0>
    8470:	103e9f1e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    8474:	d8800b17 	ldw	r2,44(sp)
    8478:	8807883a 	mov	r3,r17
    847c:	a500010c 	andi	r20,r20,4
    8480:	a0000226 	beq	r20,zero,848c <___vfiprintf_internal_r+0x8e8>
    8484:	8569c83a 	sub	r20,r16,r21
    8488:	05000f16 	blt	zero,r20,84c8 <___vfiprintf_internal_r+0x924>
    848c:	8540010e 	bge	r16,r21,8494 <___vfiprintf_internal_r+0x8f0>
    8490:	a821883a 	mov	r16,r21
    8494:	d8c00017 	ldw	r3,0(sp)
    8498:	1c07883a 	add	r3,r3,r16
    849c:	d8c00015 	stw	r3,0(sp)
    84a0:	10013f1e 	bne	r2,zero,89a0 <___vfiprintf_internal_r+0xdfc>
    84a4:	d8000a15 	stw	zero,40(sp)
    84a8:	8811883a 	mov	r8,r17
    84ac:	003de606 	br	7c48 <___vfiprintf_internal_r+0xa4>
    84b0:	d8000a15 	stw	zero,40(sp)
    84b4:	a500010c 	andi	r20,r20,4
    84b8:	a0019d26 	beq	r20,zero,8b30 <___vfiprintf_internal_r+0xf8c>
    84bc:	8569c83a 	sub	r20,r16,r21
    84c0:	05019b0e 	bge	zero,r20,8b30 <___vfiprintf_internal_r+0xf8c>
    84c4:	8807883a 	mov	r3,r17
    84c8:	a1000450 	cmplti	r4,r20,17
    84cc:	01c00074 	movhi	r7,1
    84d0:	d9400a17 	ldw	r5,40(sp)
    84d4:	20026c1e 	bne	r4,zero,8e88 <___vfiprintf_internal_r+0x12e4>
    84d8:	39fdeb04 	addi	r7,r7,-2132
    84dc:	05800404 	movi	r22,16
    84e0:	00000606 	br	84fc <___vfiprintf_internal_r+0x958>
    84e4:	29800084 	addi	r6,r5,2
    84e8:	18c00204 	addi	r3,r3,8
    84ec:	200b883a 	mov	r5,r4
    84f0:	a53ffc04 	addi	r20,r20,-16
    84f4:	a1000448 	cmpgei	r4,r20,17
    84f8:	20001726 	beq	r4,zero,8558 <___vfiprintf_internal_r+0x9b4>
    84fc:	29000044 	addi	r4,r5,1
    8500:	10800404 	addi	r2,r2,16
    8504:	19c00015 	stw	r7,0(r3)
    8508:	1d800115 	stw	r22,4(r3)
    850c:	d8800b15 	stw	r2,44(sp)
    8510:	d9000a15 	stw	r4,40(sp)
    8514:	21800208 	cmpgei	r6,r4,8
    8518:	303ff226 	beq	r6,zero,84e4 <___vfiprintf_internal_r+0x940>
    851c:	d9800904 	addi	r6,sp,36
    8520:	900b883a 	mov	r5,r18
    8524:	9809883a 	mov	r4,r19
    8528:	1000a226 	beq	r2,zero,87b4 <___vfiprintf_internal_r+0xc10>
    852c:	d9c00115 	stw	r7,4(sp)
    8530:	0007a980 	call	7a98 <__sprint_r.part.0>
    8534:	103e6e1e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    8538:	d9400a17 	ldw	r5,40(sp)
    853c:	a53ffc04 	addi	r20,r20,-16
    8540:	a1000448 	cmpgei	r4,r20,17
    8544:	d8800b17 	ldw	r2,44(sp)
    8548:	8807883a 	mov	r3,r17
    854c:	29800044 	addi	r6,r5,1
    8550:	d9c00117 	ldw	r7,4(sp)
    8554:	203fe91e 	bne	r4,zero,84fc <___vfiprintf_internal_r+0x958>
    8558:	1505883a 	add	r2,r2,r20
    855c:	d9800a15 	stw	r6,40(sp)
    8560:	19c00015 	stw	r7,0(r3)
    8564:	1d000115 	stw	r20,4(r3)
    8568:	d8800b15 	stw	r2,44(sp)
    856c:	31800210 	cmplti	r6,r6,8
    8570:	303fc61e 	bne	r6,zero,848c <___vfiprintf_internal_r+0x8e8>
    8574:	10016e26 	beq	r2,zero,8b30 <___vfiprintf_internal_r+0xf8c>
    8578:	d9800904 	addi	r6,sp,36
    857c:	900b883a 	mov	r5,r18
    8580:	9809883a 	mov	r4,r19
    8584:	0007a980 	call	7a98 <__sprint_r.part.0>
    8588:	103e591e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    858c:	d8800b17 	ldw	r2,44(sp)
    8590:	003fbe06 	br	848c <___vfiprintf_internal_r+0x8e8>
    8594:	29403fcc 	andi	r5,r5,255
    8598:	28022c1e 	bne	r5,zero,8e4c <___vfiprintf_internal_r+0x12a8>
    859c:	6080080c 	andi	r2,r12,32
    85a0:	63000414 	ori	r12,r12,16
    85a4:	10005b1e 	bne	r2,zero,8714 <___vfiprintf_internal_r+0xb70>
    85a8:	d8800317 	ldw	r2,12(sp)
    85ac:	10800104 	addi	r2,r2,4
    85b0:	d8c00317 	ldw	r3,12(sp)
    85b4:	002d883a 	mov	r22,zero
    85b8:	d8800315 	stw	r2,12(sp)
    85bc:	1d400017 	ldw	r21,0(r3)
    85c0:	0005883a 	mov	r2,zero
    85c4:	003ed406 	br	8118 <___vfiprintf_internal_r+0x574>
    85c8:	29403fcc 	andi	r5,r5,255
    85cc:	2802211e 	bne	r5,zero,8e54 <___vfiprintf_internal_r+0x12b0>
    85d0:	6080080c 	andi	r2,r12,32
    85d4:	63000414 	ori	r12,r12,16
    85d8:	1000401e 	bne	r2,zero,86dc <___vfiprintf_internal_r+0xb38>
    85dc:	d8800317 	ldw	r2,12(sp)
    85e0:	10800104 	addi	r2,r2,4
    85e4:	d8c00317 	ldw	r3,12(sp)
    85e8:	002d883a 	mov	r22,zero
    85ec:	d8800315 	stw	r2,12(sp)
    85f0:	1d400017 	ldw	r21,0(r3)
    85f4:	00800044 	movi	r2,1
    85f8:	003ec706 	br	8118 <___vfiprintf_internal_r+0x574>
    85fc:	29403fcc 	andi	r5,r5,255
    8600:	28021f1e 	bne	r5,zero,8e80 <___vfiprintf_internal_r+0x12dc>
    8604:	6080080c 	andi	r2,r12,32
    8608:	63000414 	ori	r12,r12,16
    860c:	10003a1e 	bne	r2,zero,86f8 <___vfiprintf_internal_r+0xb54>
    8610:	d8800317 	ldw	r2,12(sp)
    8614:	10800104 	addi	r2,r2,4
    8618:	d8c00317 	ldw	r3,12(sp)
    861c:	1d400017 	ldw	r21,0(r3)
    8620:	d8800315 	stw	r2,12(sp)
    8624:	a82dd7fa 	srai	r22,r21,31
    8628:	b005883a 	mov	r2,r22
    862c:	103f340e 	bge	r2,zero,8300 <___vfiprintf_internal_r+0x75c>
    8630:	056bc83a 	sub	r21,zero,r21
    8634:	a804c03a 	cmpne	r2,r21,zero
    8638:	05adc83a 	sub	r22,zero,r22
    863c:	b0adc83a 	sub	r22,r22,r2
    8640:	00800b44 	movi	r2,45
    8644:	d8800845 	stb	r2,33(sp)
    8648:	48ffffe0 	cmpeqi	r3,r9,-1
    864c:	03400b44 	movi	r13,45
    8650:	00800044 	movi	r2,1
    8654:	183eb426 	beq	r3,zero,8128 <___vfiprintf_internal_r+0x584>
    8658:	10c00060 	cmpeqi	r3,r2,1
    865c:	1800341e 	bne	r3,zero,8730 <___vfiprintf_internal_r+0xb8c>
    8660:	108000a0 	cmpeqi	r2,r2,2
    8664:	1000431e 	bne	r2,zero,8774 <___vfiprintf_internal_r+0xbd0>
    8668:	8807883a 	mov	r3,r17
    866c:	00000106 	br	8674 <___vfiprintf_internal_r+0xad0>
    8670:	b807883a 	mov	r3,r23
    8674:	a808d0fa 	srli	r4,r21,3
    8678:	b00a977a 	slli	r5,r22,29
    867c:	b02cd0fa 	srli	r22,r22,3
    8680:	ad4001cc 	andi	r21,r21,7
    8684:	a8800c04 	addi	r2,r21,48
    8688:	292ab03a 	or	r21,r5,r4
    868c:	18bfffc5 	stb	r2,-1(r3)
    8690:	ad88b03a 	or	r4,r21,r22
    8694:	1dffffc4 	addi	r23,r3,-1
    8698:	203ff51e 	bne	r4,zero,8670 <___vfiprintf_internal_r+0xacc>
    869c:	6100004c 	andi	r4,r12,1
    86a0:	20004126 	beq	r4,zero,87a8 <___vfiprintf_internal_r+0xc04>
    86a4:	10803fcc 	andi	r2,r2,255
    86a8:	1080201c 	xori	r2,r2,128
    86ac:	10bfe004 	addi	r2,r2,-128
    86b0:	10800c18 	cmpnei	r2,r2,48
    86b4:	10003c26 	beq	r2,zero,87a8 <___vfiprintf_internal_r+0xc04>
    86b8:	18ffff84 	addi	r3,r3,-2
    86bc:	00800c04 	movi	r2,48
    86c0:	b8bfffc5 	stb	r2,-1(r23)
    86c4:	88edc83a 	sub	r22,r17,r3
    86c8:	6029883a 	mov	r20,r12
    86cc:	182f883a 	mov	r23,r3
    86d0:	00001f06 	br	8750 <___vfiprintf_internal_r+0xbac>
    86d4:	0004aa80 	call	4aa8 <__sinit>
    86d8:	003d4406 	br	7bec <___vfiprintf_internal_r+0x48>
    86dc:	d8c00317 	ldw	r3,12(sp)
    86e0:	00800044 	movi	r2,1
    86e4:	1d400017 	ldw	r21,0(r3)
    86e8:	1d800117 	ldw	r22,4(r3)
    86ec:	18c00204 	addi	r3,r3,8
    86f0:	d8c00315 	stw	r3,12(sp)
    86f4:	003e8806 	br	8118 <___vfiprintf_internal_r+0x574>
    86f8:	d8c00317 	ldw	r3,12(sp)
    86fc:	18800117 	ldw	r2,4(r3)
    8700:	1d400017 	ldw	r21,0(r3)
    8704:	18c00204 	addi	r3,r3,8
    8708:	d8c00315 	stw	r3,12(sp)
    870c:	102d883a 	mov	r22,r2
    8710:	003efa06 	br	82fc <___vfiprintf_internal_r+0x758>
    8714:	d8c00317 	ldw	r3,12(sp)
    8718:	0005883a 	mov	r2,zero
    871c:	1d400017 	ldw	r21,0(r3)
    8720:	1d800117 	ldw	r22,4(r3)
    8724:	18c00204 	addi	r3,r3,8
    8728:	d8c00315 	stw	r3,12(sp)
    872c:	003e7a06 	br	8118 <___vfiprintf_internal_r+0x574>
    8730:	b0016a1e 	bne	r22,zero,8cdc <___vfiprintf_internal_r+0x1138>
    8734:	a88002a8 	cmpgeui	r2,r21,10
    8738:	1001681e 	bne	r2,zero,8cdc <___vfiprintf_internal_r+0x1138>
    873c:	ad400c04 	addi	r21,r21,48
    8740:	dd4015c5 	stb	r21,87(sp)
    8744:	6029883a 	mov	r20,r12
    8748:	05800044 	movi	r22,1
    874c:	ddc015c4 	addi	r23,sp,87
    8750:	482b883a 	mov	r21,r9
    8754:	4d80010e 	bge	r9,r22,875c <___vfiprintf_internal_r+0xbb8>
    8758:	b02b883a 	mov	r21,r22
    875c:	6b403fcc 	andi	r13,r13,255
    8760:	6b40201c 	xori	r13,r13,128
    8764:	6b7fe004 	addi	r13,r13,-128
    8768:	683efd26 	beq	r13,zero,8360 <___vfiprintf_internal_r+0x7bc>
    876c:	ad400044 	addi	r21,r21,1
    8770:	003efb06 	br	8360 <___vfiprintf_internal_r+0x7bc>
    8774:	882f883a 	mov	r23,r17
    8778:	d9000417 	ldw	r4,16(sp)
    877c:	a88003cc 	andi	r2,r21,15
    8780:	b006973a 	slli	r3,r22,28
    8784:	2085883a 	add	r2,r4,r2
    8788:	a82ad13a 	srli	r21,r21,4
    878c:	10800003 	ldbu	r2,0(r2)
    8790:	b02cd13a 	srli	r22,r22,4
    8794:	bdffffc4 	addi	r23,r23,-1
    8798:	1d6ab03a 	or	r21,r3,r21
    879c:	b8800005 	stb	r2,0(r23)
    87a0:	ad84b03a 	or	r2,r21,r22
    87a4:	103ff41e 	bne	r2,zero,8778 <___vfiprintf_internal_r+0xbd4>
    87a8:	8dedc83a 	sub	r22,r17,r23
    87ac:	6029883a 	mov	r20,r12
    87b0:	003fe706 	br	8750 <___vfiprintf_internal_r+0xbac>
    87b4:	01800044 	movi	r6,1
    87b8:	000b883a 	mov	r5,zero
    87bc:	8807883a 	mov	r3,r17
    87c0:	003f4b06 	br	84f0 <___vfiprintf_internal_r+0x94c>
    87c4:	8559c83a 	sub	r12,r16,r21
    87c8:	033f1b0e 	bge	zero,r12,8438 <___vfiprintf_internal_r+0x894>
    87cc:	61800450 	cmplti	r6,r12,17
    87d0:	01c00074 	movhi	r7,1
    87d4:	3001af1e 	bne	r6,zero,8e94 <___vfiprintf_internal_r+0x12f0>
    87d8:	39fde704 	addi	r7,r7,-2148
    87dc:	03400404 	movi	r13,16
    87e0:	00000606 	br	87fc <___vfiprintf_internal_r+0xc58>
    87e4:	21800084 	addi	r6,r4,2
    87e8:	42000204 	addi	r8,r8,8
    87ec:	1809883a 	mov	r4,r3
    87f0:	633ffc04 	addi	r12,r12,-16
    87f4:	60c00448 	cmpgei	r3,r12,17
    87f8:	18001c26 	beq	r3,zero,886c <___vfiprintf_internal_r+0xcc8>
    87fc:	20c00044 	addi	r3,r4,1
    8800:	10800404 	addi	r2,r2,16
    8804:	41c00015 	stw	r7,0(r8)
    8808:	43400115 	stw	r13,4(r8)
    880c:	d8800b15 	stw	r2,44(sp)
    8810:	d8c00a15 	stw	r3,40(sp)
    8814:	19400208 	cmpgei	r5,r3,8
    8818:	283ff226 	beq	r5,zero,87e4 <___vfiprintf_internal_r+0xc40>
    881c:	d9800904 	addi	r6,sp,36
    8820:	900b883a 	mov	r5,r18
    8824:	9809883a 	mov	r4,r19
    8828:	10006326 	beq	r2,zero,89b8 <___vfiprintf_internal_r+0xe14>
    882c:	d9c00515 	stw	r7,20(sp)
    8830:	db000215 	stw	r12,8(sp)
    8834:	da400115 	stw	r9,4(sp)
    8838:	0007a980 	call	7a98 <__sprint_r.part.0>
    883c:	103dac1e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    8840:	db000217 	ldw	r12,8(sp)
    8844:	d9000a17 	ldw	r4,40(sp)
    8848:	d8800b17 	ldw	r2,44(sp)
    884c:	633ffc04 	addi	r12,r12,-16
    8850:	60c00448 	cmpgei	r3,r12,17
    8854:	8811883a 	mov	r8,r17
    8858:	21800044 	addi	r6,r4,1
    885c:	d9c00517 	ldw	r7,20(sp)
    8860:	03400404 	movi	r13,16
    8864:	da400117 	ldw	r9,4(sp)
    8868:	183fe41e 	bne	r3,zero,87fc <___vfiprintf_internal_r+0xc58>
    886c:	43400204 	addi	r13,r8,8
    8870:	1305883a 	add	r2,r2,r12
    8874:	41c00015 	stw	r7,0(r8)
    8878:	43000115 	stw	r12,4(r8)
    887c:	d8800b15 	stw	r2,44(sp)
    8880:	d9800a15 	stw	r6,40(sp)
    8884:	30c00208 	cmpgei	r3,r6,8
    8888:	1800e226 	beq	r3,zero,8c14 <___vfiprintf_internal_r+0x1070>
    888c:	10015726 	beq	r2,zero,8dec <___vfiprintf_internal_r+0x1248>
    8890:	d9800904 	addi	r6,sp,36
    8894:	900b883a 	mov	r5,r18
    8898:	9809883a 	mov	r4,r19
    889c:	da400115 	stw	r9,4(sp)
    88a0:	0007a980 	call	7a98 <__sprint_r.part.0>
    88a4:	103d921e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    88a8:	da400117 	ldw	r9,4(sp)
    88ac:	d9000a17 	ldw	r4,40(sp)
    88b0:	d8800b17 	ldw	r2,44(sp)
    88b4:	4d93c83a 	sub	r9,r9,r22
    88b8:	d8c01804 	addi	r3,sp,96
    88bc:	21400044 	addi	r5,r4,1
    88c0:	8811883a 	mov	r8,r17
    88c4:	027ede0e 	bge	zero,r9,8440 <___vfiprintf_internal_r+0x89c>
    88c8:	49800450 	cmplti	r6,r9,17
    88cc:	01c00074 	movhi	r7,1
    88d0:	3001431e 	bne	r6,zero,8de0 <___vfiprintf_internal_r+0x123c>
    88d4:	39fde704 	addi	r7,r7,-2148
    88d8:	03000404 	movi	r12,16
    88dc:	00000606 	br	88f8 <___vfiprintf_internal_r+0xd54>
    88e0:	21400084 	addi	r5,r4,2
    88e4:	42000204 	addi	r8,r8,8
    88e8:	1809883a 	mov	r4,r3
    88ec:	4a7ffc04 	addi	r9,r9,-16
    88f0:	48c00448 	cmpgei	r3,r9,17
    88f4:	18001a26 	beq	r3,zero,8960 <___vfiprintf_internal_r+0xdbc>
    88f8:	20c00044 	addi	r3,r4,1
    88fc:	10800404 	addi	r2,r2,16
    8900:	41c00015 	stw	r7,0(r8)
    8904:	43000115 	stw	r12,4(r8)
    8908:	d8800b15 	stw	r2,44(sp)
    890c:	d8c00a15 	stw	r3,40(sp)
    8910:	19400208 	cmpgei	r5,r3,8
    8914:	283ff226 	beq	r5,zero,88e0 <___vfiprintf_internal_r+0xd3c>
    8918:	d9800904 	addi	r6,sp,36
    891c:	900b883a 	mov	r5,r18
    8920:	9809883a 	mov	r4,r19
    8924:	10001a26 	beq	r2,zero,8990 <___vfiprintf_internal_r+0xdec>
    8928:	d9c00215 	stw	r7,8(sp)
    892c:	da400115 	stw	r9,4(sp)
    8930:	0007a980 	call	7a98 <__sprint_r.part.0>
    8934:	103d6e1e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    8938:	da400117 	ldw	r9,4(sp)
    893c:	d9000a17 	ldw	r4,40(sp)
    8940:	d8800b17 	ldw	r2,44(sp)
    8944:	4a7ffc04 	addi	r9,r9,-16
    8948:	48c00448 	cmpgei	r3,r9,17
    894c:	8811883a 	mov	r8,r17
    8950:	21400044 	addi	r5,r4,1
    8954:	d9c00217 	ldw	r7,8(sp)
    8958:	03000404 	movi	r12,16
    895c:	183fe61e 	bne	r3,zero,88f8 <___vfiprintf_internal_r+0xd54>
    8960:	41000204 	addi	r4,r8,8
    8964:	1245883a 	add	r2,r2,r9
    8968:	41c00015 	stw	r7,0(r8)
    896c:	42400115 	stw	r9,4(r8)
    8970:	d8800b15 	stw	r2,44(sp)
    8974:	d9400a15 	stw	r5,40(sp)
    8978:	28c00208 	cmpgei	r3,r5,8
    897c:	1800721e 	bne	r3,zero,8b48 <___vfiprintf_internal_r+0xfa4>
    8980:	29400044 	addi	r5,r5,1
    8984:	20c00204 	addi	r3,r4,8
    8988:	2011883a 	mov	r8,r4
    898c:	003eac06 	br	8440 <___vfiprintf_internal_r+0x89c>
    8990:	01400044 	movi	r5,1
    8994:	0009883a 	mov	r4,zero
    8998:	8811883a 	mov	r8,r17
    899c:	003fd306 	br	88ec <___vfiprintf_internal_r+0xd48>
    89a0:	d9800904 	addi	r6,sp,36
    89a4:	900b883a 	mov	r5,r18
    89a8:	9809883a 	mov	r4,r19
    89ac:	0007a980 	call	7a98 <__sprint_r.part.0>
    89b0:	103ebc26 	beq	r2,zero,84a4 <___vfiprintf_internal_r+0x900>
    89b4:	003d4e06 	br	7ef0 <___vfiprintf_internal_r+0x34c>
    89b8:	01800044 	movi	r6,1
    89bc:	0009883a 	mov	r4,zero
    89c0:	8811883a 	mov	r8,r17
    89c4:	003f8a06 	br	87f0 <___vfiprintf_internal_r+0xc4c>
    89c8:	10007026 	beq	r2,zero,8b8c <___vfiprintf_internal_r+0xfe8>
    89cc:	d9800904 	addi	r6,sp,36
    89d0:	900b883a 	mov	r5,r18
    89d4:	9809883a 	mov	r4,r19
    89d8:	da400515 	stw	r9,20(sp)
    89dc:	db000215 	stw	r12,8(sp)
    89e0:	db400115 	stw	r13,4(sp)
    89e4:	0007a980 	call	7a98 <__sprint_r.part.0>
    89e8:	103d411e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    89ec:	d9000a17 	ldw	r4,40(sp)
    89f0:	d8800b17 	ldw	r2,44(sp)
    89f4:	d8c01804 	addi	r3,sp,96
    89f8:	21400044 	addi	r5,r4,1
    89fc:	8811883a 	mov	r8,r17
    8a00:	da400517 	ldw	r9,20(sp)
    8a04:	db000217 	ldw	r12,8(sp)
    8a08:	db400117 	ldw	r13,4(sp)
    8a0c:	003e6f06 	br	83cc <___vfiprintf_internal_r+0x828>
    8a10:	d8800884 	addi	r2,sp,34
    8a14:	d8801615 	stw	r2,88(sp)
    8a18:	00800084 	movi	r2,2
    8a1c:	d8801715 	stw	r2,92(sp)
    8a20:	d8c01804 	addi	r3,sp,96
    8a24:	01400044 	movi	r5,1
    8a28:	1811883a 	mov	r8,r3
    8a2c:	2809883a 	mov	r4,r5
    8a30:	21400044 	addi	r5,r4,1
    8a34:	40c00204 	addi	r3,r8,8
    8a38:	003e7d06 	br	8430 <___vfiprintf_internal_r+0x88c>
    8a3c:	a019883a 	mov	r12,r20
    8a40:	003f0506 	br	8658 <___vfiprintf_internal_r+0xab4>
    8a44:	19400450 	cmplti	r5,r3,17
    8a48:	01c00074 	movhi	r7,1
    8a4c:	2801031e 	bne	r5,zero,8e5c <___vfiprintf_internal_r+0x12b8>
    8a50:	39fdeb04 	addi	r7,r7,-2132
    8a54:	03800404 	movi	r14,16
    8a58:	00000706 	br	8a78 <___vfiprintf_internal_r+0xed4>
    8a5c:	23c00084 	addi	r15,r4,2
    8a60:	42000204 	addi	r8,r8,8
    8a64:	3009883a 	mov	r4,r6
    8a68:	18fffc04 	addi	r3,r3,-16
    8a6c:	19400448 	cmpgei	r5,r3,17
    8a70:	28002026 	beq	r5,zero,8af4 <___vfiprintf_internal_r+0xf50>
    8a74:	21800044 	addi	r6,r4,1
    8a78:	10800404 	addi	r2,r2,16
    8a7c:	41c00015 	stw	r7,0(r8)
    8a80:	43800115 	stw	r14,4(r8)
    8a84:	d8800b15 	stw	r2,44(sp)
    8a88:	d9800a15 	stw	r6,40(sp)
    8a8c:	31400208 	cmpgei	r5,r6,8
    8a90:	283ff226 	beq	r5,zero,8a5c <___vfiprintf_internal_r+0xeb8>
    8a94:	d9800904 	addi	r6,sp,36
    8a98:	900b883a 	mov	r5,r18
    8a9c:	9809883a 	mov	r4,r19
    8aa0:	10001f26 	beq	r2,zero,8b20 <___vfiprintf_internal_r+0xf7c>
    8aa4:	d9c00715 	stw	r7,28(sp)
    8aa8:	d8c00615 	stw	r3,24(sp)
    8aac:	da400515 	stw	r9,20(sp)
    8ab0:	db000215 	stw	r12,8(sp)
    8ab4:	db400115 	stw	r13,4(sp)
    8ab8:	0007a980 	call	7a98 <__sprint_r.part.0>
    8abc:	103d0c1e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    8ac0:	d8c00617 	ldw	r3,24(sp)
    8ac4:	d9000a17 	ldw	r4,40(sp)
    8ac8:	d8800b17 	ldw	r2,44(sp)
    8acc:	18fffc04 	addi	r3,r3,-16
    8ad0:	19400448 	cmpgei	r5,r3,17
    8ad4:	8811883a 	mov	r8,r17
    8ad8:	23c00044 	addi	r15,r4,1
    8adc:	d9c00717 	ldw	r7,28(sp)
    8ae0:	03800404 	movi	r14,16
    8ae4:	da400517 	ldw	r9,20(sp)
    8ae8:	db000217 	ldw	r12,8(sp)
    8aec:	db400117 	ldw	r13,4(sp)
    8af0:	283fe01e 	bne	r5,zero,8a74 <___vfiprintf_internal_r+0xed0>
    8af4:	10c5883a 	add	r2,r2,r3
    8af8:	40c00115 	stw	r3,4(r8)
    8afc:	41c00015 	stw	r7,0(r8)
    8b00:	d8800b15 	stw	r2,44(sp)
    8b04:	dbc00a15 	stw	r15,40(sp)
    8b08:	78c00208 	cmpgei	r3,r15,8
    8b0c:	18002c1e 	bne	r3,zero,8bc0 <___vfiprintf_internal_r+0x101c>
    8b10:	42000204 	addi	r8,r8,8
    8b14:	79400044 	addi	r5,r15,1
    8b18:	7809883a 	mov	r4,r15
    8b1c:	003e1b06 	br	838c <___vfiprintf_internal_r+0x7e8>
    8b20:	0009883a 	mov	r4,zero
    8b24:	03c00044 	movi	r15,1
    8b28:	8811883a 	mov	r8,r17
    8b2c:	003fce06 	br	8a68 <___vfiprintf_internal_r+0xec4>
    8b30:	8540010e 	bge	r16,r21,8b38 <___vfiprintf_internal_r+0xf94>
    8b34:	a821883a 	mov	r16,r21
    8b38:	d8800017 	ldw	r2,0(sp)
    8b3c:	1405883a 	add	r2,r2,r16
    8b40:	d8800015 	stw	r2,0(sp)
    8b44:	003e5706 	br	84a4 <___vfiprintf_internal_r+0x900>
    8b48:	10008126 	beq	r2,zero,8d50 <___vfiprintf_internal_r+0x11ac>
    8b4c:	d9800904 	addi	r6,sp,36
    8b50:	900b883a 	mov	r5,r18
    8b54:	9809883a 	mov	r4,r19
    8b58:	0007a980 	call	7a98 <__sprint_r.part.0>
    8b5c:	103ce41e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    8b60:	d9400a17 	ldw	r5,40(sp)
    8b64:	d8800b17 	ldw	r2,44(sp)
    8b68:	d8c01804 	addi	r3,sp,96
    8b6c:	29400044 	addi	r5,r5,1
    8b70:	8811883a 	mov	r8,r17
    8b74:	003e3206 	br	8440 <___vfiprintf_internal_r+0x89c>
    8b78:	d8000a15 	stw	zero,40(sp)
    8b7c:	8811883a 	mov	r8,r17
    8b80:	003c4a06 	br	7cac <___vfiprintf_internal_r+0x108>
    8b84:	002d883a 	mov	r22,zero
    8b88:	003d4406 	br	809c <___vfiprintf_internal_r+0x4f8>
    8b8c:	68003326 	beq	r13,zero,8c5c <___vfiprintf_internal_r+0x10b8>
    8b90:	d8800884 	addi	r2,sp,34
    8b94:	d8801615 	stw	r2,88(sp)
    8b98:	00800084 	movi	r2,2
    8b9c:	d8801715 	stw	r2,92(sp)
    8ba0:	da001804 	addi	r8,sp,96
    8ba4:	01000044 	movi	r4,1
    8ba8:	003fa106 	br	8a30 <___vfiprintf_internal_r+0xe8c>
    8bac:	d8c01804 	addi	r3,sp,96
    8bb0:	01400044 	movi	r5,1
    8bb4:	0009883a 	mov	r4,zero
    8bb8:	8811883a 	mov	r8,r17
    8bbc:	003e1c06 	br	8430 <___vfiprintf_internal_r+0x88c>
    8bc0:	10003826 	beq	r2,zero,8ca4 <___vfiprintf_internal_r+0x1100>
    8bc4:	d9800904 	addi	r6,sp,36
    8bc8:	900b883a 	mov	r5,r18
    8bcc:	9809883a 	mov	r4,r19
    8bd0:	da400515 	stw	r9,20(sp)
    8bd4:	db000215 	stw	r12,8(sp)
    8bd8:	db400115 	stw	r13,4(sp)
    8bdc:	0007a980 	call	7a98 <__sprint_r.part.0>
    8be0:	103cc31e 	bne	r2,zero,7ef0 <___vfiprintf_internal_r+0x34c>
    8be4:	d9000a17 	ldw	r4,40(sp)
    8be8:	d8800b17 	ldw	r2,44(sp)
    8bec:	8811883a 	mov	r8,r17
    8bf0:	21400044 	addi	r5,r4,1
    8bf4:	da400517 	ldw	r9,20(sp)
    8bf8:	db000217 	ldw	r12,8(sp)
    8bfc:	db400117 	ldw	r13,4(sp)
    8c00:	003de206 	br	838c <___vfiprintf_internal_r+0x7e8>
    8c04:	e029883a 	mov	r20,fp
    8c08:	003c2d06 	br	7cc0 <___vfiprintf_internal_r+0x11c>
    8c0c:	882f883a 	mov	r23,r17
    8c10:	003ecf06 	br	8750 <___vfiprintf_internal_r+0xbac>
    8c14:	31400044 	addi	r5,r6,1
    8c18:	68c00204 	addi	r3,r13,8
    8c1c:	3009883a 	mov	r4,r6
    8c20:	6811883a 	mov	r8,r13
    8c24:	003e0406 	br	8438 <___vfiprintf_internal_r+0x894>
    8c28:	00c00c04 	movi	r3,48
    8c2c:	d88008c5 	stb	r2,35(sp)
    8c30:	d8c00885 	stb	r3,34(sp)
    8c34:	63000094 	ori	r12,r12,2
    8c38:	00800084 	movi	r2,2
    8c3c:	003d3606 	br	8118 <___vfiprintf_internal_r+0x574>
    8c40:	d9400017 	ldw	r5,0(sp)
    8c44:	20800017 	ldw	r2,0(r4)
    8c48:	d8c00315 	stw	r3,12(sp)
    8c4c:	2809d7fa 	srai	r4,r5,31
    8c50:	11400015 	stw	r5,0(r2)
    8c54:	11000115 	stw	r4,4(r2)
    8c58:	003bfb06 	br	7c48 <___vfiprintf_internal_r+0xa4>
    8c5c:	0009883a 	mov	r4,zero
    8c60:	d8c01804 	addi	r3,sp,96
    8c64:	01400044 	movi	r5,1
    8c68:	8811883a 	mov	r8,r17
    8c6c:	003df006 	br	8430 <___vfiprintf_internal_r+0x88c>
    8c70:	0421c83a 	sub	r16,zero,r16
    8c74:	ddc00315 	stw	r23,12(sp)
    8c78:	003cdb06 	br	7fe8 <___vfiprintf_internal_r+0x444>
    8c7c:	b809883a 	mov	r4,r23
    8c80:	da000215 	stw	r8,8(sp)
    8c84:	db000115 	stw	r12,4(sp)
    8c88:	00007980 	call	798 <strlen>
    8c8c:	102d883a 	mov	r22,r2
    8c90:	102b883a 	mov	r21,r2
    8c94:	dd000315 	stw	r20,12(sp)
    8c98:	db000117 	ldw	r12,4(sp)
    8c9c:	da000217 	ldw	r8,8(sp)
    8ca0:	003dad06 	br	8358 <___vfiprintf_internal_r+0x7b4>
    8ca4:	d8c00847 	ldb	r3,33(sp)
    8ca8:	1800551e 	bne	r3,zero,8e00 <___vfiprintf_internal_r+0x125c>
    8cac:	683f581e 	bne	r13,zero,8a10 <___vfiprintf_internal_r+0xe6c>
    8cb0:	0009883a 	mov	r4,zero
    8cb4:	d8c01804 	addi	r3,sp,96
    8cb8:	01400044 	movi	r5,1
    8cbc:	8811883a 	mov	r8,r17
    8cc0:	003ddd06 	br	8438 <___vfiprintf_internal_r+0x894>
    8cc4:	d8800317 	ldw	r2,12(sp)
    8cc8:	10800017 	ldw	r2,0(r2)
    8ccc:	d8c00315 	stw	r3,12(sp)
    8cd0:	d8c00017 	ldw	r3,0(sp)
    8cd4:	10c00015 	stw	r3,0(r2)
    8cd8:	003bdb06 	br	7c48 <___vfiprintf_internal_r+0xa4>
    8cdc:	882f883a 	mov	r23,r17
    8ce0:	00000206 	br	8cec <___vfiprintf_internal_r+0x1148>
    8ce4:	102b883a 	mov	r21,r2
    8ce8:	182d883a 	mov	r22,r3
    8cec:	a809883a 	mov	r4,r21
    8cf0:	b00b883a 	mov	r5,r22
    8cf4:	01800284 	movi	r6,10
    8cf8:	000f883a 	mov	r7,zero
    8cfc:	db400615 	stw	r13,24(sp)
    8d00:	da000515 	stw	r8,20(sp)
    8d04:	da400215 	stw	r9,8(sp)
    8d08:	db000115 	stw	r12,4(sp)
    8d0c:	000a0140 	call	a014 <__umoddi3>
    8d10:	10800c04 	addi	r2,r2,48
    8d14:	bdffffc4 	addi	r23,r23,-1
    8d18:	a809883a 	mov	r4,r21
    8d1c:	b00b883a 	mov	r5,r22
    8d20:	b8800005 	stb	r2,0(r23)
    8d24:	01800284 	movi	r6,10
    8d28:	000f883a 	mov	r7,zero
    8d2c:	00099f80 	call	99f8 <__udivdi3>
    8d30:	db000117 	ldw	r12,4(sp)
    8d34:	da400217 	ldw	r9,8(sp)
    8d38:	da000517 	ldw	r8,20(sp)
    8d3c:	db400617 	ldw	r13,24(sp)
    8d40:	b03fe81e 	bne	r22,zero,8ce4 <___vfiprintf_internal_r+0x1140>
    8d44:	ad4002a8 	cmpgeui	r21,r21,10
    8d48:	a83fe61e 	bne	r21,zero,8ce4 <___vfiprintf_internal_r+0x1140>
    8d4c:	003e9606 	br	87a8 <___vfiprintf_internal_r+0xc04>
    8d50:	00c00044 	movi	r3,1
    8d54:	d8c00a15 	stw	r3,40(sp)
    8d58:	b005883a 	mov	r2,r22
    8d5c:	ddc01615 	stw	r23,88(sp)
    8d60:	dd801715 	stw	r22,92(sp)
    8d64:	dd800b15 	stw	r22,44(sp)
    8d68:	d8c01804 	addi	r3,sp,96
    8d6c:	003dc306 	br	847c <___vfiprintf_internal_r+0x8d8>
    8d70:	10c00060 	cmpeqi	r3,r2,1
    8d74:	a019883a 	mov	r12,r20
    8d78:	183e3926 	beq	r3,zero,8660 <___vfiprintf_internal_r+0xabc>
    8d7c:	003e6f06 	br	873c <___vfiprintf_internal_r+0xb98>
    8d80:	e0800043 	ldbu	r2,1(fp)
    8d84:	63000814 	ori	r12,r12,32
    8d88:	e7000044 	addi	fp,fp,1
    8d8c:	10803fcc 	andi	r2,r2,255
    8d90:	1080201c 	xori	r2,r2,128
    8d94:	10bfe004 	addi	r2,r2,-128
    8d98:	003bd106 	br	7ce0 <___vfiprintf_internal_r+0x13c>
    8d9c:	488001f0 	cmpltui	r2,r9,7
    8da0:	482d883a 	mov	r22,r9
    8da4:	1000011e 	bne	r2,zero,8dac <___vfiprintf_internal_r+0x1208>
    8da8:	05800184 	movi	r22,6
    8dac:	05c00074 	movhi	r23,1
    8db0:	b02b883a 	mov	r21,r22
    8db4:	dd000315 	stw	r20,12(sp)
    8db8:	bdfd8f04 	addi	r23,r23,-2500
    8dbc:	003d6606 	br	8358 <___vfiprintf_internal_r+0x7b4>
    8dc0:	d8800315 	stw	r2,12(sp)
    8dc4:	002d883a 	mov	r22,zero
    8dc8:	00800044 	movi	r2,1
    8dcc:	003cd206 	br	8118 <___vfiprintf_internal_r+0x574>
    8dd0:	d8800315 	stw	r2,12(sp)
    8dd4:	002d883a 	mov	r22,zero
    8dd8:	0005883a 	mov	r2,zero
    8ddc:	003cce06 	br	8118 <___vfiprintf_internal_r+0x574>
    8de0:	1809883a 	mov	r4,r3
    8de4:	39fde704 	addi	r7,r7,-2148
    8de8:	003ede06 	br	8964 <___vfiprintf_internal_r+0xdc0>
    8dec:	d8c01804 	addi	r3,sp,96
    8df0:	01400044 	movi	r5,1
    8df4:	0009883a 	mov	r4,zero
    8df8:	8811883a 	mov	r8,r17
    8dfc:	003d8e06 	br	8438 <___vfiprintf_internal_r+0x894>
    8e00:	d8800844 	addi	r2,sp,33
    8e04:	d8801615 	stw	r2,88(sp)
    8e08:	00800044 	movi	r2,1
    8e0c:	d8801715 	stw	r2,92(sp)
    8e10:	d8c01804 	addi	r3,sp,96
    8e14:	01400044 	movi	r5,1
    8e18:	003d6806 	br	83bc <___vfiprintf_internal_r+0x818>
    8e1c:	d9800845 	stb	r6,33(sp)
    8e20:	003c5306 	br	7f70 <___vfiprintf_internal_r+0x3cc>
    8e24:	482b883a 	mov	r21,r9
    8e28:	dd000315 	stw	r20,12(sp)
    8e2c:	482d883a 	mov	r22,r9
    8e30:	003d4906 	br	8358 <___vfiprintf_internal_r+0x7b4>
    8e34:	d9800845 	stb	r6,33(sp)
    8e38:	003cd906 	br	81a0 <___vfiprintf_internal_r+0x5fc>
    8e3c:	d9800845 	stb	r6,33(sp)
    8e40:	003ce906 	br	81e8 <___vfiprintf_internal_r+0x644>
    8e44:	d9800845 	stb	r6,33(sp)
    8e48:	003c8a06 	br	8074 <___vfiprintf_internal_r+0x4d0>
    8e4c:	d9800845 	stb	r6,33(sp)
    8e50:	003dd206 	br	859c <___vfiprintf_internal_r+0x9f8>
    8e54:	d9800845 	stb	r6,33(sp)
    8e58:	003ddd06 	br	85d0 <___vfiprintf_internal_r+0xa2c>
    8e5c:	301f883a 	mov	r15,r6
    8e60:	39fdeb04 	addi	r7,r7,-2132
    8e64:	003f2306 	br	8af4 <___vfiprintf_internal_r+0xf50>
    8e68:	d9800845 	stb	r6,33(sp)
    8e6c:	003d1606 	br	82c8 <___vfiprintf_internal_r+0x724>
    8e70:	d9800845 	stb	r6,33(sp)
    8e74:	003d0406 	br	8288 <___vfiprintf_internal_r+0x6e4>
    8e78:	d9800845 	stb	r6,33(sp)
    8e7c:	003cb806 	br	8160 <___vfiprintf_internal_r+0x5bc>
    8e80:	d9800845 	stb	r6,33(sp)
    8e84:	003ddf06 	br	8604 <___vfiprintf_internal_r+0xa60>
    8e88:	29800044 	addi	r6,r5,1
    8e8c:	39fdeb04 	addi	r7,r7,-2132
    8e90:	003db106 	br	8558 <___vfiprintf_internal_r+0x9b4>
    8e94:	181b883a 	mov	r13,r3
    8e98:	280d883a 	mov	r6,r5
    8e9c:	39fde704 	addi	r7,r7,-2148
    8ea0:	003e7306 	br	8870 <___vfiprintf_internal_r+0xccc>
    8ea4:	00bfffc4 	movi	r2,-1
    8ea8:	d8800015 	stw	r2,0(sp)
    8eac:	003c1306 	br	7efc <___vfiprintf_internal_r+0x358>
    8eb0:	d8800317 	ldw	r2,12(sp)
    8eb4:	12400017 	ldw	r9,0(r2)
    8eb8:	15c00104 	addi	r23,r2,4
    8ebc:	4800010e 	bge	r9,zero,8ec4 <___vfiprintf_internal_r+0x1320>
    8ec0:	027fffc4 	movi	r9,-1
    8ec4:	e0800043 	ldbu	r2,1(fp)
    8ec8:	ddc00315 	stw	r23,12(sp)
    8ecc:	1839883a 	mov	fp,r3
    8ed0:	10803fcc 	andi	r2,r2,255
    8ed4:	1080201c 	xori	r2,r2,128
    8ed8:	10bfe004 	addi	r2,r2,-128
    8edc:	003b8006 	br	7ce0 <___vfiprintf_internal_r+0x13c>

00008ee0 <__vfiprintf_internal>:
    8ee0:	00800074 	movhi	r2,1
    8ee4:	300f883a 	mov	r7,r6
    8ee8:	280d883a 	mov	r6,r5
    8eec:	200b883a 	mov	r5,r4
    8ef0:	1105f217 	ldw	r4,6088(r2)
    8ef4:	0007ba41 	jmpi	7ba4 <___vfiprintf_internal_r>

00008ef8 <__sbprintf>:
    8ef8:	2880030b 	ldhu	r2,12(r5)
    8efc:	2b001917 	ldw	r12,100(r5)
    8f00:	2ac0038b 	ldhu	r11,14(r5)
    8f04:	2a800717 	ldw	r10,28(r5)
    8f08:	2a400917 	ldw	r9,36(r5)
    8f0c:	defee204 	addi	sp,sp,-1144
    8f10:	da001a04 	addi	r8,sp,104
    8f14:	00c10004 	movi	r3,1024
    8f18:	dc011a15 	stw	r16,1128(sp)
    8f1c:	10bfff4c 	andi	r2,r2,65533
    8f20:	2821883a 	mov	r16,r5
    8f24:	d80b883a 	mov	r5,sp
    8f28:	dc811c15 	stw	r18,1136(sp)
    8f2c:	dc411b15 	stw	r17,1132(sp)
    8f30:	dfc11d15 	stw	ra,1140(sp)
    8f34:	2025883a 	mov	r18,r4
    8f38:	d880030d 	sth	r2,12(sp)
    8f3c:	db001915 	stw	r12,100(sp)
    8f40:	dac0038d 	sth	r11,14(sp)
    8f44:	da800715 	stw	r10,28(sp)
    8f48:	da400915 	stw	r9,36(sp)
    8f4c:	da000015 	stw	r8,0(sp)
    8f50:	da000415 	stw	r8,16(sp)
    8f54:	d8c00215 	stw	r3,8(sp)
    8f58:	d8c00515 	stw	r3,20(sp)
    8f5c:	d8000615 	stw	zero,24(sp)
    8f60:	0007ba40 	call	7ba4 <___vfiprintf_internal_r>
    8f64:	1023883a 	mov	r17,r2
    8f68:	10000d0e 	bge	r2,zero,8fa0 <__sbprintf+0xa8>
    8f6c:	d880030b 	ldhu	r2,12(sp)
    8f70:	1080100c 	andi	r2,r2,64
    8f74:	10000326 	beq	r2,zero,8f84 <__sbprintf+0x8c>
    8f78:	8080030b 	ldhu	r2,12(r16)
    8f7c:	10801014 	ori	r2,r2,64
    8f80:	8080030d 	sth	r2,12(r16)
    8f84:	8805883a 	mov	r2,r17
    8f88:	dfc11d17 	ldw	ra,1140(sp)
    8f8c:	dc811c17 	ldw	r18,1136(sp)
    8f90:	dc411b17 	ldw	r17,1132(sp)
    8f94:	dc011a17 	ldw	r16,1128(sp)
    8f98:	dec11e04 	addi	sp,sp,1144
    8f9c:	f800283a 	ret
    8fa0:	d80b883a 	mov	r5,sp
    8fa4:	9009883a 	mov	r4,r18
    8fa8:	00047140 	call	4714 <_fflush_r>
    8fac:	103fef26 	beq	r2,zero,8f6c <__sbprintf+0x74>
    8fb0:	047fffc4 	movi	r17,-1
    8fb4:	003fed06 	br	8f6c <__sbprintf+0x74>

00008fb8 <_write_r>:
    8fb8:	defffe04 	addi	sp,sp,-8
    8fbc:	2805883a 	mov	r2,r5
    8fc0:	dc000015 	stw	r16,0(sp)
    8fc4:	300b883a 	mov	r5,r6
    8fc8:	2021883a 	mov	r16,r4
    8fcc:	380d883a 	mov	r6,r7
    8fd0:	1009883a 	mov	r4,r2
    8fd4:	00800074 	movhi	r2,1
    8fd8:	dfc00115 	stw	ra,4(sp)
    8fdc:	100d2215 	stw	zero,13448(r2)
    8fe0:	000d7d40 	call	d7d4 <write>
    8fe4:	10ffffd8 	cmpnei	r3,r2,-1
    8fe8:	18000426 	beq	r3,zero,8ffc <_write_r+0x44>
    8fec:	dfc00117 	ldw	ra,4(sp)
    8ff0:	dc000017 	ldw	r16,0(sp)
    8ff4:	dec00204 	addi	sp,sp,8
    8ff8:	f800283a 	ret
    8ffc:	00c00074 	movhi	r3,1
    9000:	18cd2217 	ldw	r3,13448(r3)
    9004:	183ff926 	beq	r3,zero,8fec <_write_r+0x34>
    9008:	80c00015 	stw	r3,0(r16)
    900c:	dfc00117 	ldw	ra,4(sp)
    9010:	dc000017 	ldw	r16,0(sp)
    9014:	dec00204 	addi	sp,sp,8
    9018:	f800283a 	ret

0000901c <_close_r>:
    901c:	defffe04 	addi	sp,sp,-8
    9020:	dc000015 	stw	r16,0(sp)
    9024:	00800074 	movhi	r2,1
    9028:	2021883a 	mov	r16,r4
    902c:	2809883a 	mov	r4,r5
    9030:	dfc00115 	stw	ra,4(sp)
    9034:	100d2215 	stw	zero,13448(r2)
    9038:	000cf7c0 	call	cf7c <close>
    903c:	10ffffd8 	cmpnei	r3,r2,-1
    9040:	18000426 	beq	r3,zero,9054 <_close_r+0x38>
    9044:	dfc00117 	ldw	ra,4(sp)
    9048:	dc000017 	ldw	r16,0(sp)
    904c:	dec00204 	addi	sp,sp,8
    9050:	f800283a 	ret
    9054:	00c00074 	movhi	r3,1
    9058:	18cd2217 	ldw	r3,13448(r3)
    905c:	183ff926 	beq	r3,zero,9044 <_close_r+0x28>
    9060:	80c00015 	stw	r3,0(r16)
    9064:	dfc00117 	ldw	ra,4(sp)
    9068:	dc000017 	ldw	r16,0(sp)
    906c:	dec00204 	addi	sp,sp,8
    9070:	f800283a 	ret

00009074 <_calloc_r>:
    9074:	defffe04 	addi	sp,sp,-8
    9078:	2805883a 	mov	r2,r5
    907c:	dc000015 	stw	r16,0(sp)
    9080:	300b883a 	mov	r5,r6
    9084:	2021883a 	mov	r16,r4
    9088:	1009883a 	mov	r4,r2
    908c:	dfc00115 	stw	ra,4(sp)
    9090:	000a5dc0 	call	a5dc <__mulsi3>
    9094:	100b883a 	mov	r5,r2
    9098:	8009883a 	mov	r4,r16
    909c:	00057280 	call	5728 <_malloc_r>
    90a0:	1007883a 	mov	r3,r2
    90a4:	10000c26 	beq	r2,zero,90d8 <_calloc_r+0x64>
    90a8:	11bfff17 	ldw	r6,-4(r2)
    90ac:	00bfff04 	movi	r2,-4
    90b0:	308c703a 	and	r6,r6,r2
    90b4:	31bfff04 	addi	r6,r6,-4
    90b8:	30800968 	cmpgeui	r2,r6,37
    90bc:	1000151e 	bne	r2,zero,9114 <_calloc_r+0xa0>
    90c0:	30800530 	cmpltui	r2,r6,20
    90c4:	10000926 	beq	r2,zero,90ec <_calloc_r+0x78>
    90c8:	1805883a 	mov	r2,r3
    90cc:	10000015 	stw	zero,0(r2)
    90d0:	10000115 	stw	zero,4(r2)
    90d4:	10000215 	stw	zero,8(r2)
    90d8:	1805883a 	mov	r2,r3
    90dc:	dfc00117 	ldw	ra,4(sp)
    90e0:	dc000017 	ldw	r16,0(sp)
    90e4:	dec00204 	addi	sp,sp,8
    90e8:	f800283a 	ret
    90ec:	18000015 	stw	zero,0(r3)
    90f0:	18000115 	stw	zero,4(r3)
    90f4:	30800728 	cmpgeui	r2,r6,28
    90f8:	10000b26 	beq	r2,zero,9128 <_calloc_r+0xb4>
    90fc:	18000215 	stw	zero,8(r3)
    9100:	18000315 	stw	zero,12(r3)
    9104:	31800920 	cmpeqi	r6,r6,36
    9108:	3000091e 	bne	r6,zero,9130 <_calloc_r+0xbc>
    910c:	18800404 	addi	r2,r3,16
    9110:	003fee06 	br	90cc <_calloc_r+0x58>
    9114:	1809883a 	mov	r4,r3
    9118:	000b883a 	mov	r5,zero
    911c:	00062300 	call	6230 <memset>
    9120:	1007883a 	mov	r3,r2
    9124:	003fec06 	br	90d8 <_calloc_r+0x64>
    9128:	18800204 	addi	r2,r3,8
    912c:	003fe706 	br	90cc <_calloc_r+0x58>
    9130:	18000415 	stw	zero,16(r3)
    9134:	18800604 	addi	r2,r3,24
    9138:	18000515 	stw	zero,20(r3)
    913c:	003fe306 	br	90cc <_calloc_r+0x58>

00009140 <_fclose_r>:
    9140:	defffc04 	addi	sp,sp,-16
    9144:	dfc00315 	stw	ra,12(sp)
    9148:	dc800215 	stw	r18,8(sp)
    914c:	dc400115 	stw	r17,4(sp)
    9150:	dc000015 	stw	r16,0(sp)
    9154:	28000726 	beq	r5,zero,9174 <_fclose_r+0x34>
    9158:	2023883a 	mov	r17,r4
    915c:	2821883a 	mov	r16,r5
    9160:	20000226 	beq	r4,zero,916c <_fclose_r+0x2c>
    9164:	20800e17 	ldw	r2,56(r4)
    9168:	10002726 	beq	r2,zero,9208 <_fclose_r+0xc8>
    916c:	8080030f 	ldh	r2,12(r16)
    9170:	1000081e 	bne	r2,zero,9194 <_fclose_r+0x54>
    9174:	0025883a 	mov	r18,zero
    9178:	9005883a 	mov	r2,r18
    917c:	dfc00317 	ldw	ra,12(sp)
    9180:	dc800217 	ldw	r18,8(sp)
    9184:	dc400117 	ldw	r17,4(sp)
    9188:	dc000017 	ldw	r16,0(sp)
    918c:	dec00404 	addi	sp,sp,16
    9190:	f800283a 	ret
    9194:	800b883a 	mov	r5,r16
    9198:	8809883a 	mov	r4,r17
    919c:	00044ec0 	call	44ec <__sflush_r>
    91a0:	1025883a 	mov	r18,r2
    91a4:	80800b17 	ldw	r2,44(r16)
    91a8:	10000426 	beq	r2,zero,91bc <_fclose_r+0x7c>
    91ac:	81400717 	ldw	r5,28(r16)
    91b0:	8809883a 	mov	r4,r17
    91b4:	103ee83a 	callr	r2
    91b8:	10001716 	blt	r2,zero,9218 <_fclose_r+0xd8>
    91bc:	8080030b 	ldhu	r2,12(r16)
    91c0:	1080200c 	andi	r2,r2,128
    91c4:	1000181e 	bne	r2,zero,9228 <_fclose_r+0xe8>
    91c8:	81400c17 	ldw	r5,48(r16)
    91cc:	28000526 	beq	r5,zero,91e4 <_fclose_r+0xa4>
    91d0:	80801004 	addi	r2,r16,64
    91d4:	28800226 	beq	r5,r2,91e0 <_fclose_r+0xa0>
    91d8:	8809883a 	mov	r4,r17
    91dc:	0004c0c0 	call	4c0c <_free_r>
    91e0:	80000c15 	stw	zero,48(r16)
    91e4:	81401117 	ldw	r5,68(r16)
    91e8:	28000326 	beq	r5,zero,91f8 <_fclose_r+0xb8>
    91ec:	8809883a 	mov	r4,r17
    91f0:	0004c0c0 	call	4c0c <_free_r>
    91f4:	80001115 	stw	zero,68(r16)
    91f8:	0004ab80 	call	4ab8 <__sfp_lock_acquire>
    91fc:	8000030d 	sth	zero,12(r16)
    9200:	0004abc0 	call	4abc <__sfp_lock_release>
    9204:	003fdc06 	br	9178 <_fclose_r+0x38>
    9208:	0004aa80 	call	4aa8 <__sinit>
    920c:	8080030f 	ldh	r2,12(r16)
    9210:	103fd826 	beq	r2,zero,9174 <_fclose_r+0x34>
    9214:	003fdf06 	br	9194 <_fclose_r+0x54>
    9218:	8080030b 	ldhu	r2,12(r16)
    921c:	04bfffc4 	movi	r18,-1
    9220:	1080200c 	andi	r2,r2,128
    9224:	103fe826 	beq	r2,zero,91c8 <_fclose_r+0x88>
    9228:	81400417 	ldw	r5,16(r16)
    922c:	8809883a 	mov	r4,r17
    9230:	0004c0c0 	call	4c0c <_free_r>
    9234:	003fe406 	br	91c8 <_fclose_r+0x88>

00009238 <fclose>:
    9238:	00800074 	movhi	r2,1
    923c:	200b883a 	mov	r5,r4
    9240:	1105f217 	ldw	r4,6088(r2)
    9244:	00091401 	jmpi	9140 <_fclose_r>

00009248 <__fputwc>:
    9248:	defff904 	addi	sp,sp,-28
    924c:	dcc00415 	stw	r19,16(sp)
    9250:	dc800315 	stw	r18,12(sp)
    9254:	dc000115 	stw	r16,4(sp)
    9258:	dfc00615 	stw	ra,24(sp)
    925c:	dd000515 	stw	r20,20(sp)
    9260:	dc400215 	stw	r17,8(sp)
    9264:	2025883a 	mov	r18,r4
    9268:	2827883a 	mov	r19,r5
    926c:	3021883a 	mov	r16,r6
    9270:	00095600 	call	9560 <__locale_mb_cur_max>
    9274:	10800058 	cmpnei	r2,r2,1
    9278:	1000071e 	bne	r2,zero,9298 <__fputwc+0x50>
    927c:	98bfffc4 	addi	r2,r19,-1
    9280:	10803fe8 	cmpgeui	r2,r2,255
    9284:	1000041e 	bne	r2,zero,9298 <__fputwc+0x50>
    9288:	980b883a 	mov	r5,r19
    928c:	dcc000c5 	stb	r19,3(sp)
    9290:	05000044 	movi	r20,1
    9294:	00000a06 	br	92c0 <__fputwc+0x78>
    9298:	81c01704 	addi	r7,r16,92
    929c:	980d883a 	mov	r6,r19
    92a0:	d94000c4 	addi	r5,sp,3
    92a4:	9009883a 	mov	r4,r18
    92a8:	00098cc0 	call	98cc <_wcrtomb_r>
    92ac:	1029883a 	mov	r20,r2
    92b0:	10bfffd8 	cmpnei	r2,r2,-1
    92b4:	10003426 	beq	r2,zero,9388 <__fputwc+0x140>
    92b8:	a0002926 	beq	r20,zero,9360 <__fputwc+0x118>
    92bc:	d94000c3 	ldbu	r5,3(sp)
    92c0:	0023883a 	mov	r17,zero
    92c4:	00000a06 	br	92f0 <__fputwc+0xa8>
    92c8:	80800017 	ldw	r2,0(r16)
    92cc:	11400005 	stb	r5,0(r2)
    92d0:	80800017 	ldw	r2,0(r16)
    92d4:	10800044 	addi	r2,r2,1
    92d8:	80800015 	stw	r2,0(r16)
    92dc:	8c400044 	addi	r17,r17,1
    92e0:	d88000c4 	addi	r2,sp,3
    92e4:	1445883a 	add	r2,r2,r17
    92e8:	8d001d2e 	bgeu	r17,r20,9360 <__fputwc+0x118>
    92ec:	11400003 	ldbu	r5,0(r2)
    92f0:	80800217 	ldw	r2,8(r16)
    92f4:	10bfffc4 	addi	r2,r2,-1
    92f8:	80800215 	stw	r2,8(r16)
    92fc:	103ff20e 	bge	r2,zero,92c8 <__fputwc+0x80>
    9300:	80c00617 	ldw	r3,24(r16)
    9304:	10c01016 	blt	r2,r3,9348 <__fputwc+0x100>
    9308:	80800017 	ldw	r2,0(r16)
    930c:	11400005 	stb	r5,0(r2)
    9310:	80800017 	ldw	r2,0(r16)
    9314:	10c00003 	ldbu	r3,0(r2)
    9318:	10800044 	addi	r2,r2,1
    931c:	18c002a0 	cmpeqi	r3,r3,10
    9320:	183fed26 	beq	r3,zero,92d8 <__fputwc+0x90>
    9324:	800d883a 	mov	r6,r16
    9328:	01400284 	movi	r5,10
    932c:	9009883a 	mov	r4,r18
    9330:	00097700 	call	9770 <__swbuf_r>
    9334:	10bfffe0 	cmpeqi	r2,r2,-1
    9338:	10803fcc 	andi	r2,r2,255
    933c:	103fe726 	beq	r2,zero,92dc <__fputwc+0x94>
    9340:	053fffc4 	movi	r20,-1
    9344:	00000706 	br	9364 <__fputwc+0x11c>
    9348:	29403fcc 	andi	r5,r5,255
    934c:	800d883a 	mov	r6,r16
    9350:	9009883a 	mov	r4,r18
    9354:	00097700 	call	9770 <__swbuf_r>
    9358:	10bfffe0 	cmpeqi	r2,r2,-1
    935c:	003ff606 	br	9338 <__fputwc+0xf0>
    9360:	9829883a 	mov	r20,r19
    9364:	a005883a 	mov	r2,r20
    9368:	dfc00617 	ldw	ra,24(sp)
    936c:	dd000517 	ldw	r20,20(sp)
    9370:	dcc00417 	ldw	r19,16(sp)
    9374:	dc800317 	ldw	r18,12(sp)
    9378:	dc400217 	ldw	r17,8(sp)
    937c:	dc000117 	ldw	r16,4(sp)
    9380:	dec00704 	addi	sp,sp,28
    9384:	f800283a 	ret
    9388:	8080030b 	ldhu	r2,12(r16)
    938c:	10801014 	ori	r2,r2,64
    9390:	8080030d 	sth	r2,12(r16)
    9394:	003ff306 	br	9364 <__fputwc+0x11c>

00009398 <_fputwc_r>:
    9398:	3080030b 	ldhu	r2,12(r6)
    939c:	10c8000c 	andi	r3,r2,8192
    93a0:	1800051e 	bne	r3,zero,93b8 <_fputwc_r+0x20>
    93a4:	30c01917 	ldw	r3,100(r6)
    93a8:	10880014 	ori	r2,r2,8192
    93ac:	3080030d 	sth	r2,12(r6)
    93b0:	18880014 	ori	r2,r3,8192
    93b4:	30801915 	stw	r2,100(r6)
    93b8:	00092481 	jmpi	9248 <__fputwc>

000093bc <fputwc>:
    93bc:	defffc04 	addi	sp,sp,-16
    93c0:	00800074 	movhi	r2,1
    93c4:	dc000115 	stw	r16,4(sp)
    93c8:	1405f217 	ldw	r16,6088(r2)
    93cc:	dc400215 	stw	r17,8(sp)
    93d0:	dfc00315 	stw	ra,12(sp)
    93d4:	2023883a 	mov	r17,r4
    93d8:	80000226 	beq	r16,zero,93e4 <fputwc+0x28>
    93dc:	80800e17 	ldw	r2,56(r16)
    93e0:	10001026 	beq	r2,zero,9424 <fputwc+0x68>
    93e4:	2880030b 	ldhu	r2,12(r5)
    93e8:	10c8000c 	andi	r3,r2,8192
    93ec:	1800051e 	bne	r3,zero,9404 <fputwc+0x48>
    93f0:	28c01917 	ldw	r3,100(r5)
    93f4:	10880014 	ori	r2,r2,8192
    93f8:	2880030d 	sth	r2,12(r5)
    93fc:	18880014 	ori	r2,r3,8192
    9400:	28801915 	stw	r2,100(r5)
    9404:	280d883a 	mov	r6,r5
    9408:	8009883a 	mov	r4,r16
    940c:	880b883a 	mov	r5,r17
    9410:	dfc00317 	ldw	ra,12(sp)
    9414:	dc400217 	ldw	r17,8(sp)
    9418:	dc000117 	ldw	r16,4(sp)
    941c:	dec00404 	addi	sp,sp,16
    9420:	00092481 	jmpi	9248 <__fputwc>
    9424:	8009883a 	mov	r4,r16
    9428:	d9400015 	stw	r5,0(sp)
    942c:	0004aa80 	call	4aa8 <__sinit>
    9430:	d9400017 	ldw	r5,0(sp)
    9434:	003feb06 	br	93e4 <fputwc+0x28>

00009438 <_fstat_r>:
    9438:	defffe04 	addi	sp,sp,-8
    943c:	2805883a 	mov	r2,r5
    9440:	dc000015 	stw	r16,0(sp)
    9444:	300b883a 	mov	r5,r6
    9448:	2021883a 	mov	r16,r4
    944c:	1009883a 	mov	r4,r2
    9450:	00800074 	movhi	r2,1
    9454:	dfc00115 	stw	ra,4(sp)
    9458:	100d2215 	stw	zero,13448(r2)
    945c:	000d0c00 	call	d0c0 <fstat>
    9460:	10ffffd8 	cmpnei	r3,r2,-1
    9464:	18000426 	beq	r3,zero,9478 <_fstat_r+0x40>
    9468:	dfc00117 	ldw	ra,4(sp)
    946c:	dc000017 	ldw	r16,0(sp)
    9470:	dec00204 	addi	sp,sp,8
    9474:	f800283a 	ret
    9478:	00c00074 	movhi	r3,1
    947c:	18cd2217 	ldw	r3,13448(r3)
    9480:	183ff926 	beq	r3,zero,9468 <_fstat_r+0x30>
    9484:	80c00015 	stw	r3,0(r16)
    9488:	dfc00117 	ldw	ra,4(sp)
    948c:	dc000017 	ldw	r16,0(sp)
    9490:	dec00204 	addi	sp,sp,8
    9494:	f800283a 	ret

00009498 <_isatty_r>:
    9498:	defffe04 	addi	sp,sp,-8
    949c:	dc000015 	stw	r16,0(sp)
    94a0:	00800074 	movhi	r2,1
    94a4:	2021883a 	mov	r16,r4
    94a8:	2809883a 	mov	r4,r5
    94ac:	dfc00115 	stw	ra,4(sp)
    94b0:	100d2215 	stw	zero,13448(r2)
    94b4:	000d1b80 	call	d1b8 <isatty>
    94b8:	10ffffd8 	cmpnei	r3,r2,-1
    94bc:	18000426 	beq	r3,zero,94d0 <_isatty_r+0x38>
    94c0:	dfc00117 	ldw	ra,4(sp)
    94c4:	dc000017 	ldw	r16,0(sp)
    94c8:	dec00204 	addi	sp,sp,8
    94cc:	f800283a 	ret
    94d0:	00c00074 	movhi	r3,1
    94d4:	18cd2217 	ldw	r3,13448(r3)
    94d8:	183ff926 	beq	r3,zero,94c0 <_isatty_r+0x28>
    94dc:	80c00015 	stw	r3,0(r16)
    94e0:	dfc00117 	ldw	ra,4(sp)
    94e4:	dc000017 	ldw	r16,0(sp)
    94e8:	dec00204 	addi	sp,sp,8
    94ec:	f800283a 	ret

000094f0 <_setlocale_r>:
    94f0:	30001826 	beq	r6,zero,9554 <_setlocale_r+0x64>
    94f4:	01400074 	movhi	r5,1
    94f8:	defffe04 	addi	sp,sp,-8
    94fc:	297df004 	addi	r5,r5,-2112
    9500:	3009883a 	mov	r4,r6
    9504:	dc000015 	stw	r16,0(sp)
    9508:	dfc00115 	stw	ra,4(sp)
    950c:	3021883a 	mov	r16,r6
    9510:	00096980 	call	9698 <strcmp>
    9514:	1000061e 	bne	r2,zero,9530 <_setlocale_r+0x40>
    9518:	00800074 	movhi	r2,1
    951c:	10bdef04 	addi	r2,r2,-2116
    9520:	dfc00117 	ldw	ra,4(sp)
    9524:	dc000017 	ldw	r16,0(sp)
    9528:	dec00204 	addi	sp,sp,8
    952c:	f800283a 	ret
    9530:	01400074 	movhi	r5,1
    9534:	297def04 	addi	r5,r5,-2116
    9538:	8009883a 	mov	r4,r16
    953c:	00096980 	call	9698 <strcmp>
    9540:	103ff526 	beq	r2,zero,9518 <_setlocale_r+0x28>
    9544:	80800003 	ldbu	r2,0(r16)
    9548:	103ff326 	beq	r2,zero,9518 <_setlocale_r+0x28>
    954c:	0005883a 	mov	r2,zero
    9550:	003ff306 	br	9520 <_setlocale_r+0x30>
    9554:	00800074 	movhi	r2,1
    9558:	10bdef04 	addi	r2,r2,-2116
    955c:	f800283a 	ret

00009560 <__locale_mb_cur_max>:
    9560:	00800074 	movhi	r2,1
    9564:	10815907 	ldb	r2,1380(r2)
    9568:	f800283a 	ret

0000956c <setlocale>:
    956c:	00800074 	movhi	r2,1
    9570:	280d883a 	mov	r6,r5
    9574:	200b883a 	mov	r5,r4
    9578:	1105f217 	ldw	r4,6088(r2)
    957c:	00094f01 	jmpi	94f0 <_setlocale_r>

00009580 <_lseek_r>:
    9580:	defffe04 	addi	sp,sp,-8
    9584:	2805883a 	mov	r2,r5
    9588:	dc000015 	stw	r16,0(sp)
    958c:	300b883a 	mov	r5,r6
    9590:	2021883a 	mov	r16,r4
    9594:	380d883a 	mov	r6,r7
    9598:	1009883a 	mov	r4,r2
    959c:	00800074 	movhi	r2,1
    95a0:	dfc00115 	stw	ra,4(sp)
    95a4:	100d2215 	stw	zero,13448(r2)
    95a8:	000d3900 	call	d390 <lseek>
    95ac:	10ffffd8 	cmpnei	r3,r2,-1
    95b0:	18000426 	beq	r3,zero,95c4 <_lseek_r+0x44>
    95b4:	dfc00117 	ldw	ra,4(sp)
    95b8:	dc000017 	ldw	r16,0(sp)
    95bc:	dec00204 	addi	sp,sp,8
    95c0:	f800283a 	ret
    95c4:	00c00074 	movhi	r3,1
    95c8:	18cd2217 	ldw	r3,13448(r3)
    95cc:	183ff926 	beq	r3,zero,95b4 <_lseek_r+0x34>
    95d0:	80c00015 	stw	r3,0(r16)
    95d4:	dfc00117 	ldw	ra,4(sp)
    95d8:	dc000017 	ldw	r16,0(sp)
    95dc:	dec00204 	addi	sp,sp,8
    95e0:	f800283a 	ret

000095e4 <_mbtowc_r>:
    95e4:	00800074 	movhi	r2,1
    95e8:	10814817 	ldw	r2,1312(r2)
    95ec:	1000683a 	jmp	r2

000095f0 <__ascii_mbtowc>:
    95f0:	deffff04 	addi	sp,sp,-4
    95f4:	28000826 	beq	r5,zero,9618 <__ascii_mbtowc+0x28>
    95f8:	30000926 	beq	r6,zero,9620 <__ascii_mbtowc+0x30>
    95fc:	38000b26 	beq	r7,zero,962c <__ascii_mbtowc+0x3c>
    9600:	30800003 	ldbu	r2,0(r6)
    9604:	28800015 	stw	r2,0(r5)
    9608:	30800003 	ldbu	r2,0(r6)
    960c:	1004c03a 	cmpne	r2,r2,zero
    9610:	dec00104 	addi	sp,sp,4
    9614:	f800283a 	ret
    9618:	d80b883a 	mov	r5,sp
    961c:	303ff71e 	bne	r6,zero,95fc <__ascii_mbtowc+0xc>
    9620:	0005883a 	mov	r2,zero
    9624:	dec00104 	addi	sp,sp,4
    9628:	f800283a 	ret
    962c:	00bfff84 	movi	r2,-2
    9630:	003ff706 	br	9610 <__ascii_mbtowc+0x20>

00009634 <_read_r>:
    9634:	defffe04 	addi	sp,sp,-8
    9638:	2805883a 	mov	r2,r5
    963c:	dc000015 	stw	r16,0(sp)
    9640:	300b883a 	mov	r5,r6
    9644:	2021883a 	mov	r16,r4
    9648:	380d883a 	mov	r6,r7
    964c:	1009883a 	mov	r4,r2
    9650:	00800074 	movhi	r2,1
    9654:	dfc00115 	stw	ra,4(sp)
    9658:	100d2215 	stw	zero,13448(r2)
    965c:	000d5700 	call	d570 <read>
    9660:	10ffffd8 	cmpnei	r3,r2,-1
    9664:	18000426 	beq	r3,zero,9678 <_read_r+0x44>
    9668:	dfc00117 	ldw	ra,4(sp)
    966c:	dc000017 	ldw	r16,0(sp)
    9670:	dec00204 	addi	sp,sp,8
    9674:	f800283a 	ret
    9678:	00c00074 	movhi	r3,1
    967c:	18cd2217 	ldw	r3,13448(r3)
    9680:	183ff926 	beq	r3,zero,9668 <_read_r+0x34>
    9684:	80c00015 	stw	r3,0(r16)
    9688:	dfc00117 	ldw	ra,4(sp)
    968c:	dc000017 	ldw	r16,0(sp)
    9690:	dec00204 	addi	sp,sp,8
    9694:	f800283a 	ret

00009698 <strcmp>:
    9698:	2144b03a 	or	r2,r4,r5
    969c:	108000cc 	andi	r2,r2,3
    96a0:	1000171e 	bne	r2,zero,9700 <strcmp+0x68>
    96a4:	20800017 	ldw	r2,0(r4)
    96a8:	28c00017 	ldw	r3,0(r5)
    96ac:	10c0141e 	bne	r2,r3,9700 <strcmp+0x68>
    96b0:	027fbff4 	movhi	r9,65279
    96b4:	4a7fbfc4 	addi	r9,r9,-257
    96b8:	1247883a 	add	r3,r2,r9
    96bc:	02202074 	movhi	r8,32897
    96c0:	0084303a 	nor	r2,zero,r2
    96c4:	1884703a 	and	r2,r3,r2
    96c8:	42202004 	addi	r8,r8,-32640
    96cc:	1204703a 	and	r2,r2,r8
    96d0:	10000226 	beq	r2,zero,96dc <strcmp+0x44>
    96d4:	00002406 	br	9768 <strcmp+0xd0>
    96d8:	1000231e 	bne	r2,zero,9768 <strcmp+0xd0>
    96dc:	21000104 	addi	r4,r4,4
    96e0:	20c00017 	ldw	r3,0(r4)
    96e4:	29400104 	addi	r5,r5,4
    96e8:	29800017 	ldw	r6,0(r5)
    96ec:	1a45883a 	add	r2,r3,r9
    96f0:	00ce303a 	nor	r7,zero,r3
    96f4:	11c4703a 	and	r2,r2,r7
    96f8:	1204703a 	and	r2,r2,r8
    96fc:	19bff626 	beq	r3,r6,96d8 <strcmp+0x40>
    9700:	20800003 	ldbu	r2,0(r4)
    9704:	10c03fcc 	andi	r3,r2,255
    9708:	18c0201c 	xori	r3,r3,128
    970c:	18ffe004 	addi	r3,r3,-128
    9710:	18000d26 	beq	r3,zero,9748 <strcmp+0xb0>
    9714:	29800007 	ldb	r6,0(r5)
    9718:	10803fcc 	andi	r2,r2,255
    971c:	19800326 	beq	r3,r6,972c <strcmp+0x94>
    9720:	00000a06 	br	974c <strcmp+0xb4>
    9724:	29800007 	ldb	r6,0(r5)
    9728:	11800b1e 	bne	r2,r6,9758 <strcmp+0xc0>
    972c:	21000044 	addi	r4,r4,1
    9730:	20c00003 	ldbu	r3,0(r4)
    9734:	29400044 	addi	r5,r5,1
    9738:	18803fcc 	andi	r2,r3,255
    973c:	1080201c 	xori	r2,r2,128
    9740:	10bfe004 	addi	r2,r2,-128
    9744:	103ff71e 	bne	r2,zero,9724 <strcmp+0x8c>
    9748:	0005883a 	mov	r2,zero
    974c:	28c00003 	ldbu	r3,0(r5)
    9750:	10c5c83a 	sub	r2,r2,r3
    9754:	f800283a 	ret
    9758:	18803fcc 	andi	r2,r3,255
    975c:	28c00003 	ldbu	r3,0(r5)
    9760:	10c5c83a 	sub	r2,r2,r3
    9764:	f800283a 	ret
    9768:	0005883a 	mov	r2,zero
    976c:	f800283a 	ret

00009770 <__swbuf_r>:
    9770:	defffb04 	addi	sp,sp,-20
    9774:	dc800215 	stw	r18,8(sp)
    9778:	dc400115 	stw	r17,4(sp)
    977c:	dc000015 	stw	r16,0(sp)
    9780:	dfc00415 	stw	ra,16(sp)
    9784:	dcc00315 	stw	r19,12(sp)
    9788:	2023883a 	mov	r17,r4
    978c:	2825883a 	mov	r18,r5
    9790:	3021883a 	mov	r16,r6
    9794:	20000226 	beq	r4,zero,97a0 <__swbuf_r+0x30>
    9798:	20800e17 	ldw	r2,56(r4)
    979c:	10003e26 	beq	r2,zero,9898 <__swbuf_r+0x128>
    97a0:	80800617 	ldw	r2,24(r16)
    97a4:	80c0030b 	ldhu	r3,12(r16)
    97a8:	80800215 	stw	r2,8(r16)
    97ac:	1880020c 	andi	r2,r3,8
    97b0:	10001f26 	beq	r2,zero,9830 <__swbuf_r+0xc0>
    97b4:	80800417 	ldw	r2,16(r16)
    97b8:	10001d26 	beq	r2,zero,9830 <__swbuf_r+0xc0>
    97bc:	1908000c 	andi	r4,r3,8192
    97c0:	94c03fcc 	andi	r19,r18,255
    97c4:	20002326 	beq	r4,zero,9854 <__swbuf_r+0xe4>
    97c8:	80c00017 	ldw	r3,0(r16)
    97cc:	81000517 	ldw	r4,20(r16)
    97d0:	1885c83a 	sub	r2,r3,r2
    97d4:	1100290e 	bge	r2,r4,987c <__swbuf_r+0x10c>
    97d8:	10800044 	addi	r2,r2,1
    97dc:	81000217 	ldw	r4,8(r16)
    97e0:	19400044 	addi	r5,r3,1
    97e4:	81400015 	stw	r5,0(r16)
    97e8:	213fffc4 	addi	r4,r4,-1
    97ec:	81000215 	stw	r4,8(r16)
    97f0:	1c800005 	stb	r18,0(r3)
    97f4:	80c00517 	ldw	r3,20(r16)
    97f8:	18802926 	beq	r3,r2,98a0 <__swbuf_r+0x130>
    97fc:	8080030b 	ldhu	r2,12(r16)
    9800:	1080004c 	andi	r2,r2,1
    9804:	10000226 	beq	r2,zero,9810 <__swbuf_r+0xa0>
    9808:	98800298 	cmpnei	r2,r19,10
    980c:	10002426 	beq	r2,zero,98a0 <__swbuf_r+0x130>
    9810:	9805883a 	mov	r2,r19
    9814:	dfc00417 	ldw	ra,16(sp)
    9818:	dcc00317 	ldw	r19,12(sp)
    981c:	dc800217 	ldw	r18,8(sp)
    9820:	dc400117 	ldw	r17,4(sp)
    9824:	dc000017 	ldw	r16,0(sp)
    9828:	dec00504 	addi	sp,sp,20
    982c:	f800283a 	ret
    9830:	800b883a 	mov	r5,r16
    9834:	8809883a 	mov	r4,r17
    9838:	0002a900 	call	2a90 <__swsetup_r>
    983c:	10001c1e 	bne	r2,zero,98b0 <__swbuf_r+0x140>
    9840:	80c0030b 	ldhu	r3,12(r16)
    9844:	80800417 	ldw	r2,16(r16)
    9848:	94c03fcc 	andi	r19,r18,255
    984c:	1908000c 	andi	r4,r3,8192
    9850:	203fdd1e 	bne	r4,zero,97c8 <__swbuf_r+0x58>
    9854:	81001917 	ldw	r4,100(r16)
    9858:	18c80014 	ori	r3,r3,8192
    985c:	0177ffc4 	movi	r5,-8193
    9860:	2148703a 	and	r4,r4,r5
    9864:	80c0030d 	sth	r3,12(r16)
    9868:	80c00017 	ldw	r3,0(r16)
    986c:	81001915 	stw	r4,100(r16)
    9870:	81000517 	ldw	r4,20(r16)
    9874:	1885c83a 	sub	r2,r3,r2
    9878:	113fd716 	blt	r2,r4,97d8 <__swbuf_r+0x68>
    987c:	800b883a 	mov	r5,r16
    9880:	8809883a 	mov	r4,r17
    9884:	00047140 	call	4714 <_fflush_r>
    9888:	1000091e 	bne	r2,zero,98b0 <__swbuf_r+0x140>
    988c:	80c00017 	ldw	r3,0(r16)
    9890:	00800044 	movi	r2,1
    9894:	003fd106 	br	97dc <__swbuf_r+0x6c>
    9898:	0004aa80 	call	4aa8 <__sinit>
    989c:	003fc006 	br	97a0 <__swbuf_r+0x30>
    98a0:	800b883a 	mov	r5,r16
    98a4:	8809883a 	mov	r4,r17
    98a8:	00047140 	call	4714 <_fflush_r>
    98ac:	103fd826 	beq	r2,zero,9810 <__swbuf_r+0xa0>
    98b0:	04ffffc4 	movi	r19,-1
    98b4:	003fd606 	br	9810 <__swbuf_r+0xa0>

000098b8 <__swbuf>:
    98b8:	00800074 	movhi	r2,1
    98bc:	280d883a 	mov	r6,r5
    98c0:	200b883a 	mov	r5,r4
    98c4:	1105f217 	ldw	r4,6088(r2)
    98c8:	00097701 	jmpi	9770 <__swbuf_r>

000098cc <_wcrtomb_r>:
    98cc:	defffa04 	addi	sp,sp,-24
    98d0:	dc400415 	stw	r17,16(sp)
    98d4:	dc000315 	stw	r16,12(sp)
    98d8:	00800074 	movhi	r2,1
    98dc:	dfc00515 	stw	ra,20(sp)
    98e0:	2021883a 	mov	r16,r4
    98e4:	3823883a 	mov	r17,r7
    98e8:	10814717 	ldw	r2,1308(r2)
    98ec:	28000826 	beq	r5,zero,9910 <_wcrtomb_r+0x44>
    98f0:	103ee83a 	callr	r2
    98f4:	10ffffd8 	cmpnei	r3,r2,-1
    98f8:	18000a26 	beq	r3,zero,9924 <_wcrtomb_r+0x58>
    98fc:	dfc00517 	ldw	ra,20(sp)
    9900:	dc400417 	ldw	r17,16(sp)
    9904:	dc000317 	ldw	r16,12(sp)
    9908:	dec00604 	addi	sp,sp,24
    990c:	f800283a 	ret
    9910:	000d883a 	mov	r6,zero
    9914:	d9400084 	addi	r5,sp,2
    9918:	103ee83a 	callr	r2
    991c:	10ffffd8 	cmpnei	r3,r2,-1
    9920:	183ff61e 	bne	r3,zero,98fc <_wcrtomb_r+0x30>
    9924:	00802284 	movi	r2,138
    9928:	88000015 	stw	zero,0(r17)
    992c:	80800015 	stw	r2,0(r16)
    9930:	00bfffc4 	movi	r2,-1
    9934:	003ff106 	br	98fc <_wcrtomb_r+0x30>

00009938 <wcrtomb>:
    9938:	defffa04 	addi	sp,sp,-24
    993c:	00800074 	movhi	r2,1
    9940:	dc400415 	stw	r17,16(sp)
    9944:	dc000315 	stw	r16,12(sp)
    9948:	dfc00515 	stw	ra,20(sp)
    994c:	1405f217 	ldw	r16,6088(r2)
    9950:	00800074 	movhi	r2,1
    9954:	3023883a 	mov	r17,r6
    9958:	10814717 	ldw	r2,1308(r2)
    995c:	300f883a 	mov	r7,r6
    9960:	20000b26 	beq	r4,zero,9990 <wcrtomb+0x58>
    9964:	280d883a 	mov	r6,r5
    9968:	200b883a 	mov	r5,r4
    996c:	8009883a 	mov	r4,r16
    9970:	103ee83a 	callr	r2
    9974:	10ffffd8 	cmpnei	r3,r2,-1
    9978:	18000b26 	beq	r3,zero,99a8 <wcrtomb+0x70>
    997c:	dfc00517 	ldw	ra,20(sp)
    9980:	dc400417 	ldw	r17,16(sp)
    9984:	dc000317 	ldw	r16,12(sp)
    9988:	dec00604 	addi	sp,sp,24
    998c:	f800283a 	ret
    9990:	000d883a 	mov	r6,zero
    9994:	d9400084 	addi	r5,sp,2
    9998:	8009883a 	mov	r4,r16
    999c:	103ee83a 	callr	r2
    99a0:	10ffffd8 	cmpnei	r3,r2,-1
    99a4:	183ff51e 	bne	r3,zero,997c <wcrtomb+0x44>
    99a8:	00802284 	movi	r2,138
    99ac:	88000015 	stw	zero,0(r17)
    99b0:	80800015 	stw	r2,0(r16)
    99b4:	00bfffc4 	movi	r2,-1
    99b8:	003ff006 	br	997c <wcrtomb+0x44>

000099bc <_wctomb_r>:
    99bc:	00800074 	movhi	r2,1
    99c0:	10814717 	ldw	r2,1308(r2)
    99c4:	1000683a 	jmp	r2

000099c8 <__ascii_wctomb>:
    99c8:	28000926 	beq	r5,zero,99f0 <__ascii_wctomb+0x28>
    99cc:	30804030 	cmpltui	r2,r6,256
    99d0:	10000326 	beq	r2,zero,99e0 <__ascii_wctomb+0x18>
    99d4:	29800005 	stb	r6,0(r5)
    99d8:	00800044 	movi	r2,1
    99dc:	f800283a 	ret
    99e0:	00802284 	movi	r2,138
    99e4:	20800015 	stw	r2,0(r4)
    99e8:	00bfffc4 	movi	r2,-1
    99ec:	f800283a 	ret
    99f0:	0005883a 	mov	r2,zero
    99f4:	f800283a 	ret

000099f8 <__udivdi3>:
    99f8:	defff504 	addi	sp,sp,-44
    99fc:	dd000515 	stw	r20,20(sp)
    9a00:	dc000115 	stw	r16,4(sp)
    9a04:	dfc00a15 	stw	ra,40(sp)
    9a08:	df000915 	stw	fp,36(sp)
    9a0c:	ddc00815 	stw	r23,32(sp)
    9a10:	dd800715 	stw	r22,28(sp)
    9a14:	dd400615 	stw	r21,24(sp)
    9a18:	dcc00415 	stw	r19,16(sp)
    9a1c:	dc800315 	stw	r18,12(sp)
    9a20:	dc400215 	stw	r17,8(sp)
    9a24:	2029883a 	mov	r20,r4
    9a28:	2821883a 	mov	r16,r5
    9a2c:	38008c1e 	bne	r7,zero,9c60 <__udivdi3+0x268>
    9a30:	3827883a 	mov	r19,r7
    9a34:	3023883a 	mov	r17,r6
    9a38:	2025883a 	mov	r18,r4
    9a3c:	2980422e 	bgeu	r5,r6,9b48 <__udivdi3+0x150>
    9a40:	00bfffd4 	movui	r2,65535
    9a44:	282f883a 	mov	r23,r5
    9a48:	1180af2e 	bgeu	r2,r6,9d08 <__udivdi3+0x310>
    9a4c:	00804034 	movhi	r2,256
    9a50:	30815936 	bltu	r6,r2,9fb8 <__udivdi3+0x5c0>
    9a54:	3006d63a 	srli	r3,r6,24
    9a58:	04c00604 	movi	r19,24
    9a5c:	00800074 	movhi	r2,1
    9a60:	1885883a 	add	r2,r3,r2
    9a64:	10be9343 	ldbu	r2,-1459(r2)
    9a68:	14e7883a 	add	r19,r2,r19
    9a6c:	00800804 	movi	r2,32
    9a70:	14c5c83a 	sub	r2,r2,r19
    9a74:	10000526 	beq	r2,zero,9a8c <__udivdi3+0x94>
    9a78:	80a0983a 	sll	r16,r16,r2
    9a7c:	a4e6d83a 	srl	r19,r20,r19
    9a80:	30a2983a 	sll	r17,r6,r2
    9a84:	a0a4983a 	sll	r18,r20,r2
    9a88:	9c2eb03a 	or	r23,r19,r16
    9a8c:	882ad43a 	srli	r21,r17,16
    9a90:	b809883a 	mov	r4,r23
    9a94:	8dbfffcc 	andi	r22,r17,65535
    9a98:	a80b883a 	mov	r5,r21
    9a9c:	00005f80 	call	5f8 <__umodsi3>
    9aa0:	a80b883a 	mov	r5,r21
    9aa4:	b809883a 	mov	r4,r23
    9aa8:	1029883a 	mov	r20,r2
    9aac:	00005940 	call	594 <__udivsi3>
    9ab0:	100b883a 	mov	r5,r2
    9ab4:	b009883a 	mov	r4,r22
    9ab8:	1021883a 	mov	r16,r2
    9abc:	000a5dc0 	call	a5dc <__mulsi3>
    9ac0:	a028943a 	slli	r20,r20,16
    9ac4:	9006d43a 	srli	r3,r18,16
    9ac8:	a0c6b03a 	or	r3,r20,r3
    9acc:	1880052e 	bgeu	r3,r2,9ae4 <__udivdi3+0xec>
    9ad0:	1c47883a 	add	r3,r3,r17
    9ad4:	813fffc4 	addi	r4,r16,-1
    9ad8:	1c400136 	bltu	r3,r17,9ae0 <__udivdi3+0xe8>
    9adc:	18814736 	bltu	r3,r2,9ffc <__udivdi3+0x604>
    9ae0:	2021883a 	mov	r16,r4
    9ae4:	18a7c83a 	sub	r19,r3,r2
    9ae8:	9809883a 	mov	r4,r19
    9aec:	a80b883a 	mov	r5,r21
    9af0:	00005f80 	call	5f8 <__umodsi3>
    9af4:	1029883a 	mov	r20,r2
    9af8:	9809883a 	mov	r4,r19
    9afc:	a80b883a 	mov	r5,r21
    9b00:	a028943a 	slli	r20,r20,16
    9b04:	00005940 	call	594 <__udivsi3>
    9b08:	100b883a 	mov	r5,r2
    9b0c:	b009883a 	mov	r4,r22
    9b10:	94bfffcc 	andi	r18,r18,65535
    9b14:	1027883a 	mov	r19,r2
    9b18:	a4a4b03a 	or	r18,r20,r18
    9b1c:	000a5dc0 	call	a5dc <__mulsi3>
    9b20:	9080052e 	bgeu	r18,r2,9b38 <__udivdi3+0x140>
    9b24:	8ca5883a 	add	r18,r17,r18
    9b28:	98ffffc4 	addi	r3,r19,-1
    9b2c:	94400136 	bltu	r18,r17,9b34 <__udivdi3+0x13c>
    9b30:	90813036 	bltu	r18,r2,9ff4 <__udivdi3+0x5fc>
    9b34:	1827883a 	mov	r19,r3
    9b38:	8004943a 	slli	r2,r16,16
    9b3c:	0007883a 	mov	r3,zero
    9b40:	14c4b03a 	or	r2,r2,r19
    9b44:	00005a06 	br	9cb0 <__udivdi3+0x2b8>
    9b48:	3000041e 	bne	r6,zero,9b5c <__udivdi3+0x164>
    9b4c:	000b883a 	mov	r5,zero
    9b50:	01000044 	movi	r4,1
    9b54:	00005940 	call	594 <__udivsi3>
    9b58:	1023883a 	mov	r17,r2
    9b5c:	00bfffd4 	movui	r2,65535
    9b60:	1440642e 	bgeu	r2,r17,9cf4 <__udivdi3+0x2fc>
    9b64:	00804034 	movhi	r2,256
    9b68:	88811036 	bltu	r17,r2,9fac <__udivdi3+0x5b4>
    9b6c:	8806d63a 	srli	r3,r17,24
    9b70:	04c00604 	movi	r19,24
    9b74:	00800074 	movhi	r2,1
    9b78:	1885883a 	add	r2,r3,r2
    9b7c:	10be9343 	ldbu	r2,-1459(r2)
    9b80:	00c00804 	movi	r3,32
    9b84:	14e7883a 	add	r19,r2,r19
    9b88:	1cc7c83a 	sub	r3,r3,r19
    9b8c:	1800631e 	bne	r3,zero,9d1c <__udivdi3+0x324>
    9b90:	882ad43a 	srli	r21,r17,16
    9b94:	8461c83a 	sub	r16,r16,r17
    9b98:	8dbfffcc 	andi	r22,r17,65535
    9b9c:	00c00044 	movi	r3,1
    9ba0:	8009883a 	mov	r4,r16
    9ba4:	a80b883a 	mov	r5,r21
    9ba8:	d8c00015 	stw	r3,0(sp)
    9bac:	00005f80 	call	5f8 <__umodsi3>
    9bb0:	8009883a 	mov	r4,r16
    9bb4:	a80b883a 	mov	r5,r21
    9bb8:	1029883a 	mov	r20,r2
    9bbc:	00005940 	call	594 <__udivsi3>
    9bc0:	1009883a 	mov	r4,r2
    9bc4:	b00b883a 	mov	r5,r22
    9bc8:	1021883a 	mov	r16,r2
    9bcc:	000a5dc0 	call	a5dc <__mulsi3>
    9bd0:	a028943a 	slli	r20,r20,16
    9bd4:	9008d43a 	srli	r4,r18,16
    9bd8:	d8c00017 	ldw	r3,0(sp)
    9bdc:	a108b03a 	or	r4,r20,r4
    9be0:	2080052e 	bgeu	r4,r2,9bf8 <__udivdi3+0x200>
    9be4:	2449883a 	add	r4,r4,r17
    9be8:	817fffc4 	addi	r5,r16,-1
    9bec:	24400136 	bltu	r4,r17,9bf4 <__udivdi3+0x1fc>
    9bf0:	20810536 	bltu	r4,r2,a008 <__udivdi3+0x610>
    9bf4:	2821883a 	mov	r16,r5
    9bf8:	20a7c83a 	sub	r19,r4,r2
    9bfc:	9809883a 	mov	r4,r19
    9c00:	a80b883a 	mov	r5,r21
    9c04:	d8c00015 	stw	r3,0(sp)
    9c08:	00005f80 	call	5f8 <__umodsi3>
    9c0c:	1029883a 	mov	r20,r2
    9c10:	9809883a 	mov	r4,r19
    9c14:	a80b883a 	mov	r5,r21
    9c18:	a028943a 	slli	r20,r20,16
    9c1c:	00005940 	call	594 <__udivsi3>
    9c20:	b00b883a 	mov	r5,r22
    9c24:	1009883a 	mov	r4,r2
    9c28:	94bfffcc 	andi	r18,r18,65535
    9c2c:	1027883a 	mov	r19,r2
    9c30:	a4a4b03a 	or	r18,r20,r18
    9c34:	000a5dc0 	call	a5dc <__mulsi3>
    9c38:	d8c00017 	ldw	r3,0(sp)
    9c3c:	9080052e 	bgeu	r18,r2,9c54 <__udivdi3+0x25c>
    9c40:	8ca5883a 	add	r18,r17,r18
    9c44:	993fffc4 	addi	r4,r19,-1
    9c48:	94400136 	bltu	r18,r17,9c50 <__udivdi3+0x258>
    9c4c:	9080e736 	bltu	r18,r2,9fec <__udivdi3+0x5f4>
    9c50:	2027883a 	mov	r19,r4
    9c54:	8004943a 	slli	r2,r16,16
    9c58:	14c4b03a 	or	r2,r2,r19
    9c5c:	00001406 	br	9cb0 <__udivdi3+0x2b8>
    9c60:	29c01136 	bltu	r5,r7,9ca8 <__udivdi3+0x2b0>
    9c64:	00bfffd4 	movui	r2,65535
    9c68:	11c01d2e 	bgeu	r2,r7,9ce0 <__udivdi3+0x2e8>
    9c6c:	00804034 	movhi	r2,256
    9c70:	3880c336 	bltu	r7,r2,9f80 <__udivdi3+0x588>
    9c74:	3808d63a 	srli	r4,r7,24
    9c78:	00c00604 	movi	r3,24
    9c7c:	00800074 	movhi	r2,1
    9c80:	2085883a 	add	r2,r4,r2
    9c84:	113e9343 	ldbu	r4,-1459(r2)
    9c88:	20c9883a 	add	r4,r4,r3
    9c8c:	00c00804 	movi	r3,32
    9c90:	192fc83a 	sub	r23,r3,r4
    9c94:	b800581e 	bne	r23,zero,9df8 <__udivdi3+0x400>
    9c98:	3c00bc36 	bltu	r7,r16,9f8c <__udivdi3+0x594>
    9c9c:	a185403a 	cmpgeu	r2,r20,r6
    9ca0:	0007883a 	mov	r3,zero
    9ca4:	00000206 	br	9cb0 <__udivdi3+0x2b8>
    9ca8:	0007883a 	mov	r3,zero
    9cac:	0005883a 	mov	r2,zero
    9cb0:	dfc00a17 	ldw	ra,40(sp)
    9cb4:	df000917 	ldw	fp,36(sp)
    9cb8:	ddc00817 	ldw	r23,32(sp)
    9cbc:	dd800717 	ldw	r22,28(sp)
    9cc0:	dd400617 	ldw	r21,24(sp)
    9cc4:	dd000517 	ldw	r20,20(sp)
    9cc8:	dcc00417 	ldw	r19,16(sp)
    9ccc:	dc800317 	ldw	r18,12(sp)
    9cd0:	dc400217 	ldw	r17,8(sp)
    9cd4:	dc000117 	ldw	r16,4(sp)
    9cd8:	dec00b04 	addi	sp,sp,44
    9cdc:	f800283a 	ret
    9ce0:	38804030 	cmpltui	r2,r7,256
    9ce4:	1000ac1e 	bne	r2,zero,9f98 <__udivdi3+0x5a0>
    9ce8:	3808d23a 	srli	r4,r7,8
    9cec:	00c00204 	movi	r3,8
    9cf0:	003fe206 	br	9c7c <__udivdi3+0x284>
    9cf4:	88804030 	cmpltui	r2,r17,256
    9cf8:	1000b21e 	bne	r2,zero,9fc4 <__udivdi3+0x5cc>
    9cfc:	8806d23a 	srli	r3,r17,8
    9d00:	04c00204 	movi	r19,8
    9d04:	003f9b06 	br	9b74 <__udivdi3+0x17c>
    9d08:	30804030 	cmpltui	r2,r6,256
    9d0c:	1000a51e 	bne	r2,zero,9fa4 <__udivdi3+0x5ac>
    9d10:	3006d23a 	srli	r3,r6,8
    9d14:	04c00204 	movi	r19,8
    9d18:	003f5006 	br	9a5c <__udivdi3+0x64>
    9d1c:	88e2983a 	sll	r17,r17,r3
    9d20:	84eed83a 	srl	r23,r16,r19
    9d24:	a0e4983a 	sll	r18,r20,r3
    9d28:	882ad43a 	srli	r21,r17,16
    9d2c:	b809883a 	mov	r4,r23
    9d30:	80e0983a 	sll	r16,r16,r3
    9d34:	a80b883a 	mov	r5,r21
    9d38:	00005f80 	call	5f8 <__umodsi3>
    9d3c:	b809883a 	mov	r4,r23
    9d40:	a4e6d83a 	srl	r19,r20,r19
    9d44:	a80b883a 	mov	r5,r21
    9d48:	1029883a 	mov	r20,r2
    9d4c:	8dbfffcc 	andi	r22,r17,65535
    9d50:	00005940 	call	594 <__udivsi3>
    9d54:	b009883a 	mov	r4,r22
    9d58:	100b883a 	mov	r5,r2
    9d5c:	9c26b03a 	or	r19,r19,r16
    9d60:	102f883a 	mov	r23,r2
    9d64:	000a5dc0 	call	a5dc <__mulsi3>
    9d68:	a028943a 	slli	r20,r20,16
    9d6c:	9808d43a 	srli	r4,r19,16
    9d70:	a108b03a 	or	r4,r20,r4
    9d74:	2080062e 	bgeu	r4,r2,9d90 <__udivdi3+0x398>
    9d78:	2449883a 	add	r4,r4,r17
    9d7c:	b8ffffc4 	addi	r3,r23,-1
    9d80:	24409836 	bltu	r4,r17,9fe4 <__udivdi3+0x5ec>
    9d84:	2080972e 	bgeu	r4,r2,9fe4 <__udivdi3+0x5ec>
    9d88:	bdffff84 	addi	r23,r23,-2
    9d8c:	2449883a 	add	r4,r4,r17
    9d90:	20a1c83a 	sub	r16,r4,r2
    9d94:	8009883a 	mov	r4,r16
    9d98:	a80b883a 	mov	r5,r21
    9d9c:	00005f80 	call	5f8 <__umodsi3>
    9da0:	1029883a 	mov	r20,r2
    9da4:	8009883a 	mov	r4,r16
    9da8:	a80b883a 	mov	r5,r21
    9dac:	a020943a 	slli	r16,r20,16
    9db0:	00005940 	call	594 <__udivsi3>
    9db4:	100b883a 	mov	r5,r2
    9db8:	b009883a 	mov	r4,r22
    9dbc:	9cffffcc 	andi	r19,r19,65535
    9dc0:	1039883a 	mov	fp,r2
    9dc4:	84e0b03a 	or	r16,r16,r19
    9dc8:	000a5dc0 	call	a5dc <__mulsi3>
    9dcc:	8080062e 	bgeu	r16,r2,9de8 <__udivdi3+0x3f0>
    9dd0:	8461883a 	add	r16,r16,r17
    9dd4:	e0ffffc4 	addi	r3,fp,-1
    9dd8:	84407e36 	bltu	r16,r17,9fd4 <__udivdi3+0x5dc>
    9ddc:	80807d2e 	bgeu	r16,r2,9fd4 <__udivdi3+0x5dc>
    9de0:	e73fff84 	addi	fp,fp,-2
    9de4:	8461883a 	add	r16,r16,r17
    9de8:	b806943a 	slli	r3,r23,16
    9dec:	80a1c83a 	sub	r16,r16,r2
    9df0:	1f06b03a 	or	r3,r3,fp
    9df4:	003f6a06 	br	9ba0 <__udivdi3+0x1a8>
    9df8:	3106d83a 	srl	r3,r6,r4
    9dfc:	3dce983a 	sll	r7,r7,r23
    9e00:	8122d83a 	srl	r17,r16,r4
    9e04:	a104d83a 	srl	r2,r20,r4
    9e08:	19ecb03a 	or	r22,r3,r7
    9e0c:	b024d43a 	srli	r18,r22,16
    9e10:	85e0983a 	sll	r16,r16,r23
    9e14:	8809883a 	mov	r4,r17
    9e18:	900b883a 	mov	r5,r18
    9e1c:	1420b03a 	or	r16,r2,r16
    9e20:	b0bfffcc 	andi	r2,r22,65535
    9e24:	35ea983a 	sll	r21,r6,r23
    9e28:	d8800015 	stw	r2,0(sp)
    9e2c:	00005f80 	call	5f8 <__umodsi3>
    9e30:	900b883a 	mov	r5,r18
    9e34:	8809883a 	mov	r4,r17
    9e38:	1027883a 	mov	r19,r2
    9e3c:	00005940 	call	594 <__udivsi3>
    9e40:	b13fffcc 	andi	r4,r22,65535
    9e44:	100b883a 	mov	r5,r2
    9e48:	1039883a 	mov	fp,r2
    9e4c:	000a5dc0 	call	a5dc <__mulsi3>
    9e50:	9826943a 	slli	r19,r19,16
    9e54:	8008d43a 	srli	r4,r16,16
    9e58:	9908b03a 	or	r4,r19,r4
    9e5c:	2080062e 	bgeu	r4,r2,9e78 <__udivdi3+0x480>
    9e60:	2589883a 	add	r4,r4,r22
    9e64:	e0ffffc4 	addi	r3,fp,-1
    9e68:	25805c36 	bltu	r4,r22,9fdc <__udivdi3+0x5e4>
    9e6c:	20805b2e 	bgeu	r4,r2,9fdc <__udivdi3+0x5e4>
    9e70:	e73fff84 	addi	fp,fp,-2
    9e74:	2589883a 	add	r4,r4,r22
    9e78:	20a3c83a 	sub	r17,r4,r2
    9e7c:	8809883a 	mov	r4,r17
    9e80:	900b883a 	mov	r5,r18
    9e84:	00005f80 	call	5f8 <__umodsi3>
    9e88:	1027883a 	mov	r19,r2
    9e8c:	8809883a 	mov	r4,r17
    9e90:	900b883a 	mov	r5,r18
    9e94:	9826943a 	slli	r19,r19,16
    9e98:	00005940 	call	594 <__udivsi3>
    9e9c:	100b883a 	mov	r5,r2
    9ea0:	b13fffcc 	andi	r4,r22,65535
    9ea4:	843fffcc 	andi	r16,r16,65535
    9ea8:	1023883a 	mov	r17,r2
    9eac:	9c20b03a 	or	r16,r19,r16
    9eb0:	000a5dc0 	call	a5dc <__mulsi3>
    9eb4:	8080062e 	bgeu	r16,r2,9ed0 <__udivdi3+0x4d8>
    9eb8:	85a1883a 	add	r16,r16,r22
    9ebc:	88ffffc4 	addi	r3,r17,-1
    9ec0:	85804236 	bltu	r16,r22,9fcc <__udivdi3+0x5d4>
    9ec4:	8080412e 	bgeu	r16,r2,9fcc <__udivdi3+0x5d4>
    9ec8:	8c7fff84 	addi	r17,r17,-2
    9ecc:	85a1883a 	add	r16,r16,r22
    9ed0:	e038943a 	slli	fp,fp,16
    9ed4:	adbfffcc 	andi	r22,r21,65535
    9ed8:	b00b883a 	mov	r5,r22
    9edc:	e478b03a 	or	fp,fp,r17
    9ee0:	e024d43a 	srli	r18,fp,16
    9ee4:	e4ffffcc 	andi	r19,fp,65535
    9ee8:	9809883a 	mov	r4,r19
    9eec:	a82ad43a 	srli	r21,r21,16
    9ef0:	80a1c83a 	sub	r16,r16,r2
    9ef4:	000a5dc0 	call	a5dc <__mulsi3>
    9ef8:	9009883a 	mov	r4,r18
    9efc:	b00b883a 	mov	r5,r22
    9f00:	d8800015 	stw	r2,0(sp)
    9f04:	000a5dc0 	call	a5dc <__mulsi3>
    9f08:	9009883a 	mov	r4,r18
    9f0c:	a80b883a 	mov	r5,r21
    9f10:	1023883a 	mov	r17,r2
    9f14:	000a5dc0 	call	a5dc <__mulsi3>
    9f18:	a80b883a 	mov	r5,r21
    9f1c:	9809883a 	mov	r4,r19
    9f20:	1025883a 	mov	r18,r2
    9f24:	000a5dc0 	call	a5dc <__mulsi3>
    9f28:	d9800017 	ldw	r6,0(sp)
    9f2c:	1445883a 	add	r2,r2,r17
    9f30:	3006d43a 	srli	r3,r6,16
    9f34:	1885883a 	add	r2,r3,r2
    9f38:	1440022e 	bgeu	r2,r17,9f44 <__udivdi3+0x54c>
    9f3c:	00c00074 	movhi	r3,1
    9f40:	90e5883a 	add	r18,r18,r3
    9f44:	1006d43a 	srli	r3,r2,16
    9f48:	1c87883a 	add	r3,r3,r18
    9f4c:	80c00936 	bltu	r16,r3,9f74 <__udivdi3+0x57c>
    9f50:	80c00326 	beq	r16,r3,9f60 <__udivdi3+0x568>
    9f54:	e005883a 	mov	r2,fp
    9f58:	0007883a 	mov	r3,zero
    9f5c:	003f5406 	br	9cb0 <__udivdi3+0x2b8>
    9f60:	1004943a 	slli	r2,r2,16
    9f64:	a5c6983a 	sll	r3,r20,r23
    9f68:	31bfffcc 	andi	r6,r6,65535
    9f6c:	1185883a 	add	r2,r2,r6
    9f70:	18bff82e 	bgeu	r3,r2,9f54 <__udivdi3+0x55c>
    9f74:	e0bfffc4 	addi	r2,fp,-1
    9f78:	0007883a 	mov	r3,zero
    9f7c:	003f4c06 	br	9cb0 <__udivdi3+0x2b8>
    9f80:	3808d43a 	srli	r4,r7,16
    9f84:	00c00404 	movi	r3,16
    9f88:	003f3c06 	br	9c7c <__udivdi3+0x284>
    9f8c:	0007883a 	mov	r3,zero
    9f90:	00800044 	movi	r2,1
    9f94:	003f4606 	br	9cb0 <__udivdi3+0x2b8>
    9f98:	3809883a 	mov	r4,r7
    9f9c:	0007883a 	mov	r3,zero
    9fa0:	003f3606 	br	9c7c <__udivdi3+0x284>
    9fa4:	3007883a 	mov	r3,r6
    9fa8:	003eac06 	br	9a5c <__udivdi3+0x64>
    9fac:	8806d43a 	srli	r3,r17,16
    9fb0:	04c00404 	movi	r19,16
    9fb4:	003eef06 	br	9b74 <__udivdi3+0x17c>
    9fb8:	3006d43a 	srli	r3,r6,16
    9fbc:	04c00404 	movi	r19,16
    9fc0:	003ea606 	br	9a5c <__udivdi3+0x64>
    9fc4:	8807883a 	mov	r3,r17
    9fc8:	003eea06 	br	9b74 <__udivdi3+0x17c>
    9fcc:	1823883a 	mov	r17,r3
    9fd0:	003fbf06 	br	9ed0 <__udivdi3+0x4d8>
    9fd4:	1839883a 	mov	fp,r3
    9fd8:	003f8306 	br	9de8 <__udivdi3+0x3f0>
    9fdc:	1839883a 	mov	fp,r3
    9fe0:	003fa506 	br	9e78 <__udivdi3+0x480>
    9fe4:	182f883a 	mov	r23,r3
    9fe8:	003f6906 	br	9d90 <__udivdi3+0x398>
    9fec:	9cffff84 	addi	r19,r19,-2
    9ff0:	003f1806 	br	9c54 <__udivdi3+0x25c>
    9ff4:	9cffff84 	addi	r19,r19,-2
    9ff8:	003ecf06 	br	9b38 <__udivdi3+0x140>
    9ffc:	843fff84 	addi	r16,r16,-2
    a000:	1c47883a 	add	r3,r3,r17
    a004:	003eb706 	br	9ae4 <__udivdi3+0xec>
    a008:	843fff84 	addi	r16,r16,-2
    a00c:	2449883a 	add	r4,r4,r17
    a010:	003ef906 	br	9bf8 <__udivdi3+0x200>

0000a014 <__umoddi3>:
    a014:	defff304 	addi	sp,sp,-52
    a018:	dc400415 	stw	r17,16(sp)
    a01c:	dc000315 	stw	r16,12(sp)
    a020:	dfc00c15 	stw	ra,48(sp)
    a024:	df000b15 	stw	fp,44(sp)
    a028:	ddc00a15 	stw	r23,40(sp)
    a02c:	dd800915 	stw	r22,36(sp)
    a030:	dd400815 	stw	r21,32(sp)
    a034:	dd000715 	stw	r20,28(sp)
    a038:	dcc00615 	stw	r19,24(sp)
    a03c:	dc800515 	stw	r18,20(sp)
    a040:	2823883a 	mov	r17,r5
    a044:	2021883a 	mov	r16,r4
    a048:	3800781e 	bne	r7,zero,a22c <__umoddi3+0x218>
    a04c:	3825883a 	mov	r18,r7
    a050:	3027883a 	mov	r19,r6
    a054:	2029883a 	mov	r20,r4
    a058:	29803d2e 	bgeu	r5,r6,a150 <__umoddi3+0x13c>
    a05c:	00bfffd4 	movui	r2,65535
    a060:	2839883a 	mov	fp,r5
    a064:	11809f36 	bltu	r2,r6,a2e4 <__umoddi3+0x2d0>
    a068:	30804030 	cmpltui	r2,r6,256
    a06c:	1001451e 	bne	r2,zero,a584 <__umoddi3+0x570>
    a070:	3006d23a 	srli	r3,r6,8
    a074:	04800204 	movi	r18,8
    a078:	00800074 	movhi	r2,1
    a07c:	1885883a 	add	r2,r3,r2
    a080:	113e9343 	ldbu	r4,-1459(r2)
    a084:	00800804 	movi	r2,32
    a088:	2489883a 	add	r4,r4,r18
    a08c:	1125c83a 	sub	r18,r2,r4
    a090:	90000526 	beq	r18,zero,a0a8 <__umoddi3+0x94>
    a094:	8ca2983a 	sll	r17,r17,r18
    a098:	8108d83a 	srl	r4,r16,r4
    a09c:	34a6983a 	sll	r19,r6,r18
    a0a0:	84a8983a 	sll	r20,r16,r18
    a0a4:	2478b03a 	or	fp,r4,r17
    a0a8:	982cd43a 	srli	r22,r19,16
    a0ac:	e009883a 	mov	r4,fp
    a0b0:	9dffffcc 	andi	r23,r19,65535
    a0b4:	b00b883a 	mov	r5,r22
    a0b8:	00005f80 	call	5f8 <__umodsi3>
    a0bc:	b00b883a 	mov	r5,r22
    a0c0:	e009883a 	mov	r4,fp
    a0c4:	102b883a 	mov	r21,r2
    a0c8:	00005940 	call	594 <__udivsi3>
    a0cc:	100b883a 	mov	r5,r2
    a0d0:	b809883a 	mov	r4,r23
    a0d4:	000a5dc0 	call	a5dc <__mulsi3>
    a0d8:	a82a943a 	slli	r21,r21,16
    a0dc:	a006d43a 	srli	r3,r20,16
    a0e0:	a8c6b03a 	or	r3,r21,r3
    a0e4:	1880032e 	bgeu	r3,r2,a0f4 <__umoddi3+0xe0>
    a0e8:	1cc7883a 	add	r3,r3,r19
    a0ec:	1cc00136 	bltu	r3,r19,a0f4 <__umoddi3+0xe0>
    a0f0:	18813836 	bltu	r3,r2,a5d4 <__umoddi3+0x5c0>
    a0f4:	18a1c83a 	sub	r16,r3,r2
    a0f8:	b00b883a 	mov	r5,r22
    a0fc:	8009883a 	mov	r4,r16
    a100:	00005f80 	call	5f8 <__umodsi3>
    a104:	b00b883a 	mov	r5,r22
    a108:	8009883a 	mov	r4,r16
    a10c:	1023883a 	mov	r17,r2
    a110:	00005940 	call	594 <__udivsi3>
    a114:	100b883a 	mov	r5,r2
    a118:	b809883a 	mov	r4,r23
    a11c:	8822943a 	slli	r17,r17,16
    a120:	000a5dc0 	call	a5dc <__mulsi3>
    a124:	a0ffffcc 	andi	r3,r20,65535
    a128:	88c6b03a 	or	r3,r17,r3
    a12c:	1880042e 	bgeu	r3,r2,a140 <__umoddi3+0x12c>
    a130:	1cc7883a 	add	r3,r3,r19
    a134:	1cc00236 	bltu	r3,r19,a140 <__umoddi3+0x12c>
    a138:	1880012e 	bgeu	r3,r2,a140 <__umoddi3+0x12c>
    a13c:	1cc7883a 	add	r3,r3,r19
    a140:	1885c83a 	sub	r2,r3,r2
    a144:	1484d83a 	srl	r2,r2,r18
    a148:	0007883a 	mov	r3,zero
    a14c:	00003a06 	br	a238 <__umoddi3+0x224>
    a150:	3000041e 	bne	r6,zero,a164 <__umoddi3+0x150>
    a154:	000b883a 	mov	r5,zero
    a158:	01000044 	movi	r4,1
    a15c:	00005940 	call	594 <__udivsi3>
    a160:	1027883a 	mov	r19,r2
    a164:	00bfffd4 	movui	r2,65535
    a168:	14c0592e 	bgeu	r2,r19,a2d0 <__umoddi3+0x2bc>
    a16c:	00804034 	movhi	r2,256
    a170:	98810c36 	bltu	r19,r2,a5a4 <__umoddi3+0x590>
    a174:	9806d63a 	srli	r3,r19,24
    a178:	04800604 	movi	r18,24
    a17c:	00800074 	movhi	r2,1
    a180:	1885883a 	add	r2,r3,r2
    a184:	10fe9343 	ldbu	r3,-1459(r2)
    a188:	00800804 	movi	r2,32
    a18c:	1c87883a 	add	r3,r3,r18
    a190:	10e5c83a 	sub	r18,r2,r3
    a194:	9000c51e 	bne	r18,zero,a4ac <__umoddi3+0x498>
    a198:	982ad43a 	srli	r21,r19,16
    a19c:	8ce3c83a 	sub	r17,r17,r19
    a1a0:	9dbfffcc 	andi	r22,r19,65535
    a1a4:	a80b883a 	mov	r5,r21
    a1a8:	8809883a 	mov	r4,r17
    a1ac:	00005f80 	call	5f8 <__umodsi3>
    a1b0:	a80b883a 	mov	r5,r21
    a1b4:	8809883a 	mov	r4,r17
    a1b8:	102f883a 	mov	r23,r2
    a1bc:	00005940 	call	594 <__udivsi3>
    a1c0:	b00b883a 	mov	r5,r22
    a1c4:	1009883a 	mov	r4,r2
    a1c8:	000a5dc0 	call	a5dc <__mulsi3>
    a1cc:	b82e943a 	slli	r23,r23,16
    a1d0:	a006d43a 	srli	r3,r20,16
    a1d4:	b8c6b03a 	or	r3,r23,r3
    a1d8:	1880042e 	bgeu	r3,r2,a1ec <__umoddi3+0x1d8>
    a1dc:	1cc7883a 	add	r3,r3,r19
    a1e0:	1cc00236 	bltu	r3,r19,a1ec <__umoddi3+0x1d8>
    a1e4:	1880012e 	bgeu	r3,r2,a1ec <__umoddi3+0x1d8>
    a1e8:	1cc7883a 	add	r3,r3,r19
    a1ec:	18a1c83a 	sub	r16,r3,r2
    a1f0:	a80b883a 	mov	r5,r21
    a1f4:	8009883a 	mov	r4,r16
    a1f8:	00005f80 	call	5f8 <__umodsi3>
    a1fc:	1023883a 	mov	r17,r2
    a200:	a80b883a 	mov	r5,r21
    a204:	8009883a 	mov	r4,r16
    a208:	00005940 	call	594 <__udivsi3>
    a20c:	8822943a 	slli	r17,r17,16
    a210:	b00b883a 	mov	r5,r22
    a214:	1009883a 	mov	r4,r2
    a218:	000a5dc0 	call	a5dc <__mulsi3>
    a21c:	a53fffcc 	andi	r20,r20,65535
    a220:	8d06b03a 	or	r3,r17,r20
    a224:	18bfc62e 	bgeu	r3,r2,a140 <__umoddi3+0x12c>
    a228:	003fc106 	br	a130 <__umoddi3+0x11c>
    a22c:	2005883a 	mov	r2,r4
    a230:	29c00d2e 	bgeu	r5,r7,a268 <__umoddi3+0x254>
    a234:	2807883a 	mov	r3,r5
    a238:	dfc00c17 	ldw	ra,48(sp)
    a23c:	df000b17 	ldw	fp,44(sp)
    a240:	ddc00a17 	ldw	r23,40(sp)
    a244:	dd800917 	ldw	r22,36(sp)
    a248:	dd400817 	ldw	r21,32(sp)
    a24c:	dd000717 	ldw	r20,28(sp)
    a250:	dcc00617 	ldw	r19,24(sp)
    a254:	dc800517 	ldw	r18,20(sp)
    a258:	dc400417 	ldw	r17,16(sp)
    a25c:	dc000317 	ldw	r16,12(sp)
    a260:	dec00d04 	addi	sp,sp,52
    a264:	f800283a 	ret
    a268:	013fffd4 	movui	r4,65535
    a26c:	2807883a 	mov	r3,r5
    a270:	21c0122e 	bgeu	r4,r7,a2bc <__umoddi3+0x2a8>
    a274:	01004034 	movhi	r4,256
    a278:	3900c736 	bltu	r7,r4,a598 <__umoddi3+0x584>
    a27c:	3810d63a 	srli	r8,r7,24
    a280:	01400604 	movi	r5,24
    a284:	01000074 	movhi	r4,1
    a288:	4109883a 	add	r4,r8,r4
    a28c:	253e9343 	ldbu	r20,-1459(r4)
    a290:	05400804 	movi	r21,32
    a294:	a169883a 	add	r20,r20,r5
    a298:	ad2bc83a 	sub	r21,r21,r20
    a29c:	a800161e 	bne	r21,zero,a2f8 <__umoddi3+0x2e4>
    a2a0:	3c400136 	bltu	r7,r17,a2a8 <__umoddi3+0x294>
    a2a4:	81bfe436 	bltu	r16,r6,a238 <__umoddi3+0x224>
    a2a8:	8185c83a 	sub	r2,r16,r6
    a2ac:	89cfc83a 	sub	r7,r17,r7
    a2b0:	8087803a 	cmpltu	r3,r16,r2
    a2b4:	38c7c83a 	sub	r3,r7,r3
    a2b8:	003fdf06 	br	a238 <__umoddi3+0x224>
    a2bc:	39004030 	cmpltui	r4,r7,256
    a2c0:	2000b21e 	bne	r4,zero,a58c <__umoddi3+0x578>
    a2c4:	3810d23a 	srli	r8,r7,8
    a2c8:	01400204 	movi	r5,8
    a2cc:	003fed06 	br	a284 <__umoddi3+0x270>
    a2d0:	98804030 	cmpltui	r2,r19,256
    a2d4:	1000b61e 	bne	r2,zero,a5b0 <__umoddi3+0x59c>
    a2d8:	9806d23a 	srli	r3,r19,8
    a2dc:	04800204 	movi	r18,8
    a2e0:	003fa606 	br	a17c <__umoddi3+0x168>
    a2e4:	00804034 	movhi	r2,256
    a2e8:	3080b336 	bltu	r6,r2,a5b8 <__umoddi3+0x5a4>
    a2ec:	3006d63a 	srli	r3,r6,24
    a2f0:	04800604 	movi	r18,24
    a2f4:	003f6006 	br	a078 <__umoddi3+0x64>
    a2f8:	3508d83a 	srl	r4,r6,r20
    a2fc:	3d4e983a 	sll	r7,r7,r21
    a300:	8d38d83a 	srl	fp,r17,r20
    a304:	8504d83a 	srl	r2,r16,r20
    a308:	21e4b03a 	or	r18,r4,r7
    a30c:	902cd43a 	srli	r22,r18,16
    a310:	8d62983a 	sll	r17,r17,r21
    a314:	e009883a 	mov	r4,fp
    a318:	b00b883a 	mov	r5,r22
    a31c:	3566983a 	sll	r19,r6,r21
    a320:	1462b03a 	or	r17,r2,r17
    a324:	00005f80 	call	5f8 <__umodsi3>
    a328:	e009883a 	mov	r4,fp
    a32c:	b00b883a 	mov	r5,r22
    a330:	95ffffcc 	andi	r23,r18,65535
    a334:	d8800015 	stw	r2,0(sp)
    a338:	00005940 	call	594 <__udivsi3>
    a33c:	100b883a 	mov	r5,r2
    a340:	b809883a 	mov	r4,r23
    a344:	1039883a 	mov	fp,r2
    a348:	000a5dc0 	call	a5dc <__mulsi3>
    a34c:	d9800017 	ldw	r6,0(sp)
    a350:	8806d43a 	srli	r3,r17,16
    a354:	8560983a 	sll	r16,r16,r21
    a358:	300c943a 	slli	r6,r6,16
    a35c:	30c6b03a 	or	r3,r6,r3
    a360:	1880062e 	bgeu	r3,r2,a37c <__umoddi3+0x368>
    a364:	1c87883a 	add	r3,r3,r18
    a368:	e13fffc4 	addi	r4,fp,-1
    a36c:	1c809736 	bltu	r3,r18,a5cc <__umoddi3+0x5b8>
    a370:	1880962e 	bgeu	r3,r2,a5cc <__umoddi3+0x5b8>
    a374:	e73fff84 	addi	fp,fp,-2
    a378:	1c87883a 	add	r3,r3,r18
    a37c:	1887c83a 	sub	r3,r3,r2
    a380:	b00b883a 	mov	r5,r22
    a384:	1809883a 	mov	r4,r3
    a388:	d8c00115 	stw	r3,4(sp)
    a38c:	00005f80 	call	5f8 <__umodsi3>
    a390:	d8c00117 	ldw	r3,4(sp)
    a394:	b00b883a 	mov	r5,r22
    a398:	d8800015 	stw	r2,0(sp)
    a39c:	1809883a 	mov	r4,r3
    a3a0:	00005940 	call	594 <__udivsi3>
    a3a4:	100b883a 	mov	r5,r2
    a3a8:	b809883a 	mov	r4,r23
    a3ac:	102d883a 	mov	r22,r2
    a3b0:	000a5dc0 	call	a5dc <__mulsi3>
    a3b4:	d9800017 	ldw	r6,0(sp)
    a3b8:	8c7fffcc 	andi	r17,r17,65535
    a3bc:	300c943a 	slli	r6,r6,16
    a3c0:	3462b03a 	or	r17,r6,r17
    a3c4:	8880062e 	bgeu	r17,r2,a3e0 <__umoddi3+0x3cc>
    a3c8:	8ca3883a 	add	r17,r17,r18
    a3cc:	b0ffffc4 	addi	r3,r22,-1
    a3d0:	8c807c36 	bltu	r17,r18,a5c4 <__umoddi3+0x5b0>
    a3d4:	88807b2e 	bgeu	r17,r2,a5c4 <__umoddi3+0x5b0>
    a3d8:	b5bfff84 	addi	r22,r22,-2
    a3dc:	8ca3883a 	add	r17,r17,r18
    a3e0:	e038943a 	slli	fp,fp,16
    a3e4:	980cd43a 	srli	r6,r19,16
    a3e8:	98ffffcc 	andi	r3,r19,65535
    a3ec:	e5b8b03a 	or	fp,fp,r22
    a3f0:	e02cd43a 	srli	r22,fp,16
    a3f4:	e73fffcc 	andi	fp,fp,65535
    a3f8:	180b883a 	mov	r5,r3
    a3fc:	e009883a 	mov	r4,fp
    a400:	d9800215 	stw	r6,8(sp)
    a404:	d8c00015 	stw	r3,0(sp)
    a408:	88a3c83a 	sub	r17,r17,r2
    a40c:	000a5dc0 	call	a5dc <__mulsi3>
    a410:	d8c00017 	ldw	r3,0(sp)
    a414:	b009883a 	mov	r4,r22
    a418:	102f883a 	mov	r23,r2
    a41c:	180b883a 	mov	r5,r3
    a420:	000a5dc0 	call	a5dc <__mulsi3>
    a424:	d9800217 	ldw	r6,8(sp)
    a428:	b009883a 	mov	r4,r22
    a42c:	d8800115 	stw	r2,4(sp)
    a430:	300b883a 	mov	r5,r6
    a434:	d9800015 	stw	r6,0(sp)
    a438:	000a5dc0 	call	a5dc <__mulsi3>
    a43c:	d9800017 	ldw	r6,0(sp)
    a440:	e009883a 	mov	r4,fp
    a444:	102d883a 	mov	r22,r2
    a448:	300b883a 	mov	r5,r6
    a44c:	000a5dc0 	call	a5dc <__mulsi3>
    a450:	d9c00117 	ldw	r7,4(sp)
    a454:	b808d43a 	srli	r4,r23,16
    a458:	11c5883a 	add	r2,r2,r7
    a45c:	2085883a 	add	r2,r4,r2
    a460:	11c0022e 	bgeu	r2,r7,a46c <__umoddi3+0x458>
    a464:	00c00074 	movhi	r3,1
    a468:	b0ed883a 	add	r22,r22,r3
    a46c:	1006d43a 	srli	r3,r2,16
    a470:	1004943a 	slli	r2,r2,16
    a474:	bdffffcc 	andi	r23,r23,65535
    a478:	1d87883a 	add	r3,r3,r22
    a47c:	15c5883a 	add	r2,r2,r23
    a480:	88c03a36 	bltu	r17,r3,a56c <__umoddi3+0x558>
    a484:	88c03826 	beq	r17,r3,a568 <__umoddi3+0x554>
    a488:	8085c83a 	sub	r2,r16,r2
    a48c:	80a1803a 	cmpltu	r16,r16,r2
    a490:	88c7c83a 	sub	r3,r17,r3
    a494:	1c07c83a 	sub	r3,r3,r16
    a498:	1d20983a 	sll	r16,r3,r20
    a49c:	1544d83a 	srl	r2,r2,r21
    a4a0:	1d46d83a 	srl	r3,r3,r21
    a4a4:	8084b03a 	or	r2,r16,r2
    a4a8:	003f6306 	br	a238 <__umoddi3+0x224>
    a4ac:	9ca6983a 	sll	r19,r19,r18
    a4b0:	88f8d83a 	srl	fp,r17,r3
    a4b4:	80c6d83a 	srl	r3,r16,r3
    a4b8:	982ad43a 	srli	r21,r19,16
    a4bc:	8ca2983a 	sll	r17,r17,r18
    a4c0:	e009883a 	mov	r4,fp
    a4c4:	a80b883a 	mov	r5,r21
    a4c8:	1c6eb03a 	or	r23,r3,r17
    a4cc:	00005f80 	call	5f8 <__umodsi3>
    a4d0:	a80b883a 	mov	r5,r21
    a4d4:	e009883a 	mov	r4,fp
    a4d8:	1029883a 	mov	r20,r2
    a4dc:	9dbfffcc 	andi	r22,r19,65535
    a4e0:	00005940 	call	594 <__udivsi3>
    a4e4:	b009883a 	mov	r4,r22
    a4e8:	100b883a 	mov	r5,r2
    a4ec:	000a5dc0 	call	a5dc <__mulsi3>
    a4f0:	a006943a 	slli	r3,r20,16
    a4f4:	b808d43a 	srli	r4,r23,16
    a4f8:	84a8983a 	sll	r20,r16,r18
    a4fc:	1906b03a 	or	r3,r3,r4
    a500:	1880042e 	bgeu	r3,r2,a514 <__umoddi3+0x500>
    a504:	1cc7883a 	add	r3,r3,r19
    a508:	1cc00236 	bltu	r3,r19,a514 <__umoddi3+0x500>
    a50c:	1880012e 	bgeu	r3,r2,a514 <__umoddi3+0x500>
    a510:	1cc7883a 	add	r3,r3,r19
    a514:	18a3c83a 	sub	r17,r3,r2
    a518:	8809883a 	mov	r4,r17
    a51c:	a80b883a 	mov	r5,r21
    a520:	00005f80 	call	5f8 <__umodsi3>
    a524:	1021883a 	mov	r16,r2
    a528:	8809883a 	mov	r4,r17
    a52c:	a80b883a 	mov	r5,r21
    a530:	8022943a 	slli	r17,r16,16
    a534:	00005940 	call	594 <__udivsi3>
    a538:	100b883a 	mov	r5,r2
    a53c:	b009883a 	mov	r4,r22
    a540:	bdffffcc 	andi	r23,r23,65535
    a544:	000a5dc0 	call	a5dc <__mulsi3>
    a548:	8de2b03a 	or	r17,r17,r23
    a54c:	8880042e 	bgeu	r17,r2,a560 <__umoddi3+0x54c>
    a550:	8ce3883a 	add	r17,r17,r19
    a554:	8cc00236 	bltu	r17,r19,a560 <__umoddi3+0x54c>
    a558:	8880012e 	bgeu	r17,r2,a560 <__umoddi3+0x54c>
    a55c:	8ce3883a 	add	r17,r17,r19
    a560:	88a3c83a 	sub	r17,r17,r2
    a564:	003f0f06 	br	a1a4 <__umoddi3+0x190>
    a568:	80bfc72e 	bgeu	r16,r2,a488 <__umoddi3+0x474>
    a56c:	14e7c83a 	sub	r19,r2,r19
    a570:	14c5803a 	cmpltu	r2,r2,r19
    a574:	1489883a 	add	r4,r2,r18
    a578:	1907c83a 	sub	r3,r3,r4
    a57c:	9805883a 	mov	r2,r19
    a580:	003fc106 	br	a488 <__umoddi3+0x474>
    a584:	3007883a 	mov	r3,r6
    a588:	003ebb06 	br	a078 <__umoddi3+0x64>
    a58c:	3811883a 	mov	r8,r7
    a590:	000b883a 	mov	r5,zero
    a594:	003f3b06 	br	a284 <__umoddi3+0x270>
    a598:	3810d43a 	srli	r8,r7,16
    a59c:	01400404 	movi	r5,16
    a5a0:	003f3806 	br	a284 <__umoddi3+0x270>
    a5a4:	9806d43a 	srli	r3,r19,16
    a5a8:	04800404 	movi	r18,16
    a5ac:	003ef306 	br	a17c <__umoddi3+0x168>
    a5b0:	9807883a 	mov	r3,r19
    a5b4:	003ef106 	br	a17c <__umoddi3+0x168>
    a5b8:	3006d43a 	srli	r3,r6,16
    a5bc:	04800404 	movi	r18,16
    a5c0:	003ead06 	br	a078 <__umoddi3+0x64>
    a5c4:	182d883a 	mov	r22,r3
    a5c8:	003f8506 	br	a3e0 <__umoddi3+0x3cc>
    a5cc:	2039883a 	mov	fp,r4
    a5d0:	003f6a06 	br	a37c <__umoddi3+0x368>
    a5d4:	1cc7883a 	add	r3,r3,r19
    a5d8:	003ec606 	br	a0f4 <__umoddi3+0xe0>

0000a5dc <__mulsi3>:
    a5dc:	0005883a 	mov	r2,zero
    a5e0:	20000726 	beq	r4,zero,a600 <__mulsi3+0x24>
    a5e4:	20c0004c 	andi	r3,r4,1
    a5e8:	2008d07a 	srli	r4,r4,1
    a5ec:	18000126 	beq	r3,zero,a5f4 <__mulsi3+0x18>
    a5f0:	1145883a 	add	r2,r2,r5
    a5f4:	294b883a 	add	r5,r5,r5
    a5f8:	203ffa1e 	bne	r4,zero,a5e4 <__mulsi3+0x8>
    a5fc:	f800283a 	ret
    a600:	f800283a 	ret

0000a604 <__adddf3>:
    a604:	02000434 	movhi	r8,16
    a608:	defffb04 	addi	sp,sp,-20
    a60c:	423fffc4 	addi	r8,r8,-1
    a610:	2a12703a 	and	r9,r5,r8
    a614:	3a06703a 	and	r3,r7,r8
    a618:	3804d53a 	srli	r2,r7,20
    a61c:	dc000015 	stw	r16,0(sp)
    a620:	2820d53a 	srli	r16,r5,20
    a624:	2016d77a 	srli	r11,r4,29
    a628:	3014d77a 	srli	r10,r6,29
    a62c:	280ad7fa 	srli	r5,r5,31
    a630:	481290fa 	slli	r9,r9,3
    a634:	180690fa 	slli	r3,r3,3
    a638:	380ed7fa 	srli	r7,r7,31
    a63c:	dc400115 	stw	r17,4(sp)
    a640:	8401ffcc 	andi	r16,r16,2047
    a644:	1081ffcc 	andi	r2,r2,2047
    a648:	dfc00415 	stw	ra,16(sp)
    a64c:	dcc00315 	stw	r19,12(sp)
    a650:	dc800215 	stw	r18,8(sp)
    a654:	5a52b03a 	or	r9,r11,r9
    a658:	50c6b03a 	or	r3,r10,r3
    a65c:	2823883a 	mov	r17,r5
    a660:	201890fa 	slli	r12,r4,3
    a664:	301690fa 	slli	r11,r6,3
    a668:	8095c83a 	sub	r10,r16,r2
    a66c:	29c06a26 	beq	r5,r7,a818 <__adddf3+0x214>
    a670:	0280590e 	bge	zero,r10,a7d8 <__adddf3+0x1d4>
    a674:	10007c26 	beq	r2,zero,a868 <__adddf3+0x264>
    a678:	8081ffd8 	cmpnei	r2,r16,2047
    a67c:	10010726 	beq	r2,zero,aa9c <__adddf3+0x498>
    a680:	18c02034 	orhi	r3,r3,128
    a684:	50800e48 	cmpgei	r2,r10,57
    a688:	1000ed1e 	bne	r2,zero,aa40 <__adddf3+0x43c>
    a68c:	50800808 	cmpgei	r2,r10,32
    a690:	1001541e 	bne	r2,zero,abe4 <__adddf3+0x5e0>
    a694:	01000804 	movi	r4,32
    a698:	2289c83a 	sub	r4,r4,r10
    a69c:	1926983a 	sll	r19,r3,r4
    a6a0:	5a84d83a 	srl	r2,r11,r10
    a6a4:	5908983a 	sll	r4,r11,r4
    a6a8:	1a86d83a 	srl	r3,r3,r10
    a6ac:	98a6b03a 	or	r19,r19,r2
    a6b0:	2016c03a 	cmpne	r11,r4,zero
    a6b4:	9ae6b03a 	or	r19,r19,r11
    a6b8:	48d3c83a 	sub	r9,r9,r3
    a6bc:	64e7c83a 	sub	r19,r12,r19
    a6c0:	64c9803a 	cmpltu	r4,r12,r19
    a6c4:	4909c83a 	sub	r4,r9,r4
    a6c8:	2080202c 	andhi	r2,r4,128
    a6cc:	10008726 	beq	r2,zero,a8ec <__adddf3+0x2e8>
    a6d0:	02402034 	movhi	r9,128
    a6d4:	4a7fffc4 	addi	r9,r9,-1
    a6d8:	2264703a 	and	r18,r4,r9
    a6dc:	9000cf26 	beq	r18,zero,aa1c <__adddf3+0x418>
    a6e0:	9009883a 	mov	r4,r18
    a6e4:	000ceec0 	call	ceec <__clzsi2>
    a6e8:	10fffe04 	addi	r3,r2,-8
    a6ec:	01000804 	movi	r4,32
    a6f0:	20c9c83a 	sub	r4,r4,r3
    a6f4:	990ad83a 	srl	r5,r19,r4
    a6f8:	90c8983a 	sll	r4,r18,r3
    a6fc:	98e6983a 	sll	r19,r19,r3
    a700:	2908b03a 	or	r4,r5,r4
    a704:	1c00be16 	blt	r3,r16,aa00 <__adddf3+0x3fc>
    a708:	1c21c83a 	sub	r16,r3,r16
    a70c:	81400044 	addi	r5,r16,1
    a710:	28800808 	cmpgei	r2,r5,32
    a714:	10011b1e 	bne	r2,zero,ab84 <__adddf3+0x580>
    a718:	00800804 	movi	r2,32
    a71c:	1145c83a 	sub	r2,r2,r5
    a720:	9946d83a 	srl	r3,r19,r5
    a724:	98a6983a 	sll	r19,r19,r2
    a728:	2084983a 	sll	r2,r4,r2
    a72c:	2148d83a 	srl	r4,r4,r5
    a730:	9826c03a 	cmpne	r19,r19,zero
    a734:	10c4b03a 	or	r2,r2,r3
    a738:	14e6b03a 	or	r19,r2,r19
    a73c:	0021883a 	mov	r16,zero
    a740:	988001cc 	andi	r2,r19,7
    a744:	10000726 	beq	r2,zero,a764 <__adddf3+0x160>
    a748:	988003cc 	andi	r2,r19,15
    a74c:	10800120 	cmpeqi	r2,r2,4
    a750:	1000041e 	bne	r2,zero,a764 <__adddf3+0x160>
    a754:	99400104 	addi	r5,r19,4
    a758:	2ce7803a 	cmpltu	r19,r5,r19
    a75c:	24c9883a 	add	r4,r4,r19
    a760:	2827883a 	mov	r19,r5
    a764:	2080202c 	andhi	r2,r4,128
    a768:	10006226 	beq	r2,zero,a8f4 <__adddf3+0x2f0>
    a76c:	84000044 	addi	r16,r16,1
    a770:	8081ffe0 	cmpeqi	r2,r16,2047
    a774:	8401ffcc 	andi	r16,r16,2047
    a778:	1000731e 	bne	r2,zero,a948 <__adddf3+0x344>
    a77c:	017fe034 	movhi	r5,65408
    a780:	297fffc4 	addi	r5,r5,-1
    a784:	214a703a 	and	r5,r4,r5
    a788:	2804977a 	slli	r2,r5,29
    a78c:	280a927a 	slli	r5,r5,9
    a790:	9826d0fa 	srli	r19,r19,3
    a794:	2808d33a 	srli	r4,r5,12
    a798:	14c4b03a 	or	r2,r2,r19
    a79c:	8020953a 	slli	r16,r16,20
    a7a0:	00c00434 	movhi	r3,16
    a7a4:	8c403fcc 	andi	r17,r17,255
    a7a8:	882297fa 	slli	r17,r17,31
    a7ac:	18ffffc4 	addi	r3,r3,-1
    a7b0:	20c6703a 	and	r3,r4,r3
    a7b4:	1c06b03a 	or	r3,r3,r16
    a7b8:	1c46b03a 	or	r3,r3,r17
    a7bc:	dfc00417 	ldw	ra,16(sp)
    a7c0:	dcc00317 	ldw	r19,12(sp)
    a7c4:	dc800217 	ldw	r18,8(sp)
    a7c8:	dc400117 	ldw	r17,4(sp)
    a7cc:	dc000017 	ldw	r16,0(sp)
    a7d0:	dec00504 	addi	sp,sp,20
    a7d4:	f800283a 	ret
    a7d8:	50002b1e 	bne	r10,zero,a888 <__adddf3+0x284>
    a7dc:	80800044 	addi	r2,r16,1
    a7e0:	1081ff8c 	andi	r2,r2,2046
    a7e4:	1000a11e 	bne	r2,zero,aa6c <__adddf3+0x468>
    a7e8:	4b0ab03a 	or	r5,r9,r12
    a7ec:	1ac4b03a 	or	r2,r3,r11
    a7f0:	80015c1e 	bne	r16,zero,ad64 <__adddf3+0x760>
    a7f4:	28012826 	beq	r5,zero,ac98 <__adddf3+0x694>
    a7f8:	1001671e 	bne	r2,zero,ad98 <__adddf3+0x794>
    a7fc:	4826977a 	slli	r19,r9,29
    a800:	00c80034 	movhi	r3,8192
    a804:	18ffffc4 	addi	r3,r3,-1
    a808:	20c4703a 	and	r2,r4,r3
    a80c:	9884b03a 	or	r2,r19,r2
    a810:	4812d0fa 	srli	r9,r9,3
    a814:	00003d06 	br	a90c <__adddf3+0x308>
    a818:	02804f0e 	bge	zero,r10,a958 <__adddf3+0x354>
    a81c:	10002426 	beq	r2,zero,a8b0 <__adddf3+0x2ac>
    a820:	8081ffd8 	cmpnei	r2,r16,2047
    a824:	10009d26 	beq	r2,zero,aa9c <__adddf3+0x498>
    a828:	18c02034 	orhi	r3,r3,128
    a82c:	50800e48 	cmpgei	r2,r10,57
    a830:	10003b1e 	bne	r2,zero,a920 <__adddf3+0x31c>
    a834:	50800808 	cmpgei	r2,r10,32
    a838:	10010326 	beq	r2,zero,ac48 <__adddf3+0x644>
    a83c:	54fff804 	addi	r19,r10,-32
    a840:	51000820 	cmpeqi	r4,r10,32
    a844:	1cc4d83a 	srl	r2,r3,r19
    a848:	2000041e 	bne	r4,zero,a85c <__adddf3+0x258>
    a84c:	01001004 	movi	r4,64
    a850:	2295c83a 	sub	r10,r4,r10
    a854:	1a86983a 	sll	r3,r3,r10
    a858:	58d6b03a 	or	r11,r11,r3
    a85c:	5826c03a 	cmpne	r19,r11,zero
    a860:	98a6b03a 	or	r19,r19,r2
    a864:	00003006 	br	a928 <__adddf3+0x324>
    a868:	1ac4b03a 	or	r2,r3,r11
    a86c:	10007726 	beq	r2,zero,aa4c <__adddf3+0x448>
    a870:	50bfffc4 	addi	r2,r10,-1
    a874:	10011926 	beq	r2,zero,acdc <__adddf3+0x6d8>
    a878:	5281ffd8 	cmpnei	r10,r10,2047
    a87c:	50012026 	beq	r10,zero,ad00 <__adddf3+0x6fc>
    a880:	1015883a 	mov	r10,r2
    a884:	003f7f06 	br	a684 <__adddf3+0x80>
    a888:	1409c83a 	sub	r4,r2,r16
    a88c:	8000a61e 	bne	r16,zero,ab28 <__adddf3+0x524>
    a890:	4b0ab03a 	or	r5,r9,r12
    a894:	2800f726 	beq	r5,zero,ac74 <__adddf3+0x670>
    a898:	217fffc4 	addi	r5,r4,-1
    a89c:	28017f26 	beq	r5,zero,ae9c <__adddf3+0x898>
    a8a0:	2101ffd8 	cmpnei	r4,r4,2047
    a8a4:	2001a326 	beq	r4,zero,af34 <__adddf3+0x930>
    a8a8:	2809883a 	mov	r4,r5
    a8ac:	0000a106 	br	ab34 <__adddf3+0x530>
    a8b0:	1ac4b03a 	or	r2,r3,r11
    a8b4:	10006526 	beq	r2,zero,aa4c <__adddf3+0x448>
    a8b8:	50bfffc4 	addi	r2,r10,-1
    a8bc:	10000426 	beq	r2,zero,a8d0 <__adddf3+0x2cc>
    a8c0:	5281ffd8 	cmpnei	r10,r10,2047
    a8c4:	50014326 	beq	r10,zero,add4 <__adddf3+0x7d0>
    a8c8:	1015883a 	mov	r10,r2
    a8cc:	003fd706 	br	a82c <__adddf3+0x228>
    a8d0:	62e7883a 	add	r19,r12,r11
    a8d4:	48d3883a 	add	r9,r9,r3
    a8d8:	9b09803a 	cmpltu	r4,r19,r12
    a8dc:	4909883a 	add	r4,r9,r4
    a8e0:	2080202c 	andhi	r2,r4,128
    a8e4:	1000b41e 	bne	r2,zero,abb8 <__adddf3+0x5b4>
    a8e8:	04000044 	movi	r16,1
    a8ec:	988001cc 	andi	r2,r19,7
    a8f0:	103f951e 	bne	r2,zero,a748 <__adddf3+0x144>
    a8f4:	9826d0fa 	srli	r19,r19,3
    a8f8:	2004977a 	slli	r2,r4,29
    a8fc:	2012d0fa 	srli	r9,r4,3
    a900:	9884b03a 	or	r2,r19,r2
    a904:	80c1ffe0 	cmpeqi	r3,r16,2047
    a908:	1800351e 	bne	r3,zero,a9e0 <__adddf3+0x3dc>
    a90c:	01000434 	movhi	r4,16
    a910:	213fffc4 	addi	r4,r4,-1
    a914:	4908703a 	and	r4,r9,r4
    a918:	8401ffcc 	andi	r16,r16,2047
    a91c:	003f9f06 	br	a79c <__adddf3+0x198>
    a920:	1ac8b03a 	or	r4,r3,r11
    a924:	2026c03a 	cmpne	r19,r4,zero
    a928:	9b27883a 	add	r19,r19,r12
    a92c:	9b09803a 	cmpltu	r4,r19,r12
    a930:	2249883a 	add	r4,r4,r9
    a934:	2080202c 	andhi	r2,r4,128
    a938:	103fec26 	beq	r2,zero,a8ec <__adddf3+0x2e8>
    a93c:	84000044 	addi	r16,r16,1
    a940:	8081ffe0 	cmpeqi	r2,r16,2047
    a944:	10009d26 	beq	r2,zero,abbc <__adddf3+0x5b8>
    a948:	0401ffc4 	movi	r16,2047
    a94c:	0009883a 	mov	r4,zero
    a950:	0005883a 	mov	r2,zero
    a954:	003f9106 	br	a79c <__adddf3+0x198>
    a958:	5000571e 	bne	r10,zero,aab8 <__adddf3+0x4b4>
    a95c:	80800044 	addi	r2,r16,1
    a960:	1141ff8c 	andi	r5,r2,2046
    a964:	2800ed1e 	bne	r5,zero,ad1c <__adddf3+0x718>
    a968:	4b04b03a 	or	r2,r9,r12
    a96c:	8000a826 	beq	r16,zero,ac10 <__adddf3+0x60c>
    a970:	10010226 	beq	r2,zero,ad7c <__adddf3+0x778>
    a974:	1ad6b03a 	or	r11,r3,r11
    a978:	480a977a 	slli	r5,r9,29
    a97c:	4812d0fa 	srli	r9,r9,3
    a980:	58015f26 	beq	r11,zero,af00 <__adddf3+0x8fc>
    a984:	02080034 	movhi	r8,8192
    a988:	423fffc4 	addi	r8,r8,-1
    a98c:	2204703a 	and	r2,r4,r8
    a990:	4900022c 	andhi	r4,r9,8
    a994:	114ab03a 	or	r5,r2,r5
    a998:	20000826 	beq	r4,zero,a9bc <__adddf3+0x3b8>
    a99c:	1808d0fa 	srli	r4,r3,3
    a9a0:	2080022c 	andhi	r2,r4,8
    a9a4:	1000051e 	bne	r2,zero,a9bc <__adddf3+0x3b8>
    a9a8:	1806977a 	slli	r3,r3,29
    a9ac:	3204703a 	and	r2,r6,r8
    a9b0:	3823883a 	mov	r17,r7
    a9b4:	10cab03a 	or	r5,r2,r3
    a9b8:	2013883a 	mov	r9,r4
    a9bc:	2804d77a 	srli	r2,r5,29
    a9c0:	480890fa 	slli	r4,r9,3
    a9c4:	00c80034 	movhi	r3,8192
    a9c8:	18ffffc4 	addi	r3,r3,-1
    a9cc:	1108b03a 	or	r4,r2,r4
    a9d0:	2004977a 	slli	r2,r4,29
    a9d4:	2012d0fa 	srli	r9,r4,3
    a9d8:	28ca703a 	and	r5,r5,r3
    a9dc:	1144b03a 	or	r2,r2,r5
    a9e0:	4886b03a 	or	r3,r9,r2
    a9e4:	18016b26 	beq	r3,zero,af94 <__adddf3+0x990>
    a9e8:	00c00434 	movhi	r3,16
    a9ec:	49000234 	orhi	r4,r9,8
    a9f0:	18ffffc4 	addi	r3,r3,-1
    a9f4:	20c8703a 	and	r4,r4,r3
    a9f8:	0401ffc4 	movi	r16,2047
    a9fc:	003f6706 	br	a79c <__adddf3+0x198>
    aa00:	017fe034 	movhi	r5,65408
    aa04:	297fffc4 	addi	r5,r5,-1
    aa08:	988001cc 	andi	r2,r19,7
    aa0c:	80e1c83a 	sub	r16,r16,r3
    aa10:	2148703a 	and	r4,r4,r5
    aa14:	103f4c1e 	bne	r2,zero,a748 <__adddf3+0x144>
    aa18:	003fb606 	br	a8f4 <__adddf3+0x2f0>
    aa1c:	9809883a 	mov	r4,r19
    aa20:	000ceec0 	call	ceec <__clzsi2>
    aa24:	10c00604 	addi	r3,r2,24
    aa28:	19000808 	cmpgei	r4,r3,32
    aa2c:	203f2f26 	beq	r4,zero,a6ec <__adddf3+0xe8>
    aa30:	113ffe04 	addi	r4,r2,-8
    aa34:	9908983a 	sll	r4,r19,r4
    aa38:	0027883a 	mov	r19,zero
    aa3c:	003f3106 	br	a704 <__adddf3+0x100>
    aa40:	1ac8b03a 	or	r4,r3,r11
    aa44:	2026c03a 	cmpne	r19,r4,zero
    aa48:	003f1c06 	br	a6bc <__adddf3+0xb8>
    aa4c:	4826977a 	slli	r19,r9,29
    aa50:	00c80034 	movhi	r3,8192
    aa54:	18ffffc4 	addi	r3,r3,-1
    aa58:	20c4703a 	and	r2,r4,r3
    aa5c:	14c4b03a 	or	r2,r2,r19
    aa60:	4812d0fa 	srli	r9,r9,3
    aa64:	5021883a 	mov	r16,r10
    aa68:	003fa606 	br	a904 <__adddf3+0x300>
    aa6c:	62e7c83a 	sub	r19,r12,r11
    aa70:	48e5c83a 	sub	r18,r9,r3
    aa74:	64c9803a 	cmpltu	r4,r12,r19
    aa78:	9125c83a 	sub	r18,r18,r4
    aa7c:	9080202c 	andhi	r2,r18,128
    aa80:	1000b21e 	bne	r2,zero,ad4c <__adddf3+0x748>
    aa84:	9c84b03a 	or	r2,r19,r18
    aa88:	103f141e 	bne	r2,zero,a6dc <__adddf3+0xd8>
    aa8c:	0013883a 	mov	r9,zero
    aa90:	0021883a 	mov	r16,zero
    aa94:	0023883a 	mov	r17,zero
    aa98:	003f9c06 	br	a90c <__adddf3+0x308>
    aa9c:	4826977a 	slli	r19,r9,29
    aaa0:	00c80034 	movhi	r3,8192
    aaa4:	18ffffc4 	addi	r3,r3,-1
    aaa8:	20c4703a 	and	r2,r4,r3
    aaac:	14c4b03a 	or	r2,r2,r19
    aab0:	4812d0fa 	srli	r9,r9,3
    aab4:	003fca06 	br	a9e0 <__adddf3+0x3dc>
    aab8:	1409c83a 	sub	r4,r2,r16
    aabc:	80005e1e 	bne	r16,zero,ac38 <__adddf3+0x634>
    aac0:	4b0ab03a 	or	r5,r9,r12
    aac4:	28011326 	beq	r5,zero,af14 <__adddf3+0x910>
    aac8:	217fffc4 	addi	r5,r4,-1
    aacc:	28012c26 	beq	r5,zero,af80 <__adddf3+0x97c>
    aad0:	2101ffd8 	cmpnei	r4,r4,2047
    aad4:	2000a926 	beq	r4,zero,ad7c <__adddf3+0x778>
    aad8:	2809883a 	mov	r4,r5
    aadc:	21400e48 	cmpgei	r5,r4,57
    aae0:	2800b91e 	bne	r5,zero,adc8 <__adddf3+0x7c4>
    aae4:	21400808 	cmpgei	r5,r4,32
    aae8:	28011a1e 	bne	r5,zero,af54 <__adddf3+0x950>
    aaec:	01400804 	movi	r5,32
    aaf0:	290bc83a 	sub	r5,r5,r4
    aaf4:	4966983a 	sll	r19,r9,r5
    aaf8:	610cd83a 	srl	r6,r12,r4
    aafc:	614a983a 	sll	r5,r12,r5
    ab00:	4912d83a 	srl	r9,r9,r4
    ab04:	99a6b03a 	or	r19,r19,r6
    ab08:	280ac03a 	cmpne	r5,r5,zero
    ab0c:	9966b03a 	or	r19,r19,r5
    ab10:	1a47883a 	add	r3,r3,r9
    ab14:	9ae7883a 	add	r19,r19,r11
    ab18:	9ac9803a 	cmpltu	r4,r19,r11
    ab1c:	20c9883a 	add	r4,r4,r3
    ab20:	1021883a 	mov	r16,r2
    ab24:	003f8306 	br	a934 <__adddf3+0x330>
    ab28:	1141ffd8 	cmpnei	r5,r2,2047
    ab2c:	28006326 	beq	r5,zero,acbc <__adddf3+0x6b8>
    ab30:	4a402034 	orhi	r9,r9,128
    ab34:	21400e48 	cmpgei	r5,r4,57
    ab38:	28006e1e 	bne	r5,zero,acf4 <__adddf3+0x6f0>
    ab3c:	21400808 	cmpgei	r5,r4,32
    ab40:	2800ab1e 	bne	r5,zero,adf0 <__adddf3+0x7ec>
    ab44:	01400804 	movi	r5,32
    ab48:	290bc83a 	sub	r5,r5,r4
    ab4c:	4966983a 	sll	r19,r9,r5
    ab50:	610cd83a 	srl	r6,r12,r4
    ab54:	614a983a 	sll	r5,r12,r5
    ab58:	4912d83a 	srl	r9,r9,r4
    ab5c:	99a6b03a 	or	r19,r19,r6
    ab60:	280ac03a 	cmpne	r5,r5,zero
    ab64:	9966b03a 	or	r19,r19,r5
    ab68:	1a47c83a 	sub	r3,r3,r9
    ab6c:	5ce7c83a 	sub	r19,r11,r19
    ab70:	5cc9803a 	cmpltu	r4,r11,r19
    ab74:	1909c83a 	sub	r4,r3,r4
    ab78:	3823883a 	mov	r17,r7
    ab7c:	1021883a 	mov	r16,r2
    ab80:	003ed106 	br	a6c8 <__adddf3+0xc4>
    ab84:	843ff844 	addi	r16,r16,-31
    ab88:	28800820 	cmpeqi	r2,r5,32
    ab8c:	2420d83a 	srl	r16,r4,r16
    ab90:	1000041e 	bne	r2,zero,aba4 <__adddf3+0x5a0>
    ab94:	00801004 	movi	r2,64
    ab98:	114bc83a 	sub	r5,r2,r5
    ab9c:	2148983a 	sll	r4,r4,r5
    aba0:	9926b03a 	or	r19,r19,r4
    aba4:	9826c03a 	cmpne	r19,r19,zero
    aba8:	9c26b03a 	or	r19,r19,r16
    abac:	0009883a 	mov	r4,zero
    abb0:	0021883a 	mov	r16,zero
    abb4:	003f4d06 	br	a8ec <__adddf3+0x2e8>
    abb8:	04000084 	movi	r16,2
    abbc:	00bfe034 	movhi	r2,65408
    abc0:	10bfffc4 	addi	r2,r2,-1
    abc4:	208a703a 	and	r5,r4,r2
    abc8:	9804d07a 	srli	r2,r19,1
    abcc:	280697fa 	slli	r3,r5,31
    abd0:	9cc0004c 	andi	r19,r19,1
    abd4:	14e6b03a 	or	r19,r2,r19
    abd8:	2808d07a 	srli	r4,r5,1
    abdc:	1ce6b03a 	or	r19,r3,r19
    abe0:	003ed706 	br	a740 <__adddf3+0x13c>
    abe4:	54fff804 	addi	r19,r10,-32
    abe8:	50800820 	cmpeqi	r2,r10,32
    abec:	1ce6d83a 	srl	r19,r3,r19
    abf0:	1000041e 	bne	r2,zero,ac04 <__adddf3+0x600>
    abf4:	00801004 	movi	r2,64
    abf8:	1295c83a 	sub	r10,r2,r10
    abfc:	1a86983a 	sll	r3,r3,r10
    ac00:	58d6b03a 	or	r11,r11,r3
    ac04:	5808c03a 	cmpne	r4,r11,zero
    ac08:	24e6b03a 	or	r19,r4,r19
    ac0c:	003eab06 	br	a6bc <__adddf3+0xb8>
    ac10:	1000a926 	beq	r2,zero,aeb8 <__adddf3+0x8b4>
    ac14:	1ac4b03a 	or	r2,r3,r11
    ac18:	1000ae1e 	bne	r2,zero,aed4 <__adddf3+0x8d0>
    ac1c:	4806977a 	slli	r3,r9,29
    ac20:	00880034 	movhi	r2,8192
    ac24:	10bfffc4 	addi	r2,r2,-1
    ac28:	2084703a 	and	r2,r4,r2
    ac2c:	10c4b03a 	or	r2,r2,r3
    ac30:	4812d0fa 	srli	r9,r9,3
    ac34:	003f3506 	br	a90c <__adddf3+0x308>
    ac38:	1141ffd8 	cmpnei	r5,r2,2047
    ac3c:	28004f26 	beq	r5,zero,ad7c <__adddf3+0x778>
    ac40:	4a402034 	orhi	r9,r9,128
    ac44:	003fa506 	br	aadc <__adddf3+0x4d8>
    ac48:	01000804 	movi	r4,32
    ac4c:	2289c83a 	sub	r4,r4,r10
    ac50:	1926983a 	sll	r19,r3,r4
    ac54:	5a84d83a 	srl	r2,r11,r10
    ac58:	5908983a 	sll	r4,r11,r4
    ac5c:	1a86d83a 	srl	r3,r3,r10
    ac60:	98a6b03a 	or	r19,r19,r2
    ac64:	2016c03a 	cmpne	r11,r4,zero
    ac68:	9ae6b03a 	or	r19,r19,r11
    ac6c:	48d3883a 	add	r9,r9,r3
    ac70:	003f2d06 	br	a928 <__adddf3+0x324>
    ac74:	01480034 	movhi	r5,8192
    ac78:	1826977a 	slli	r19,r3,29
    ac7c:	297fffc4 	addi	r5,r5,-1
    ac80:	3144703a 	and	r2,r6,r5
    ac84:	14c4b03a 	or	r2,r2,r19
    ac88:	1812d0fa 	srli	r9,r3,3
    ac8c:	3823883a 	mov	r17,r7
    ac90:	2021883a 	mov	r16,r4
    ac94:	003f1b06 	br	a904 <__adddf3+0x300>
    ac98:	10007d26 	beq	r2,zero,ae90 <__adddf3+0x88c>
    ac9c:	00880034 	movhi	r2,8192
    aca0:	1808977a 	slli	r4,r3,29
    aca4:	10bfffc4 	addi	r2,r2,-1
    aca8:	3084703a 	and	r2,r6,r2
    acac:	1104b03a 	or	r2,r2,r4
    acb0:	1812d0fa 	srli	r9,r3,3
    acb4:	3823883a 	mov	r17,r7
    acb8:	003f1406 	br	a90c <__adddf3+0x308>
    acbc:	180a977a 	slli	r5,r3,29
    acc0:	01080034 	movhi	r4,8192
    acc4:	213fffc4 	addi	r4,r4,-1
    acc8:	3104703a 	and	r2,r6,r4
    accc:	2884b03a 	or	r2,r5,r2
    acd0:	1812d0fa 	srli	r9,r3,3
    acd4:	3823883a 	mov	r17,r7
    acd8:	003f4106 	br	a9e0 <__adddf3+0x3dc>
    acdc:	62e7c83a 	sub	r19,r12,r11
    ace0:	48d3c83a 	sub	r9,r9,r3
    ace4:	64c9803a 	cmpltu	r4,r12,r19
    ace8:	4909c83a 	sub	r4,r9,r4
    acec:	04000044 	movi	r16,1
    acf0:	003e7506 	br	a6c8 <__adddf3+0xc4>
    acf4:	4b12b03a 	or	r9,r9,r12
    acf8:	4826c03a 	cmpne	r19,r9,zero
    acfc:	003f9b06 	br	ab6c <__adddf3+0x568>
    ad00:	4826977a 	slli	r19,r9,29
    ad04:	00c80034 	movhi	r3,8192
    ad08:	18ffffc4 	addi	r3,r3,-1
    ad0c:	20c4703a 	and	r2,r4,r3
    ad10:	9884b03a 	or	r2,r19,r2
    ad14:	4812d0fa 	srli	r9,r9,3
    ad18:	003f3106 	br	a9e0 <__adddf3+0x3dc>
    ad1c:	1101ffe0 	cmpeqi	r4,r2,2047
    ad20:	203f091e 	bne	r4,zero,a948 <__adddf3+0x344>
    ad24:	62d7883a 	add	r11,r12,r11
    ad28:	5b09803a 	cmpltu	r4,r11,r12
    ad2c:	48d3883a 	add	r9,r9,r3
    ad30:	490b883a 	add	r5,r9,r4
    ad34:	282697fa 	slli	r19,r5,31
    ad38:	5816d07a 	srli	r11,r11,1
    ad3c:	2808d07a 	srli	r4,r5,1
    ad40:	1021883a 	mov	r16,r2
    ad44:	9ae6b03a 	or	r19,r19,r11
    ad48:	003ee806 	br	a8ec <__adddf3+0x2e8>
    ad4c:	5b27c83a 	sub	r19,r11,r12
    ad50:	1a53c83a 	sub	r9,r3,r9
    ad54:	5cc9803a 	cmpltu	r4,r11,r19
    ad58:	4925c83a 	sub	r18,r9,r4
    ad5c:	3823883a 	mov	r17,r7
    ad60:	003e5e06 	br	a6dc <__adddf3+0xd8>
    ad64:	28002d1e 	bne	r5,zero,ae1c <__adddf3+0x818>
    ad68:	103fd41e 	bne	r2,zero,acbc <__adddf3+0x6b8>
    ad6c:	00bfffc4 	movi	r2,-1
    ad70:	0023883a 	mov	r17,zero
    ad74:	4013883a 	mov	r9,r8
    ad78:	003f1b06 	br	a9e8 <__adddf3+0x3e4>
    ad7c:	00880034 	movhi	r2,8192
    ad80:	1808977a 	slli	r4,r3,29
    ad84:	10bfffc4 	addi	r2,r2,-1
    ad88:	3084703a 	and	r2,r6,r2
    ad8c:	1104b03a 	or	r2,r2,r4
    ad90:	1812d0fa 	srli	r9,r3,3
    ad94:	003f1206 	br	a9e0 <__adddf3+0x3dc>
    ad98:	62e7c83a 	sub	r19,r12,r11
    ad9c:	48cbc83a 	sub	r5,r9,r3
    ada0:	64c9803a 	cmpltu	r4,r12,r19
    ada4:	2909c83a 	sub	r4,r5,r4
    ada8:	2080202c 	andhi	r2,r4,128
    adac:	10003626 	beq	r2,zero,ae88 <__adddf3+0x884>
    adb0:	5b27c83a 	sub	r19,r11,r12
    adb4:	1a53c83a 	sub	r9,r3,r9
    adb8:	5cc9803a 	cmpltu	r4,r11,r19
    adbc:	4909c83a 	sub	r4,r9,r4
    adc0:	3823883a 	mov	r17,r7
    adc4:	003e5e06 	br	a740 <__adddf3+0x13c>
    adc8:	4b12b03a 	or	r9,r9,r12
    adcc:	4826c03a 	cmpne	r19,r9,zero
    add0:	003f5006 	br	ab14 <__adddf3+0x510>
    add4:	4806977a 	slli	r3,r9,29
    add8:	00880034 	movhi	r2,8192
    addc:	10bfffc4 	addi	r2,r2,-1
    ade0:	2084703a 	and	r2,r4,r2
    ade4:	10c4b03a 	or	r2,r2,r3
    ade8:	4812d0fa 	srli	r9,r9,3
    adec:	003efc06 	br	a9e0 <__adddf3+0x3dc>
    adf0:	217ff804 	addi	r5,r4,-32
    adf4:	21800820 	cmpeqi	r6,r4,32
    adf8:	494ad83a 	srl	r5,r9,r5
    adfc:	3000041e 	bne	r6,zero,ae10 <__adddf3+0x80c>
    ae00:	01801004 	movi	r6,64
    ae04:	3109c83a 	sub	r4,r6,r4
    ae08:	4912983a 	sll	r9,r9,r4
    ae0c:	6258b03a 	or	r12,r12,r9
    ae10:	6026c03a 	cmpne	r19,r12,zero
    ae14:	9966b03a 	or	r19,r19,r5
    ae18:	003f5406 	br	ab6c <__adddf3+0x568>
    ae1c:	480a977a 	slli	r5,r9,29
    ae20:	4812d0fa 	srli	r9,r9,3
    ae24:	10003626 	beq	r2,zero,af00 <__adddf3+0x8fc>
    ae28:	02080034 	movhi	r8,8192
    ae2c:	423fffc4 	addi	r8,r8,-1
    ae30:	2204703a 	and	r2,r4,r8
    ae34:	4900022c 	andhi	r4,r9,8
    ae38:	114ab03a 	or	r5,r2,r5
    ae3c:	20000826 	beq	r4,zero,ae60 <__adddf3+0x85c>
    ae40:	1808d0fa 	srli	r4,r3,3
    ae44:	2080022c 	andhi	r2,r4,8
    ae48:	1000051e 	bne	r2,zero,ae60 <__adddf3+0x85c>
    ae4c:	1806977a 	slli	r3,r3,29
    ae50:	3204703a 	and	r2,r6,r8
    ae54:	3823883a 	mov	r17,r7
    ae58:	10cab03a 	or	r5,r2,r3
    ae5c:	2013883a 	mov	r9,r4
    ae60:	480890fa 	slli	r4,r9,3
    ae64:	2804d77a 	srli	r2,r5,29
    ae68:	00c80034 	movhi	r3,8192
    ae6c:	18ffffc4 	addi	r3,r3,-1
    ae70:	1108b03a 	or	r4,r2,r4
    ae74:	200c977a 	slli	r6,r4,29
    ae78:	28c4703a 	and	r2,r5,r3
    ae7c:	2012d0fa 	srli	r9,r4,3
    ae80:	3084b03a 	or	r2,r6,r2
    ae84:	003ed606 	br	a9e0 <__adddf3+0x3dc>
    ae88:	9904b03a 	or	r2,r19,r4
    ae8c:	103e971e 	bne	r2,zero,a8ec <__adddf3+0x2e8>
    ae90:	0013883a 	mov	r9,zero
    ae94:	0023883a 	mov	r17,zero
    ae98:	003e9c06 	br	a90c <__adddf3+0x308>
    ae9c:	5b27c83a 	sub	r19,r11,r12
    aea0:	1a53c83a 	sub	r9,r3,r9
    aea4:	5cc9803a 	cmpltu	r4,r11,r19
    aea8:	4909c83a 	sub	r4,r9,r4
    aeac:	3823883a 	mov	r17,r7
    aeb0:	04000044 	movi	r16,1
    aeb4:	003e0406 	br	a6c8 <__adddf3+0xc4>
    aeb8:	180a977a 	slli	r5,r3,29
    aebc:	01080034 	movhi	r4,8192
    aec0:	213fffc4 	addi	r4,r4,-1
    aec4:	3104703a 	and	r2,r6,r4
    aec8:	2884b03a 	or	r2,r5,r2
    aecc:	1812d0fa 	srli	r9,r3,3
    aed0:	003e8e06 	br	a90c <__adddf3+0x308>
    aed4:	62e7883a 	add	r19,r12,r11
    aed8:	48d3883a 	add	r9,r9,r3
    aedc:	9b09803a 	cmpltu	r4,r19,r12
    aee0:	4909883a 	add	r4,r9,r4
    aee4:	2080202c 	andhi	r2,r4,128
    aee8:	103e8026 	beq	r2,zero,a8ec <__adddf3+0x2e8>
    aeec:	00bfe034 	movhi	r2,65408
    aef0:	10bfffc4 	addi	r2,r2,-1
    aef4:	2088703a 	and	r4,r4,r2
    aef8:	04000044 	movi	r16,1
    aefc:	003e7b06 	br	a8ec <__adddf3+0x2e8>
    af00:	00880034 	movhi	r2,8192
    af04:	10bfffc4 	addi	r2,r2,-1
    af08:	2084703a 	and	r2,r4,r2
    af0c:	1144b03a 	or	r2,r2,r5
    af10:	003eb306 	br	a9e0 <__adddf3+0x3dc>
    af14:	180e977a 	slli	r7,r3,29
    af18:	01480034 	movhi	r5,8192
    af1c:	297fffc4 	addi	r5,r5,-1
    af20:	3144703a 	and	r2,r6,r5
    af24:	3884b03a 	or	r2,r7,r2
    af28:	1812d0fa 	srli	r9,r3,3
    af2c:	2021883a 	mov	r16,r4
    af30:	003e7406 	br	a904 <__adddf3+0x300>
    af34:	00880034 	movhi	r2,8192
    af38:	1808977a 	slli	r4,r3,29
    af3c:	10bfffc4 	addi	r2,r2,-1
    af40:	3084703a 	and	r2,r6,r2
    af44:	1104b03a 	or	r2,r2,r4
    af48:	1812d0fa 	srli	r9,r3,3
    af4c:	3823883a 	mov	r17,r7
    af50:	003ea306 	br	a9e0 <__adddf3+0x3dc>
    af54:	217ff804 	addi	r5,r4,-32
    af58:	21800820 	cmpeqi	r6,r4,32
    af5c:	494ad83a 	srl	r5,r9,r5
    af60:	3000041e 	bne	r6,zero,af74 <__adddf3+0x970>
    af64:	01801004 	movi	r6,64
    af68:	3109c83a 	sub	r4,r6,r4
    af6c:	4912983a 	sll	r9,r9,r4
    af70:	6258b03a 	or	r12,r12,r9
    af74:	6026c03a 	cmpne	r19,r12,zero
    af78:	9966b03a 	or	r19,r19,r5
    af7c:	003ee506 	br	ab14 <__adddf3+0x510>
    af80:	62e7883a 	add	r19,r12,r11
    af84:	48d3883a 	add	r9,r9,r3
    af88:	9ac9803a 	cmpltu	r4,r19,r11
    af8c:	4909883a 	add	r4,r9,r4
    af90:	003e5306 	br	a8e0 <__adddf3+0x2dc>
    af94:	0005883a 	mov	r2,zero
    af98:	0401ffc4 	movi	r16,2047
    af9c:	0009883a 	mov	r4,zero
    afa0:	003dfe06 	br	a79c <__adddf3+0x198>

0000afa4 <__divdf3>:
    afa4:	deffef04 	addi	sp,sp,-68
    afa8:	2804d53a 	srli	r2,r5,20
    afac:	dd000b15 	stw	r20,44(sp)
    afb0:	2828d7fa 	srli	r20,r5,31
    afb4:	dc400815 	stw	r17,32(sp)
    afb8:	04400434 	movhi	r17,16
    afbc:	dd800d15 	stw	r22,52(sp)
    afc0:	dcc00a15 	stw	r19,40(sp)
    afc4:	8c7fffc4 	addi	r17,r17,-1
    afc8:	dfc01015 	stw	ra,64(sp)
    afcc:	df000f15 	stw	fp,60(sp)
    afd0:	ddc00e15 	stw	r23,56(sp)
    afd4:	dd400c15 	stw	r21,48(sp)
    afd8:	dc800915 	stw	r18,36(sp)
    afdc:	dc000715 	stw	r16,28(sp)
    afe0:	1081ffcc 	andi	r2,r2,2047
    afe4:	2027883a 	mov	r19,r4
    afe8:	2c62703a 	and	r17,r5,r17
    afec:	a02d883a 	mov	r22,r20
    aff0:	10008726 	beq	r2,zero,b210 <__divdf3+0x26c>
    aff4:	10c1ffe0 	cmpeqi	r3,r2,2047
    aff8:	18009d1e 	bne	r3,zero,b270 <__divdf3+0x2cc>
    affc:	880a90fa 	slli	r5,r17,3
    b000:	2008d77a 	srli	r4,r4,29
    b004:	982690fa 	slli	r19,r19,3
    b008:	14bf0044 	addi	r18,r2,-1023
    b00c:	2148b03a 	or	r4,r4,r5
    b010:	24002034 	orhi	r16,r4,128
    b014:	0023883a 	mov	r17,zero
    b018:	002f883a 	mov	r23,zero
    b01c:	3806d53a 	srli	r3,r7,20
    b020:	01000434 	movhi	r4,16
    b024:	213fffc4 	addi	r4,r4,-1
    b028:	18c1ffcc 	andi	r3,r3,2047
    b02c:	392a703a 	and	r21,r7,r4
    b030:	3838d7fa 	srli	fp,r7,31
    b034:	18006326 	beq	r3,zero,b1c4 <__divdf3+0x220>
    b038:	1881ffe0 	cmpeqi	r2,r3,2047
    b03c:	1000201e 	bne	r2,zero,b0c0 <__divdf3+0x11c>
    b040:	a80890fa 	slli	r4,r21,3
    b044:	300ed77a 	srli	r7,r6,29
    b048:	300a90fa 	slli	r5,r6,3
    b04c:	18ff0044 	addi	r3,r3,-1023
    b050:	3908b03a 	or	r4,r7,r4
    b054:	90e5c83a 	sub	r18,r18,r3
    b058:	25402034 	orhi	r21,r4,128
    b05c:	0007883a 	mov	r3,zero
    b060:	88800428 	cmpgeui	r2,r17,16
    b064:	a70cf03a 	xor	r6,r20,fp
    b068:	1000ab1e 	bne	r2,zero,b318 <__divdf3+0x374>
    b06c:	882290ba 	slli	r17,r17,2
    b070:	00800074 	movhi	r2,1
    b074:	8885883a 	add	r2,r17,r2
    b078:	10ac2017 	ldw	r2,-20352(r2)
    b07c:	1000683a 	jmp	r2
    b080:	0000b318 	cmpnei	zero,zero,716
    b084:	0000b1b4 	movhi	zero,710
    b088:	0000b158 	cmpnei	zero,zero,709
    b08c:	0000b0dc 	xori	zero,zero,707
    b090:	0000b158 	cmpnei	zero,zero,709
    b094:	0000b2d4 	movui	zero,715
    b098:	0000b158 	cmpnei	zero,zero,709
    b09c:	0000b0dc 	xori	zero,zero,707
    b0a0:	0000b1b4 	movhi	zero,710
    b0a4:	0000b1b4 	movhi	zero,710
    b0a8:	0000b2d4 	movui	zero,715
    b0ac:	0000b0dc 	xori	zero,zero,707
    b0b0:	0000b0ec 	andhi	zero,zero,707
    b0b4:	0000b0ec 	andhi	zero,zero,707
    b0b8:	0000b0ec 	andhi	zero,zero,707
    b0bc:	0000b2ec 	andhi	zero,zero,715
    b0c0:	a98ab03a 	or	r5,r21,r6
    b0c4:	94be0044 	addi	r18,r18,-2047
    b0c8:	28007e1e 	bne	r5,zero,b2c4 <__divdf3+0x320>
    b0cc:	8c400094 	ori	r17,r17,2
    b0d0:	002b883a 	mov	r21,zero
    b0d4:	00c00084 	movi	r3,2
    b0d8:	003fe106 	br	b060 <__divdf3+0xbc>
    b0dc:	e02d883a 	mov	r22,fp
    b0e0:	a821883a 	mov	r16,r21
    b0e4:	2827883a 	mov	r19,r5
    b0e8:	182f883a 	mov	r23,r3
    b0ec:	b88000a0 	cmpeqi	r2,r23,2
    b0f0:	1001ab1e 	bne	r2,zero,b7a0 <__divdf3+0x7fc>
    b0f4:	b88000e0 	cmpeqi	r2,r23,3
    b0f8:	1001f91e 	bne	r2,zero,b8e0 <__divdf3+0x93c>
    b0fc:	b8800060 	cmpeqi	r2,r23,1
    b100:	1000141e 	bne	r2,zero,b154 <__divdf3+0x1b0>
    b104:	9500ffc4 	addi	r20,r18,1023
    b108:	b00d883a 	mov	r6,r22
    b10c:	0501870e 	bge	zero,r20,b72c <__divdf3+0x788>
    b110:	988001cc 	andi	r2,r19,7
    b114:	1001c11e 	bne	r2,zero,b81c <__divdf3+0x878>
    b118:	9826d0fa 	srli	r19,r19,3
    b11c:	8080402c 	andhi	r2,r16,256
    b120:	10000426 	beq	r2,zero,b134 <__divdf3+0x190>
    b124:	00bfc034 	movhi	r2,65280
    b128:	10bfffc4 	addi	r2,r2,-1
    b12c:	80a0703a 	and	r16,r16,r2
    b130:	95010004 	addi	r20,r18,1024
    b134:	a081ffc8 	cmpgei	r2,r20,2047
    b138:	10001e1e 	bne	r2,zero,b1b4 <__divdf3+0x210>
    b13c:	8006977a 	slli	r3,r16,29
    b140:	8008927a 	slli	r4,r16,9
    b144:	a081ffcc 	andi	r2,r20,2047
    b148:	1ce6b03a 	or	r19,r3,r19
    b14c:	2008d33a 	srli	r4,r4,12
    b150:	00000406 	br	b164 <__divdf3+0x1c0>
    b154:	b00d883a 	mov	r6,r22
    b158:	0005883a 	mov	r2,zero
    b15c:	0009883a 	mov	r4,zero
    b160:	0027883a 	mov	r19,zero
    b164:	1004953a 	slli	r2,r2,20
    b168:	00c00434 	movhi	r3,16
    b16c:	300c97fa 	slli	r6,r6,31
    b170:	18ffffc4 	addi	r3,r3,-1
    b174:	20c6703a 	and	r3,r4,r3
    b178:	1886b03a 	or	r3,r3,r2
    b17c:	1986b03a 	or	r3,r3,r6
    b180:	9805883a 	mov	r2,r19
    b184:	dfc01017 	ldw	ra,64(sp)
    b188:	df000f17 	ldw	fp,60(sp)
    b18c:	ddc00e17 	ldw	r23,56(sp)
    b190:	dd800d17 	ldw	r22,52(sp)
    b194:	dd400c17 	ldw	r21,48(sp)
    b198:	dd000b17 	ldw	r20,44(sp)
    b19c:	dcc00a17 	ldw	r19,40(sp)
    b1a0:	dc800917 	ldw	r18,36(sp)
    b1a4:	dc400817 	ldw	r17,32(sp)
    b1a8:	dc000717 	ldw	r16,28(sp)
    b1ac:	dec01104 	addi	sp,sp,68
    b1b0:	f800283a 	ret
    b1b4:	0081ffc4 	movi	r2,2047
    b1b8:	0009883a 	mov	r4,zero
    b1bc:	0027883a 	mov	r19,zero
    b1c0:	003fe806 	br	b164 <__divdf3+0x1c0>
    b1c4:	a98ab03a 	or	r5,r21,r6
    b1c8:	28003a26 	beq	r5,zero,b2b4 <__divdf3+0x310>
    b1cc:	a8014926 	beq	r21,zero,b6f4 <__divdf3+0x750>
    b1d0:	a809883a 	mov	r4,r21
    b1d4:	d9800015 	stw	r6,0(sp)
    b1d8:	000ceec0 	call	ceec <__clzsi2>
    b1dc:	d9800017 	ldw	r6,0(sp)
    b1e0:	11fffd44 	addi	r7,r2,-11
    b1e4:	00c00744 	movi	r3,29
    b1e8:	117ffe04 	addi	r5,r2,-8
    b1ec:	19c7c83a 	sub	r3,r3,r7
    b1f0:	a948983a 	sll	r4,r21,r5
    b1f4:	30c6d83a 	srl	r3,r6,r3
    b1f8:	314a983a 	sll	r5,r6,r5
    b1fc:	192ab03a 	or	r21,r3,r4
    b200:	1485883a 	add	r2,r2,r18
    b204:	1480fcc4 	addi	r18,r2,1011
    b208:	0007883a 	mov	r3,zero
    b20c:	003f9406 	br	b060 <__divdf3+0xbc>
    b210:	2460b03a 	or	r16,r4,r17
    b214:	202b883a 	mov	r21,r4
    b218:	80002126 	beq	r16,zero,b2a0 <__divdf3+0x2fc>
    b21c:	d9c00115 	stw	r7,4(sp)
    b220:	d9800015 	stw	r6,0(sp)
    b224:	88012826 	beq	r17,zero,b6c8 <__divdf3+0x724>
    b228:	8809883a 	mov	r4,r17
    b22c:	000ceec0 	call	ceec <__clzsi2>
    b230:	d9800017 	ldw	r6,0(sp)
    b234:	d9c00117 	ldw	r7,4(sp)
    b238:	1025883a 	mov	r18,r2
    b23c:	143ffd44 	addi	r16,r2,-11
    b240:	01000744 	movi	r4,29
    b244:	94fffe04 	addi	r19,r18,-8
    b248:	2409c83a 	sub	r4,r4,r16
    b24c:	8cca983a 	sll	r5,r17,r19
    b250:	a908d83a 	srl	r4,r21,r4
    b254:	ace6983a 	sll	r19,r21,r19
    b258:	2160b03a 	or	r16,r4,r5
    b25c:	00bf0344 	movi	r2,-1011
    b260:	14a5c83a 	sub	r18,r2,r18
    b264:	0023883a 	mov	r17,zero
    b268:	002f883a 	mov	r23,zero
    b26c:	003f6b06 	br	b01c <__divdf3+0x78>
    b270:	2460b03a 	or	r16,r4,r17
    b274:	8000051e 	bne	r16,zero,b28c <__divdf3+0x2e8>
    b278:	0027883a 	mov	r19,zero
    b27c:	04400204 	movi	r17,8
    b280:	0481ffc4 	movi	r18,2047
    b284:	05c00084 	movi	r23,2
    b288:	003f6406 	br	b01c <__divdf3+0x78>
    b28c:	8821883a 	mov	r16,r17
    b290:	0481ffc4 	movi	r18,2047
    b294:	04400304 	movi	r17,12
    b298:	05c000c4 	movi	r23,3
    b29c:	003f5f06 	br	b01c <__divdf3+0x78>
    b2a0:	0027883a 	mov	r19,zero
    b2a4:	04400104 	movi	r17,4
    b2a8:	0025883a 	mov	r18,zero
    b2ac:	05c00044 	movi	r23,1
    b2b0:	003f5a06 	br	b01c <__divdf3+0x78>
    b2b4:	8c400054 	ori	r17,r17,1
    b2b8:	002b883a 	mov	r21,zero
    b2bc:	00c00044 	movi	r3,1
    b2c0:	003f6706 	br	b060 <__divdf3+0xbc>
    b2c4:	8c4000d4 	ori	r17,r17,3
    b2c8:	300b883a 	mov	r5,r6
    b2cc:	00c000c4 	movi	r3,3
    b2d0:	003f6306 	br	b060 <__divdf3+0xbc>
    b2d4:	01000434 	movhi	r4,16
    b2d8:	000d883a 	mov	r6,zero
    b2dc:	213fffc4 	addi	r4,r4,-1
    b2e0:	04ffffc4 	movi	r19,-1
    b2e4:	0081ffc4 	movi	r2,2047
    b2e8:	003f9e06 	br	b164 <__divdf3+0x1c0>
    b2ec:	8080022c 	andhi	r2,r16,8
    b2f0:	1000d426 	beq	r2,zero,b644 <__divdf3+0x6a0>
    b2f4:	a880022c 	andhi	r2,r21,8
    b2f8:	1000d21e 	bne	r2,zero,b644 <__divdf3+0x6a0>
    b2fc:	00800434 	movhi	r2,16
    b300:	a9000234 	orhi	r4,r21,8
    b304:	10bfffc4 	addi	r2,r2,-1
    b308:	2088703a 	and	r4,r4,r2
    b30c:	e00d883a 	mov	r6,fp
    b310:	2827883a 	mov	r19,r5
    b314:	003ff306 	br	b2e4 <__divdf3+0x340>
    b318:	ac00e536 	bltu	r21,r16,b6b0 <__divdf3+0x70c>
    b31c:	ac00e326 	beq	r21,r16,b6ac <__divdf3+0x708>
    b320:	94bfffc4 	addi	r18,r18,-1
    b324:	0029883a 	mov	r20,zero
    b328:	280ed63a 	srli	r7,r5,24
    b32c:	a82a923a 	slli	r21,r21,8
    b330:	2804923a 	slli	r2,r5,8
    b334:	8009883a 	mov	r4,r16
    b338:	3d62b03a 	or	r17,r7,r21
    b33c:	882ad43a 	srli	r21,r17,16
    b340:	d9800115 	stw	r6,4(sp)
    b344:	d8800015 	stw	r2,0(sp)
    b348:	a80b883a 	mov	r5,r21
    b34c:	00005940 	call	594 <__udivsi3>
    b350:	8f3fffcc 	andi	fp,r17,65535
    b354:	100b883a 	mov	r5,r2
    b358:	e009883a 	mov	r4,fp
    b35c:	102f883a 	mov	r23,r2
    b360:	000a5dc0 	call	a5dc <__mulsi3>
    b364:	a80b883a 	mov	r5,r21
    b368:	8009883a 	mov	r4,r16
    b36c:	102d883a 	mov	r22,r2
    b370:	00005f80 	call	5f8 <__umodsi3>
    b374:	1006943a 	slli	r3,r2,16
    b378:	9804d43a 	srli	r2,r19,16
    b37c:	d9800117 	ldw	r6,4(sp)
    b380:	10c4b03a 	or	r2,r2,r3
    b384:	1580042e 	bgeu	r2,r22,b398 <__divdf3+0x3f4>
    b388:	1445883a 	add	r2,r2,r17
    b38c:	b8ffffc4 	addi	r3,r23,-1
    b390:	1441102e 	bgeu	r2,r17,b7d4 <__divdf3+0x830>
    b394:	182f883a 	mov	r23,r3
    b398:	15adc83a 	sub	r22,r2,r22
    b39c:	a80b883a 	mov	r5,r21
    b3a0:	b009883a 	mov	r4,r22
    b3a4:	d9800215 	stw	r6,8(sp)
    b3a8:	00005940 	call	594 <__udivsi3>
    b3ac:	100b883a 	mov	r5,r2
    b3b0:	e009883a 	mov	r4,fp
    b3b4:	1021883a 	mov	r16,r2
    b3b8:	000a5dc0 	call	a5dc <__mulsi3>
    b3bc:	a80b883a 	mov	r5,r21
    b3c0:	b009883a 	mov	r4,r22
    b3c4:	d8800115 	stw	r2,4(sp)
    b3c8:	00005f80 	call	5f8 <__umodsi3>
    b3cc:	1004943a 	slli	r2,r2,16
    b3d0:	da000117 	ldw	r8,4(sp)
    b3d4:	9cffffcc 	andi	r19,r19,65535
    b3d8:	9884b03a 	or	r2,r19,r2
    b3dc:	d9800217 	ldw	r6,8(sp)
    b3e0:	1200042e 	bgeu	r2,r8,b3f4 <__divdf3+0x450>
    b3e4:	1445883a 	add	r2,r2,r17
    b3e8:	80ffffc4 	addi	r3,r16,-1
    b3ec:	1440f52e 	bgeu	r2,r17,b7c4 <__divdf3+0x820>
    b3f0:	1821883a 	mov	r16,r3
    b3f4:	b808943a 	slli	r4,r23,16
    b3f8:	d8c00017 	ldw	r3,0(sp)
    b3fc:	1211c83a 	sub	r8,r2,r8
    b400:	2420b03a 	or	r16,r4,r16
    b404:	182cd43a 	srli	r22,r3,16
    b408:	1dffffcc 	andi	r23,r3,65535
    b40c:	8026d43a 	srli	r19,r16,16
    b410:	80ffffcc 	andi	r3,r16,65535
    b414:	180b883a 	mov	r5,r3
    b418:	b809883a 	mov	r4,r23
    b41c:	d9800615 	stw	r6,24(sp)
    b420:	da000415 	stw	r8,16(sp)
    b424:	d8c00515 	stw	r3,20(sp)
    b428:	000a5dc0 	call	a5dc <__mulsi3>
    b42c:	b80b883a 	mov	r5,r23
    b430:	9809883a 	mov	r4,r19
    b434:	d8800315 	stw	r2,12(sp)
    b438:	000a5dc0 	call	a5dc <__mulsi3>
    b43c:	b00b883a 	mov	r5,r22
    b440:	9809883a 	mov	r4,r19
    b444:	d8800215 	stw	r2,8(sp)
    b448:	000a5dc0 	call	a5dc <__mulsi3>
    b44c:	d8c00517 	ldw	r3,20(sp)
    b450:	b009883a 	mov	r4,r22
    b454:	d8800115 	stw	r2,4(sp)
    b458:	180b883a 	mov	r5,r3
    b45c:	000a5dc0 	call	a5dc <__mulsi3>
    b460:	da400317 	ldw	r9,12(sp)
    b464:	dac00217 	ldw	r11,8(sp)
    b468:	da800117 	ldw	r10,4(sp)
    b46c:	4806d43a 	srli	r3,r9,16
    b470:	12c5883a 	add	r2,r2,r11
    b474:	da000417 	ldw	r8,16(sp)
    b478:	1887883a 	add	r3,r3,r2
    b47c:	d9800617 	ldw	r6,24(sp)
    b480:	1ac0022e 	bgeu	r3,r11,b48c <__divdf3+0x4e8>
    b484:	00800074 	movhi	r2,1
    b488:	5095883a 	add	r10,r10,r2
    b48c:	1826d43a 	srli	r19,r3,16
    b490:	1806943a 	slli	r3,r3,16
    b494:	4a7fffcc 	andi	r9,r9,65535
    b498:	9aa7883a 	add	r19,r19,r10
    b49c:	1a47883a 	add	r3,r3,r9
    b4a0:	44c07736 	bltu	r8,r19,b680 <__divdf3+0x6dc>
    b4a4:	44c07526 	beq	r8,r19,b67c <__divdf3+0x6d8>
    b4a8:	a0c7c83a 	sub	r3,r20,r3
    b4ac:	44c5c83a 	sub	r2,r8,r19
    b4b0:	a0e7803a 	cmpltu	r19,r20,r3
    b4b4:	d8c00115 	stw	r3,4(sp)
    b4b8:	14e7c83a 	sub	r19,r2,r19
    b4bc:	9500ffc4 	addi	r20,r18,1023
    b4c0:	8cc0cd26 	beq	r17,r19,b7f8 <__divdf3+0x854>
    b4c4:	a80b883a 	mov	r5,r21
    b4c8:	9809883a 	mov	r4,r19
    b4cc:	d9800415 	stw	r6,16(sp)
    b4d0:	00005940 	call	594 <__udivsi3>
    b4d4:	100b883a 	mov	r5,r2
    b4d8:	e009883a 	mov	r4,fp
    b4dc:	d8800315 	stw	r2,12(sp)
    b4e0:	000a5dc0 	call	a5dc <__mulsi3>
    b4e4:	9809883a 	mov	r4,r19
    b4e8:	a80b883a 	mov	r5,r21
    b4ec:	d8800215 	stw	r2,8(sp)
    b4f0:	00005f80 	call	5f8 <__umodsi3>
    b4f4:	d8c00117 	ldw	r3,4(sp)
    b4f8:	1008943a 	slli	r4,r2,16
    b4fc:	da400217 	ldw	r9,8(sp)
    b500:	1804d43a 	srli	r2,r3,16
    b504:	da000317 	ldw	r8,12(sp)
    b508:	d9800417 	ldw	r6,16(sp)
    b50c:	1104b03a 	or	r2,r2,r4
    b510:	1240062e 	bgeu	r2,r9,b52c <__divdf3+0x588>
    b514:	1445883a 	add	r2,r2,r17
    b518:	413fffc4 	addi	r4,r8,-1
    b51c:	1440bd36 	bltu	r2,r17,b814 <__divdf3+0x870>
    b520:	1240bc2e 	bgeu	r2,r9,b814 <__divdf3+0x870>
    b524:	423fff84 	addi	r8,r8,-2
    b528:	1445883a 	add	r2,r2,r17
    b52c:	1267c83a 	sub	r19,r2,r9
    b530:	a80b883a 	mov	r5,r21
    b534:	9809883a 	mov	r4,r19
    b538:	d8c00415 	stw	r3,16(sp)
    b53c:	d9800315 	stw	r6,12(sp)
    b540:	da000215 	stw	r8,8(sp)
    b544:	00005940 	call	594 <__udivsi3>
    b548:	e009883a 	mov	r4,fp
    b54c:	100b883a 	mov	r5,r2
    b550:	d8800115 	stw	r2,4(sp)
    b554:	000a5dc0 	call	a5dc <__mulsi3>
    b558:	a80b883a 	mov	r5,r21
    b55c:	9809883a 	mov	r4,r19
    b560:	1039883a 	mov	fp,r2
    b564:	00005f80 	call	5f8 <__umodsi3>
    b568:	d8c00417 	ldw	r3,16(sp)
    b56c:	1004943a 	slli	r2,r2,16
    b570:	da400117 	ldw	r9,4(sp)
    b574:	18ffffcc 	andi	r3,r3,65535
    b578:	1886b03a 	or	r3,r3,r2
    b57c:	da000217 	ldw	r8,8(sp)
    b580:	d9800317 	ldw	r6,12(sp)
    b584:	1f00062e 	bgeu	r3,fp,b5a0 <__divdf3+0x5fc>
    b588:	1c47883a 	add	r3,r3,r17
    b58c:	48bfffc4 	addi	r2,r9,-1
    b590:	1c409e36 	bltu	r3,r17,b80c <__divdf3+0x868>
    b594:	1f009d2e 	bgeu	r3,fp,b80c <__divdf3+0x868>
    b598:	4a7fff84 	addi	r9,r9,-2
    b59c:	1c47883a 	add	r3,r3,r17
    b5a0:	4010943a 	slli	r8,r8,16
    b5a4:	1f2bc83a 	sub	r21,r3,fp
    b5a8:	b80b883a 	mov	r5,r23
    b5ac:	4266b03a 	or	r19,r8,r9
    b5b0:	98ffffcc 	andi	r3,r19,65535
    b5b4:	9838d43a 	srli	fp,r19,16
    b5b8:	1809883a 	mov	r4,r3
    b5bc:	d9800415 	stw	r6,16(sp)
    b5c0:	d8c00315 	stw	r3,12(sp)
    b5c4:	000a5dc0 	call	a5dc <__mulsi3>
    b5c8:	b80b883a 	mov	r5,r23
    b5cc:	e009883a 	mov	r4,fp
    b5d0:	d8800215 	stw	r2,8(sp)
    b5d4:	000a5dc0 	call	a5dc <__mulsi3>
    b5d8:	e00b883a 	mov	r5,fp
    b5dc:	b009883a 	mov	r4,r22
    b5e0:	d8800115 	stw	r2,4(sp)
    b5e4:	000a5dc0 	call	a5dc <__mulsi3>
    b5e8:	d8c00317 	ldw	r3,12(sp)
    b5ec:	b009883a 	mov	r4,r22
    b5f0:	102f883a 	mov	r23,r2
    b5f4:	180b883a 	mov	r5,r3
    b5f8:	000a5dc0 	call	a5dc <__mulsi3>
    b5fc:	da000217 	ldw	r8,8(sp)
    b600:	da400117 	ldw	r9,4(sp)
    b604:	d9800417 	ldw	r6,16(sp)
    b608:	4006d43a 	srli	r3,r8,16
    b60c:	1245883a 	add	r2,r2,r9
    b610:	1885883a 	add	r2,r3,r2
    b614:	1240022e 	bgeu	r2,r9,b620 <__divdf3+0x67c>
    b618:	00c00074 	movhi	r3,1
    b61c:	b8ef883a 	add	r23,r23,r3
    b620:	1008d43a 	srli	r4,r2,16
    b624:	1004943a 	slli	r2,r2,16
    b628:	423fffcc 	andi	r8,r8,65535
    b62c:	25c9883a 	add	r4,r4,r23
    b630:	1205883a 	add	r2,r2,r8
    b634:	a9000a36 	bltu	r21,r4,b660 <__divdf3+0x6bc>
    b638:	a9000826 	beq	r21,r4,b65c <__divdf3+0x6b8>
    b63c:	9cc00054 	ori	r19,r19,1
    b640:	003eb206 	br	b10c <__divdf3+0x168>
    b644:	00800434 	movhi	r2,16
    b648:	81000234 	orhi	r4,r16,8
    b64c:	10bfffc4 	addi	r2,r2,-1
    b650:	2088703a 	and	r4,r4,r2
    b654:	a00d883a 	mov	r6,r20
    b658:	003f2206 	br	b2e4 <__divdf3+0x340>
    b65c:	103eab26 	beq	r2,zero,b10c <__divdf3+0x168>
    b660:	8d47883a 	add	r3,r17,r21
    b664:	997fffc4 	addi	r5,r19,-1
    b668:	1c405e36 	bltu	r3,r17,b7e4 <__divdf3+0x840>
    b66c:	19007b36 	bltu	r3,r4,b85c <__divdf3+0x8b8>
    b670:	1900a126 	beq	r3,r4,b8f8 <__divdf3+0x954>
    b674:	2827883a 	mov	r19,r5
    b678:	003ff006 	br	b63c <__divdf3+0x698>
    b67c:	a0ff8a2e 	bgeu	r20,r3,b4a8 <__divdf3+0x504>
    b680:	d8800017 	ldw	r2,0(sp)
    b684:	a0a9883a 	add	r20,r20,r2
    b688:	a085803a 	cmpltu	r2,r20,r2
    b68c:	1445883a 	add	r2,r2,r17
    b690:	4091883a 	add	r8,r8,r2
    b694:	80bfffc4 	addi	r2,r16,-1
    b698:	8a00462e 	bgeu	r17,r8,b7b4 <__divdf3+0x810>
    b69c:	44c06836 	bltu	r8,r19,b840 <__divdf3+0x89c>
    b6a0:	9a006626 	beq	r19,r8,b83c <__divdf3+0x898>
    b6a4:	1021883a 	mov	r16,r2
    b6a8:	003f7f06 	br	b4a8 <__divdf3+0x504>
    b6ac:	997f1c36 	bltu	r19,r5,b320 <__divdf3+0x37c>
    b6b0:	800697fa 	slli	r3,r16,31
    b6b4:	9804d07a 	srli	r2,r19,1
    b6b8:	982897fa 	slli	r20,r19,31
    b6bc:	8020d07a 	srli	r16,r16,1
    b6c0:	18a6b03a 	or	r19,r3,r2
    b6c4:	003f1806 	br	b328 <__divdf3+0x384>
    b6c8:	000ceec0 	call	ceec <__clzsi2>
    b6cc:	14000544 	addi	r16,r2,21
    b6d0:	81000748 	cmpgei	r4,r16,29
    b6d4:	14800804 	addi	r18,r2,32
    b6d8:	d9800017 	ldw	r6,0(sp)
    b6dc:	d9c00117 	ldw	r7,4(sp)
    b6e0:	203ed726 	beq	r4,zero,b240 <__divdf3+0x29c>
    b6e4:	113ffe04 	addi	r4,r2,-8
    b6e8:	9920983a 	sll	r16,r19,r4
    b6ec:	0027883a 	mov	r19,zero
    b6f0:	003eda06 	br	b25c <__divdf3+0x2b8>
    b6f4:	3009883a 	mov	r4,r6
    b6f8:	d9800015 	stw	r6,0(sp)
    b6fc:	000ceec0 	call	ceec <__clzsi2>
    b700:	11c00544 	addi	r7,r2,21
    b704:	38c00748 	cmpgei	r3,r7,29
    b708:	1009883a 	mov	r4,r2
    b70c:	d9800017 	ldw	r6,0(sp)
    b710:	10800804 	addi	r2,r2,32
    b714:	183eb326 	beq	r3,zero,b1e4 <__divdf3+0x240>
    b718:	213ffe04 	addi	r4,r4,-8
    b71c:	312a983a 	sll	r21,r6,r4
    b720:	000b883a 	mov	r5,zero
    b724:	003eb606 	br	b200 <__divdf3+0x25c>
    b728:	04ffffc4 	movi	r19,-1
    b72c:	01000044 	movi	r4,1
    b730:	2509c83a 	sub	r4,r4,r20
    b734:	20800e48 	cmpgei	r2,r4,57
    b738:	103e871e 	bne	r2,zero,b158 <__divdf3+0x1b4>
    b73c:	20800808 	cmpgei	r2,r4,32
    b740:	10004e1e 	bne	r2,zero,b87c <__divdf3+0x8d8>
    b744:	90810784 	addi	r2,r18,1054
    b748:	8086983a 	sll	r3,r16,r2
    b74c:	990ad83a 	srl	r5,r19,r4
    b750:	9884983a 	sll	r2,r19,r2
    b754:	8108d83a 	srl	r4,r16,r4
    b758:	1966b03a 	or	r19,r3,r5
    b75c:	1004c03a 	cmpne	r2,r2,zero
    b760:	98a6b03a 	or	r19,r19,r2
    b764:	988001cc 	andi	r2,r19,7
    b768:	10000726 	beq	r2,zero,b788 <__divdf3+0x7e4>
    b76c:	988003cc 	andi	r2,r19,15
    b770:	10800120 	cmpeqi	r2,r2,4
    b774:	1000041e 	bne	r2,zero,b788 <__divdf3+0x7e4>
    b778:	98800104 	addi	r2,r19,4
    b77c:	14e7803a 	cmpltu	r19,r2,r19
    b780:	24c9883a 	add	r4,r4,r19
    b784:	1027883a 	mov	r19,r2
    b788:	2080202c 	andhi	r2,r4,128
    b78c:	10005026 	beq	r2,zero,b8d0 <__divdf3+0x92c>
    b790:	00800044 	movi	r2,1
    b794:	0009883a 	mov	r4,zero
    b798:	0027883a 	mov	r19,zero
    b79c:	003e7106 	br	b164 <__divdf3+0x1c0>
    b7a0:	b00d883a 	mov	r6,r22
    b7a4:	0081ffc4 	movi	r2,2047
    b7a8:	0009883a 	mov	r4,zero
    b7ac:	0027883a 	mov	r19,zero
    b7b0:	003e6c06 	br	b164 <__divdf3+0x1c0>
    b7b4:	8a3fbb1e 	bne	r17,r8,b6a4 <__divdf3+0x700>
    b7b8:	d9000017 	ldw	r4,0(sp)
    b7bc:	a13fb936 	bltu	r20,r4,b6a4 <__divdf3+0x700>
    b7c0:	003fb606 	br	b69c <__divdf3+0x6f8>
    b7c4:	123f0a2e 	bgeu	r2,r8,b3f0 <__divdf3+0x44c>
    b7c8:	843fff84 	addi	r16,r16,-2
    b7cc:	1445883a 	add	r2,r2,r17
    b7d0:	003f0806 	br	b3f4 <__divdf3+0x450>
    b7d4:	15beef2e 	bgeu	r2,r22,b394 <__divdf3+0x3f0>
    b7d8:	bdffff84 	addi	r23,r23,-2
    b7dc:	1445883a 	add	r2,r2,r17
    b7e0:	003eed06 	br	b398 <__divdf3+0x3f4>
    b7e4:	2827883a 	mov	r19,r5
    b7e8:	193f941e 	bne	r3,r4,b63c <__divdf3+0x698>
    b7ec:	d8c00017 	ldw	r3,0(sp)
    b7f0:	18bf921e 	bne	r3,r2,b63c <__divdf3+0x698>
    b7f4:	003e4506 	br	b10c <__divdf3+0x168>
    b7f8:	053fcb0e 	bge	zero,r20,b728 <__divdf3+0x784>
    b7fc:	0027883a 	mov	r19,zero
    b800:	00c00044 	movi	r3,1
    b804:	80e1883a 	add	r16,r16,r3
    b808:	003e4406 	br	b11c <__divdf3+0x178>
    b80c:	1013883a 	mov	r9,r2
    b810:	003f6306 	br	b5a0 <__divdf3+0x5fc>
    b814:	2011883a 	mov	r8,r4
    b818:	003f4406 	br	b52c <__divdf3+0x588>
    b81c:	988003cc 	andi	r2,r19,15
    b820:	10800118 	cmpnei	r2,r2,4
    b824:	103e3c26 	beq	r2,zero,b118 <__divdf3+0x174>
    b828:	98800104 	addi	r2,r19,4
    b82c:	00fffec4 	movi	r3,-5
    b830:	1cc7803a 	cmpltu	r3,r3,r19
    b834:	1026d0fa 	srli	r19,r2,3
    b838:	003ff206 	br	b804 <__divdf3+0x860>
    b83c:	a0ff992e 	bgeu	r20,r3,b6a4 <__divdf3+0x700>
    b840:	d8800017 	ldw	r2,0(sp)
    b844:	843fff84 	addi	r16,r16,-2
    b848:	a0a9883a 	add	r20,r20,r2
    b84c:	a085803a 	cmpltu	r2,r20,r2
    b850:	1445883a 	add	r2,r2,r17
    b854:	4091883a 	add	r8,r8,r2
    b858:	003f1306 	br	b4a8 <__divdf3+0x504>
    b85c:	d9c00017 	ldw	r7,0(sp)
    b860:	9cffff84 	addi	r19,r19,-2
    b864:	39cb883a 	add	r5,r7,r7
    b868:	29cf803a 	cmpltu	r7,r5,r7
    b86c:	3c4f883a 	add	r7,r7,r17
    b870:	19c7883a 	add	r3,r3,r7
    b874:	d9400015 	stw	r5,0(sp)
    b878:	003fdb06 	br	b7e8 <__divdf3+0x844>
    b87c:	00bff844 	movi	r2,-31
    b880:	1529c83a 	sub	r20,r2,r20
    b884:	21000820 	cmpeqi	r4,r4,32
    b888:	8528d83a 	srl	r20,r16,r20
    b88c:	2000031e 	bne	r4,zero,b89c <__divdf3+0x8f8>
    b890:	90810f84 	addi	r2,r18,1086
    b894:	8088983a 	sll	r4,r16,r2
    b898:	9926b03a 	or	r19,r19,r4
    b89c:	9826c03a 	cmpne	r19,r19,zero
    b8a0:	9d26b03a 	or	r19,r19,r20
    b8a4:	9c0001cc 	andi	r16,r19,7
    b8a8:	8000051e 	bne	r16,zero,b8c0 <__divdf3+0x91c>
    b8ac:	0009883a 	mov	r4,zero
    b8b0:	9826d0fa 	srli	r19,r19,3
    b8b4:	0005883a 	mov	r2,zero
    b8b8:	9c26b03a 	or	r19,r19,r16
    b8bc:	003e2906 	br	b164 <__divdf3+0x1c0>
    b8c0:	988003cc 	andi	r2,r19,15
    b8c4:	10800118 	cmpnei	r2,r2,4
    b8c8:	0009883a 	mov	r4,zero
    b8cc:	103faa1e 	bne	r2,zero,b778 <__divdf3+0x7d4>
    b8d0:	2004927a 	slli	r2,r4,9
    b8d4:	2020977a 	slli	r16,r4,29
    b8d8:	1008d33a 	srli	r4,r2,12
    b8dc:	003ff406 	br	b8b0 <__divdf3+0x90c>
    b8e0:	00800434 	movhi	r2,16
    b8e4:	81000234 	orhi	r4,r16,8
    b8e8:	10bfffc4 	addi	r2,r2,-1
    b8ec:	2088703a 	and	r4,r4,r2
    b8f0:	b00d883a 	mov	r6,r22
    b8f4:	003e7b06 	br	b2e4 <__divdf3+0x340>
    b8f8:	d9c00017 	ldw	r7,0(sp)
    b8fc:	38bfd736 	bltu	r7,r2,b85c <__divdf3+0x8b8>
    b900:	2827883a 	mov	r19,r5
    b904:	003fb906 	br	b7ec <__divdf3+0x848>

0000b908 <__eqdf2>:
    b908:	2810d53a 	srli	r8,r5,20
    b90c:	3806d53a 	srli	r3,r7,20
    b910:	00800434 	movhi	r2,16
    b914:	4201ffcc 	andi	r8,r8,2047
    b918:	10bfffc4 	addi	r2,r2,-1
    b91c:	4281ffd8 	cmpnei	r10,r8,2047
    b920:	2892703a 	and	r9,r5,r2
    b924:	18c1ffcc 	andi	r3,r3,2047
    b928:	3884703a 	and	r2,r7,r2
    b92c:	280ad7fa 	srli	r5,r5,31
    b930:	380ed7fa 	srli	r7,r7,31
    b934:	50000626 	beq	r10,zero,b950 <__eqdf2+0x48>
    b938:	1a81ffe0 	cmpeqi	r10,r3,2047
    b93c:	5000021e 	bne	r10,zero,b948 <__eqdf2+0x40>
    b940:	40c0011e 	bne	r8,r3,b948 <__eqdf2+0x40>
    b944:	48800826 	beq	r9,r2,b968 <__eqdf2+0x60>
    b948:	00800044 	movi	r2,1
    b94c:	f800283a 	ret
    b950:	4914b03a 	or	r10,r9,r4
    b954:	503ffc1e 	bne	r10,zero,b948 <__eqdf2+0x40>
    b958:	18c1ffd8 	cmpnei	r3,r3,2047
    b95c:	183ffa1e 	bne	r3,zero,b948 <__eqdf2+0x40>
    b960:	1184b03a 	or	r2,r2,r6
    b964:	103ff81e 	bne	r2,zero,b948 <__eqdf2+0x40>
    b968:	21bff71e 	bne	r4,r6,b948 <__eqdf2+0x40>
    b96c:	29c00426 	beq	r5,r7,b980 <__eqdf2+0x78>
    b970:	403ff51e 	bne	r8,zero,b948 <__eqdf2+0x40>
    b974:	4904b03a 	or	r2,r9,r4
    b978:	1004c03a 	cmpne	r2,r2,zero
    b97c:	f800283a 	ret
    b980:	0005883a 	mov	r2,zero
    b984:	f800283a 	ret

0000b988 <__gedf2>:
    b988:	2810d53a 	srli	r8,r5,20
    b98c:	3812d53a 	srli	r9,r7,20
    b990:	00800434 	movhi	r2,16
    b994:	4201ffcc 	andi	r8,r8,2047
    b998:	10bfffc4 	addi	r2,r2,-1
    b99c:	4281ffd8 	cmpnei	r10,r8,2047
    b9a0:	2896703a 	and	r11,r5,r2
    b9a4:	3886703a 	and	r3,r7,r2
    b9a8:	280ad7fa 	srli	r5,r5,31
    b9ac:	4a41ffcc 	andi	r9,r9,2047
    b9b0:	3804d7fa 	srli	r2,r7,31
    b9b4:	50000b26 	beq	r10,zero,b9e4 <__gedf2+0x5c>
    b9b8:	49c1ffd8 	cmpnei	r7,r9,2047
    b9bc:	38000d26 	beq	r7,zero,b9f4 <__gedf2+0x6c>
    b9c0:	4000191e 	bne	r8,zero,ba28 <__gedf2+0xa0>
    b9c4:	5914b03a 	or	r10,r11,r4
    b9c8:	500f003a 	cmpeq	r7,r10,zero
    b9cc:	4800131e 	bne	r9,zero,ba1c <__gedf2+0x94>
    b9d0:	1998b03a 	or	r12,r3,r6
    b9d4:	6000111e 	bne	r12,zero,ba1c <__gedf2+0x94>
    b9d8:	50000a1e 	bne	r10,zero,ba04 <__gedf2+0x7c>
    b9dc:	0005883a 	mov	r2,zero
    b9e0:	f800283a 	ret
    b9e4:	590eb03a 	or	r7,r11,r4
    b9e8:	38001e1e 	bne	r7,zero,ba64 <__gedf2+0xdc>
    b9ec:	49c1ffe0 	cmpeqi	r7,r9,2047
    b9f0:	38000d26 	beq	r7,zero,ba28 <__gedf2+0xa0>
    b9f4:	198eb03a 	or	r7,r3,r6
    b9f8:	38001a1e 	bne	r7,zero,ba64 <__gedf2+0xdc>
    b9fc:	40000526 	beq	r8,zero,ba14 <__gedf2+0x8c>
    ba00:	28800d26 	beq	r5,r2,ba38 <__gedf2+0xb0>
    ba04:	00800044 	movi	r2,1
    ba08:	28000626 	beq	r5,zero,ba24 <__gedf2+0x9c>
    ba0c:	00bfffc4 	movi	r2,-1
    ba10:	f800283a 	ret
    ba14:	590eb03a 	or	r7,r11,r4
    ba18:	380f003a 	cmpeq	r7,r7,zero
    ba1c:	383ff826 	beq	r7,zero,ba00 <__gedf2+0x78>
    ba20:	103ffa26 	beq	r2,zero,ba0c <__gedf2+0x84>
    ba24:	f800283a 	ret
    ba28:	483ff51e 	bne	r9,zero,ba00 <__gedf2+0x78>
    ba2c:	198eb03a 	or	r7,r3,r6
    ba30:	383ff31e 	bne	r7,zero,ba00 <__gedf2+0x78>
    ba34:	003ff306 	br	ba04 <__gedf2+0x7c>
    ba38:	4a000716 	blt	r9,r8,ba58 <__gedf2+0xd0>
    ba3c:	427ff816 	blt	r8,r9,ba20 <__gedf2+0x98>
    ba40:	1afff036 	bltu	r3,r11,ba04 <__gedf2+0x7c>
    ba44:	58c00926 	beq	r11,r3,ba6c <__gedf2+0xe4>
    ba48:	58ffe42e 	bgeu	r11,r3,b9dc <__gedf2+0x54>
    ba4c:	283fef26 	beq	r5,zero,ba0c <__gedf2+0x84>
    ba50:	2805883a 	mov	r2,r5
    ba54:	f800283a 	ret
    ba58:	103fec1e 	bne	r2,zero,ba0c <__gedf2+0x84>
    ba5c:	00800044 	movi	r2,1
    ba60:	f800283a 	ret
    ba64:	00bfff84 	movi	r2,-2
    ba68:	f800283a 	ret
    ba6c:	313fe536 	bltu	r6,r4,ba04 <__gedf2+0x7c>
    ba70:	21bfda2e 	bgeu	r4,r6,b9dc <__gedf2+0x54>
    ba74:	003ff506 	br	ba4c <__gedf2+0xc4>

0000ba78 <__ledf2>:
    ba78:	2810d53a 	srli	r8,r5,20
    ba7c:	3812d53a 	srli	r9,r7,20
    ba80:	00800434 	movhi	r2,16
    ba84:	4201ffcc 	andi	r8,r8,2047
    ba88:	10bfffc4 	addi	r2,r2,-1
    ba8c:	4281ffd8 	cmpnei	r10,r8,2047
    ba90:	2896703a 	and	r11,r5,r2
    ba94:	3886703a 	and	r3,r7,r2
    ba98:	280ad7fa 	srli	r5,r5,31
    ba9c:	4a41ffcc 	andi	r9,r9,2047
    baa0:	3804d7fa 	srli	r2,r7,31
    baa4:	50000b26 	beq	r10,zero,bad4 <__ledf2+0x5c>
    baa8:	49c1ffd8 	cmpnei	r7,r9,2047
    baac:	38000d26 	beq	r7,zero,bae4 <__ledf2+0x6c>
    bab0:	40001b1e 	bne	r8,zero,bb20 <__ledf2+0xa8>
    bab4:	5914b03a 	or	r10,r11,r4
    bab8:	500f003a 	cmpeq	r7,r10,zero
    babc:	48000e1e 	bne	r9,zero,baf8 <__ledf2+0x80>
    bac0:	1998b03a 	or	r12,r3,r6
    bac4:	60000c1e 	bne	r12,zero,baf8 <__ledf2+0x80>
    bac8:	50000d1e 	bne	r10,zero,bb00 <__ledf2+0x88>
    bacc:	0005883a 	mov	r2,zero
    bad0:	f800283a 	ret
    bad4:	590eb03a 	or	r7,r11,r4
    bad8:	38000d1e 	bne	r7,zero,bb10 <__ledf2+0x98>
    badc:	49c1ffe0 	cmpeqi	r7,r9,2047
    bae0:	38000f26 	beq	r7,zero,bb20 <__ledf2+0xa8>
    bae4:	198eb03a 	or	r7,r3,r6
    bae8:	3800091e 	bne	r7,zero,bb10 <__ledf2+0x98>
    baec:	4000031e 	bne	r8,zero,bafc <__ledf2+0x84>
    baf0:	590eb03a 	or	r7,r11,r4
    baf4:	380f003a 	cmpeq	r7,r7,zero
    baf8:	3800071e 	bne	r7,zero,bb18 <__ledf2+0xa0>
    bafc:	28800c26 	beq	r5,r2,bb30 <__ledf2+0xb8>
    bb00:	00800044 	movi	r2,1
    bb04:	28000526 	beq	r5,zero,bb1c <__ledf2+0xa4>
    bb08:	00bfffc4 	movi	r2,-1
    bb0c:	f800283a 	ret
    bb10:	00800084 	movi	r2,2
    bb14:	f800283a 	ret
    bb18:	103ffb26 	beq	r2,zero,bb08 <__ledf2+0x90>
    bb1c:	f800283a 	ret
    bb20:	483ff61e 	bne	r9,zero,bafc <__ledf2+0x84>
    bb24:	198eb03a 	or	r7,r3,r6
    bb28:	383ff41e 	bne	r7,zero,bafc <__ledf2+0x84>
    bb2c:	003ff406 	br	bb00 <__ledf2+0x88>
    bb30:	4a00030e 	bge	r9,r8,bb40 <__ledf2+0xc8>
    bb34:	103ff41e 	bne	r2,zero,bb08 <__ledf2+0x90>
    bb38:	00800044 	movi	r2,1
    bb3c:	f800283a 	ret
    bb40:	427ff516 	blt	r8,r9,bb18 <__ledf2+0xa0>
    bb44:	1affee36 	bltu	r3,r11,bb00 <__ledf2+0x88>
    bb48:	58c00426 	beq	r11,r3,bb5c <__ledf2+0xe4>
    bb4c:	58ffdf2e 	bgeu	r11,r3,bacc <__ledf2+0x54>
    bb50:	283fed26 	beq	r5,zero,bb08 <__ledf2+0x90>
    bb54:	2805883a 	mov	r2,r5
    bb58:	f800283a 	ret
    bb5c:	313fe836 	bltu	r6,r4,bb00 <__ledf2+0x88>
    bb60:	21bfda2e 	bgeu	r4,r6,bacc <__ledf2+0x54>
    bb64:	003ffa06 	br	bb50 <__ledf2+0xd8>

0000bb68 <__muldf3>:
    bb68:	2810d53a 	srli	r8,r5,20
    bb6c:	deffef04 	addi	sp,sp,-68
    bb70:	dc000715 	stw	r16,28(sp)
    bb74:	04000434 	movhi	r16,16
    bb78:	dd000b15 	stw	r20,44(sp)
    bb7c:	dc800915 	stw	r18,36(sp)
    bb80:	843fffc4 	addi	r16,r16,-1
    bb84:	dfc01015 	stw	ra,64(sp)
    bb88:	df000f15 	stw	fp,60(sp)
    bb8c:	ddc00e15 	stw	r23,56(sp)
    bb90:	dd800d15 	stw	r22,52(sp)
    bb94:	dd400c15 	stw	r21,48(sp)
    bb98:	dcc00a15 	stw	r19,40(sp)
    bb9c:	dc400815 	stw	r17,32(sp)
    bba0:	4201ffcc 	andi	r8,r8,2047
    bba4:	2025883a 	mov	r18,r4
    bba8:	2c20703a 	and	r16,r5,r16
    bbac:	2828d7fa 	srli	r20,r5,31
    bbb0:	40005d26 	beq	r8,zero,bd28 <__muldf3+0x1c0>
    bbb4:	4081ffe0 	cmpeqi	r2,r8,2047
    bbb8:	1000721e 	bne	r2,zero,bd84 <__muldf3+0x21c>
    bbbc:	802090fa 	slli	r16,r16,3
    bbc0:	2006d77a 	srli	r3,r4,29
    bbc4:	202c90fa 	slli	r22,r4,3
    bbc8:	423f0044 	addi	r8,r8,-1023
    bbcc:	1c20b03a 	or	r16,r3,r16
    bbd0:	84002034 	orhi	r16,r16,128
    bbd4:	0027883a 	mov	r19,zero
    bbd8:	002f883a 	mov	r23,zero
    bbdc:	3806d53a 	srli	r3,r7,20
    bbe0:	04400434 	movhi	r17,16
    bbe4:	8c7fffc4 	addi	r17,r17,-1
    bbe8:	18c1ffcc 	andi	r3,r3,2047
    bbec:	3c62703a 	and	r17,r7,r17
    bbf0:	382ad7fa 	srli	r21,r7,31
    bbf4:	18006a26 	beq	r3,zero,bda0 <__muldf3+0x238>
    bbf8:	1881ffe0 	cmpeqi	r2,r3,2047
    bbfc:	1000211e 	bne	r2,zero,bc84 <__muldf3+0x11c>
    bc00:	882290fa 	slli	r17,r17,3
    bc04:	3008d77a 	srli	r4,r6,29
    bc08:	302490fa 	slli	r18,r6,3
    bc0c:	18ff0044 	addi	r3,r3,-1023
    bc10:	2462b03a 	or	r17,r4,r17
    bc14:	40d1883a 	add	r8,r8,r3
    bc18:	8c402034 	orhi	r17,r17,128
    bc1c:	0007883a 	mov	r3,zero
    bc20:	98800428 	cmpgeui	r2,r19,16
    bc24:	a54cf03a 	xor	r6,r20,r21
    bc28:	42400044 	addi	r9,r8,1
    bc2c:	10009b1e 	bne	r2,zero,be9c <__muldf3+0x334>
    bc30:	982690ba 	slli	r19,r19,2
    bc34:	00800074 	movhi	r2,1
    bc38:	9885883a 	add	r2,r19,r2
    bc3c:	10af1117 	ldw	r2,-17340(r2)
    bc40:	1000683a 	jmp	r2
    bc44:	0000be9c 	xori	zero,zero,762
    bc48:	0000bca4 	muli	zero,zero,754
    bc4c:	0000bca4 	muli	zero,zero,754
    bc50:	0000bca0 	cmpeqi	zero,zero,754
    bc54:	0000bcb0 	cmpltui	zero,zero,754
    bc58:	0000bcb0 	cmpltui	zero,zero,754
    bc5c:	0000be58 	cmpnei	zero,zero,761
    bc60:	0000bca0 	cmpeqi	zero,zero,754
    bc64:	0000bcb0 	cmpltui	zero,zero,754
    bc68:	0000be58 	cmpnei	zero,zero,761
    bc6c:	0000bcb0 	cmpltui	zero,zero,754
    bc70:	0000bca0 	cmpeqi	zero,zero,754
    bc74:	0000be50 	cmplti	zero,zero,761
    bc78:	0000be50 	cmplti	zero,zero,761
    bc7c:	0000be50 	cmplti	zero,zero,761
    bc80:	0000be70 	cmpltui	zero,zero,761
    bc84:	3464b03a 	or	r18,r6,r17
    bc88:	4201ffc4 	addi	r8,r8,2047
    bc8c:	90006c1e 	bne	r18,zero,be40 <__muldf3+0x2d8>
    bc90:	9cc00094 	ori	r19,r19,2
    bc94:	0023883a 	mov	r17,zero
    bc98:	00c00084 	movi	r3,2
    bc9c:	003fe006 	br	bc20 <__muldf3+0xb8>
    bca0:	a80d883a 	mov	r6,r21
    bca4:	8821883a 	mov	r16,r17
    bca8:	902d883a 	mov	r22,r18
    bcac:	182f883a 	mov	r23,r3
    bcb0:	b88000a0 	cmpeqi	r2,r23,2
    bcb4:	1000501e 	bne	r2,zero,bdf8 <__muldf3+0x290>
    bcb8:	b88000e0 	cmpeqi	r2,r23,3
    bcbc:	10019d1e 	bne	r2,zero,c334 <__muldf3+0x7cc>
    bcc0:	b8800060 	cmpeqi	r2,r23,1
    bcc4:	10012a26 	beq	r2,zero,c170 <__muldf3+0x608>
    bcc8:	0007883a 	mov	r3,zero
    bccc:	0021883a 	mov	r16,zero
    bcd0:	002d883a 	mov	r22,zero
    bcd4:	04400434 	movhi	r17,16
    bcd8:	1806953a 	slli	r3,r3,20
    bcdc:	31803fcc 	andi	r6,r6,255
    bce0:	8c7fffc4 	addi	r17,r17,-1
    bce4:	300c97fa 	slli	r6,r6,31
    bce8:	8460703a 	and	r16,r16,r17
    bcec:	80c6b03a 	or	r3,r16,r3
    bcf0:	1986b03a 	or	r3,r3,r6
    bcf4:	b005883a 	mov	r2,r22
    bcf8:	dfc01017 	ldw	ra,64(sp)
    bcfc:	df000f17 	ldw	fp,60(sp)
    bd00:	ddc00e17 	ldw	r23,56(sp)
    bd04:	dd800d17 	ldw	r22,52(sp)
    bd08:	dd400c17 	ldw	r21,48(sp)
    bd0c:	dd000b17 	ldw	r20,44(sp)
    bd10:	dcc00a17 	ldw	r19,40(sp)
    bd14:	dc800917 	ldw	r18,36(sp)
    bd18:	dc400817 	ldw	r17,32(sp)
    bd1c:	dc000717 	ldw	r16,28(sp)
    bd20:	dec01104 	addi	sp,sp,68
    bd24:	f800283a 	ret
    bd28:	812cb03a 	or	r22,r16,r4
    bd2c:	b0003f26 	beq	r22,zero,be2c <__muldf3+0x2c4>
    bd30:	d9c00115 	stw	r7,4(sp)
    bd34:	d9800015 	stw	r6,0(sp)
    bd38:	80013b26 	beq	r16,zero,c228 <__muldf3+0x6c0>
    bd3c:	8009883a 	mov	r4,r16
    bd40:	000ceec0 	call	ceec <__clzsi2>
    bd44:	d9800017 	ldw	r6,0(sp)
    bd48:	d9c00117 	ldw	r7,4(sp)
    bd4c:	1007883a 	mov	r3,r2
    bd50:	117ffd44 	addi	r5,r2,-11
    bd54:	01000744 	movi	r4,29
    bd58:	1dbffe04 	addi	r22,r3,-8
    bd5c:	2149c83a 	sub	r4,r4,r5
    bd60:	85a0983a 	sll	r16,r16,r22
    bd64:	9108d83a 	srl	r4,r18,r4
    bd68:	95ac983a 	sll	r22,r18,r22
    bd6c:	2420b03a 	or	r16,r4,r16
    bd70:	023f0344 	movi	r8,-1011
    bd74:	40d1c83a 	sub	r8,r8,r3
    bd78:	0027883a 	mov	r19,zero
    bd7c:	002f883a 	mov	r23,zero
    bd80:	003f9606 	br	bbdc <__muldf3+0x74>
    bd84:	812cb03a 	or	r22,r16,r4
    bd88:	b000231e 	bne	r22,zero,be18 <__muldf3+0x2b0>
    bd8c:	0021883a 	mov	r16,zero
    bd90:	04c00204 	movi	r19,8
    bd94:	0201ffc4 	movi	r8,2047
    bd98:	05c00084 	movi	r23,2
    bd9c:	003f8f06 	br	bbdc <__muldf3+0x74>
    bda0:	3464b03a 	or	r18,r6,r17
    bda4:	90001826 	beq	r18,zero,be08 <__muldf3+0x2a0>
    bda8:	88011126 	beq	r17,zero,c1f0 <__muldf3+0x688>
    bdac:	8809883a 	mov	r4,r17
    bdb0:	d9800115 	stw	r6,4(sp)
    bdb4:	da000015 	stw	r8,0(sp)
    bdb8:	000ceec0 	call	ceec <__clzsi2>
    bdbc:	da000017 	ldw	r8,0(sp)
    bdc0:	d9800117 	ldw	r6,4(sp)
    bdc4:	1007883a 	mov	r3,r2
    bdc8:	117ffd44 	addi	r5,r2,-11
    bdcc:	01000744 	movi	r4,29
    bdd0:	1cbffe04 	addi	r18,r3,-8
    bdd4:	2149c83a 	sub	r4,r4,r5
    bdd8:	8ca2983a 	sll	r17,r17,r18
    bddc:	3108d83a 	srl	r4,r6,r4
    bde0:	34a4983a 	sll	r18,r6,r18
    bde4:	2462b03a 	or	r17,r4,r17
    bde8:	40d1c83a 	sub	r8,r8,r3
    bdec:	423f0344 	addi	r8,r8,-1011
    bdf0:	0007883a 	mov	r3,zero
    bdf4:	003f8a06 	br	bc20 <__muldf3+0xb8>
    bdf8:	00c1ffc4 	movi	r3,2047
    bdfc:	0021883a 	mov	r16,zero
    be00:	002d883a 	mov	r22,zero
    be04:	003fb306 	br	bcd4 <__muldf3+0x16c>
    be08:	9cc00054 	ori	r19,r19,1
    be0c:	0023883a 	mov	r17,zero
    be10:	00c00044 	movi	r3,1
    be14:	003f8206 	br	bc20 <__muldf3+0xb8>
    be18:	202d883a 	mov	r22,r4
    be1c:	04c00304 	movi	r19,12
    be20:	0201ffc4 	movi	r8,2047
    be24:	05c000c4 	movi	r23,3
    be28:	003f6c06 	br	bbdc <__muldf3+0x74>
    be2c:	0021883a 	mov	r16,zero
    be30:	04c00104 	movi	r19,4
    be34:	0011883a 	mov	r8,zero
    be38:	05c00044 	movi	r23,1
    be3c:	003f6706 	br	bbdc <__muldf3+0x74>
    be40:	9cc000d4 	ori	r19,r19,3
    be44:	3025883a 	mov	r18,r6
    be48:	00c000c4 	movi	r3,3
    be4c:	003f7406 	br	bc20 <__muldf3+0xb8>
    be50:	a00d883a 	mov	r6,r20
    be54:	003f9606 	br	bcb0 <__muldf3+0x148>
    be58:	04000434 	movhi	r16,16
    be5c:	000d883a 	mov	r6,zero
    be60:	843fffc4 	addi	r16,r16,-1
    be64:	05bfffc4 	movi	r22,-1
    be68:	00c1ffc4 	movi	r3,2047
    be6c:	003f9906 	br	bcd4 <__muldf3+0x16c>
    be70:	8080022c 	andhi	r2,r16,8
    be74:	1000d826 	beq	r2,zero,c1d8 <__muldf3+0x670>
    be78:	8880022c 	andhi	r2,r17,8
    be7c:	1000d61e 	bne	r2,zero,c1d8 <__muldf3+0x670>
    be80:	00800434 	movhi	r2,16
    be84:	8c000234 	orhi	r16,r17,8
    be88:	10bfffc4 	addi	r2,r2,-1
    be8c:	80a0703a 	and	r16,r16,r2
    be90:	a80d883a 	mov	r6,r21
    be94:	902d883a 	mov	r22,r18
    be98:	003ff306 	br	be68 <__muldf3+0x300>
    be9c:	b028d43a 	srli	r20,r22,16
    bea0:	902ed43a 	srli	r23,r18,16
    bea4:	b5bfffcc 	andi	r22,r22,65535
    bea8:	94bfffcc 	andi	r18,r18,65535
    beac:	b00b883a 	mov	r5,r22
    beb0:	9009883a 	mov	r4,r18
    beb4:	d9800215 	stw	r6,8(sp)
    beb8:	da000115 	stw	r8,4(sp)
    bebc:	da400015 	stw	r9,0(sp)
    bec0:	000a5dc0 	call	a5dc <__mulsi3>
    bec4:	900b883a 	mov	r5,r18
    bec8:	a009883a 	mov	r4,r20
    becc:	1027883a 	mov	r19,r2
    bed0:	000a5dc0 	call	a5dc <__mulsi3>
    bed4:	b80b883a 	mov	r5,r23
    bed8:	a009883a 	mov	r4,r20
    bedc:	102b883a 	mov	r21,r2
    bee0:	000a5dc0 	call	a5dc <__mulsi3>
    bee4:	b00b883a 	mov	r5,r22
    bee8:	b809883a 	mov	r4,r23
    beec:	1039883a 	mov	fp,r2
    bef0:	000a5dc0 	call	a5dc <__mulsi3>
    bef4:	9806d43a 	srli	r3,r19,16
    bef8:	1545883a 	add	r2,r2,r21
    befc:	da400017 	ldw	r9,0(sp)
    bf00:	1885883a 	add	r2,r3,r2
    bf04:	da000117 	ldw	r8,4(sp)
    bf08:	d9800217 	ldw	r6,8(sp)
    bf0c:	1540022e 	bgeu	r2,r21,bf18 <__muldf3+0x3b0>
    bf10:	00c00074 	movhi	r3,1
    bf14:	e0f9883a 	add	fp,fp,r3
    bf18:	1006943a 	slli	r3,r2,16
    bf1c:	1004d43a 	srli	r2,r2,16
    bf20:	882ad43a 	srli	r21,r17,16
    bf24:	9cffffcc 	andi	r19,r19,65535
    bf28:	8c7fffcc 	andi	r17,r17,65535
    bf2c:	b00b883a 	mov	r5,r22
    bf30:	8809883a 	mov	r4,r17
    bf34:	d8800015 	stw	r2,0(sp)
    bf38:	1cc5883a 	add	r2,r3,r19
    bf3c:	d9800515 	stw	r6,20(sp)
    bf40:	da000415 	stw	r8,16(sp)
    bf44:	da400315 	stw	r9,12(sp)
    bf48:	d8800115 	stw	r2,4(sp)
    bf4c:	000a5dc0 	call	a5dc <__mulsi3>
    bf50:	a009883a 	mov	r4,r20
    bf54:	880b883a 	mov	r5,r17
    bf58:	d8800215 	stw	r2,8(sp)
    bf5c:	000a5dc0 	call	a5dc <__mulsi3>
    bf60:	a009883a 	mov	r4,r20
    bf64:	a80b883a 	mov	r5,r21
    bf68:	1027883a 	mov	r19,r2
    bf6c:	000a5dc0 	call	a5dc <__mulsi3>
    bf70:	b00b883a 	mov	r5,r22
    bf74:	a809883a 	mov	r4,r21
    bf78:	1029883a 	mov	r20,r2
    bf7c:	000a5dc0 	call	a5dc <__mulsi3>
    bf80:	d9c00217 	ldw	r7,8(sp)
    bf84:	14c5883a 	add	r2,r2,r19
    bf88:	da400317 	ldw	r9,12(sp)
    bf8c:	3806d43a 	srli	r3,r7,16
    bf90:	da000417 	ldw	r8,16(sp)
    bf94:	d9800517 	ldw	r6,20(sp)
    bf98:	1885883a 	add	r2,r3,r2
    bf9c:	14c0022e 	bgeu	r2,r19,bfa8 <__muldf3+0x440>
    bfa0:	00c00074 	movhi	r3,1
    bfa4:	a0e9883a 	add	r20,r20,r3
    bfa8:	1006d43a 	srli	r3,r2,16
    bfac:	1004943a 	slli	r2,r2,16
    bfb0:	802cd43a 	srli	r22,r16,16
    bfb4:	843fffcc 	andi	r16,r16,65535
    bfb8:	3cffffcc 	andi	r19,r7,65535
    bfbc:	9009883a 	mov	r4,r18
    bfc0:	800b883a 	mov	r5,r16
    bfc4:	d9800615 	stw	r6,24(sp)
    bfc8:	da000515 	stw	r8,20(sp)
    bfcc:	da400415 	stw	r9,16(sp)
    bfd0:	1d29883a 	add	r20,r3,r20
    bfd4:	14e7883a 	add	r19,r2,r19
    bfd8:	000a5dc0 	call	a5dc <__mulsi3>
    bfdc:	900b883a 	mov	r5,r18
    bfe0:	b009883a 	mov	r4,r22
    bfe4:	d8800315 	stw	r2,12(sp)
    bfe8:	000a5dc0 	call	a5dc <__mulsi3>
    bfec:	b00b883a 	mov	r5,r22
    bff0:	b809883a 	mov	r4,r23
    bff4:	1025883a 	mov	r18,r2
    bff8:	000a5dc0 	call	a5dc <__mulsi3>
    bffc:	800b883a 	mov	r5,r16
    c000:	b809883a 	mov	r4,r23
    c004:	d8800215 	stw	r2,8(sp)
    c008:	000a5dc0 	call	a5dc <__mulsi3>
    c00c:	d8c00317 	ldw	r3,12(sp)
    c010:	d9400017 	ldw	r5,0(sp)
    c014:	1485883a 	add	r2,r2,r18
    c018:	1808d43a 	srli	r4,r3,16
    c01c:	2ccf883a 	add	r7,r5,r19
    c020:	da800217 	ldw	r10,8(sp)
    c024:	2085883a 	add	r2,r4,r2
    c028:	da400417 	ldw	r9,16(sp)
    c02c:	da000517 	ldw	r8,20(sp)
    c030:	d9800617 	ldw	r6,24(sp)
    c034:	1480022e 	bgeu	r2,r18,c040 <__muldf3+0x4d8>
    c038:	01000074 	movhi	r4,1
    c03c:	5115883a 	add	r10,r10,r4
    c040:	1024d43a 	srli	r18,r2,16
    c044:	1004943a 	slli	r2,r2,16
    c048:	1dffffcc 	andi	r23,r3,65535
    c04c:	8809883a 	mov	r4,r17
    c050:	800b883a 	mov	r5,r16
    c054:	d9800615 	stw	r6,24(sp)
    c058:	da000515 	stw	r8,20(sp)
    c05c:	da400415 	stw	r9,16(sp)
    c060:	d9c00315 	stw	r7,12(sp)
    c064:	92a5883a 	add	r18,r18,r10
    c068:	15ef883a 	add	r23,r2,r23
    c06c:	000a5dc0 	call	a5dc <__mulsi3>
    c070:	880b883a 	mov	r5,r17
    c074:	b009883a 	mov	r4,r22
    c078:	d8800215 	stw	r2,8(sp)
    c07c:	000a5dc0 	call	a5dc <__mulsi3>
    c080:	b00b883a 	mov	r5,r22
    c084:	a809883a 	mov	r4,r21
    c088:	d8800015 	stw	r2,0(sp)
    c08c:	000a5dc0 	call	a5dc <__mulsi3>
    c090:	800b883a 	mov	r5,r16
    c094:	a809883a 	mov	r4,r21
    c098:	1023883a 	mov	r17,r2
    c09c:	000a5dc0 	call	a5dc <__mulsi3>
    c0a0:	da800217 	ldw	r10,8(sp)
    c0a4:	d8c00017 	ldw	r3,0(sp)
    c0a8:	d9c00317 	ldw	r7,12(sp)
    c0ac:	500ad43a 	srli	r5,r10,16
    c0b0:	10c5883a 	add	r2,r2,r3
    c0b4:	da400417 	ldw	r9,16(sp)
    c0b8:	288b883a 	add	r5,r5,r2
    c0bc:	da000517 	ldw	r8,20(sp)
    c0c0:	d9800617 	ldw	r6,24(sp)
    c0c4:	28c0022e 	bgeu	r5,r3,c0d0 <__muldf3+0x568>
    c0c8:	00800074 	movhi	r2,1
    c0cc:	88a3883a 	add	r17,r17,r2
    c0d0:	2806943a 	slli	r3,r5,16
    c0d4:	52bfffcc 	andi	r10,r10,65535
    c0d8:	3f39883a 	add	fp,r7,fp
    c0dc:	1a87883a 	add	r3,r3,r10
    c0e0:	e4e7803a 	cmpltu	r19,fp,r19
    c0e4:	1d07883a 	add	r3,r3,r20
    c0e8:	e5f9883a 	add	fp,fp,r23
    c0ec:	1ce1883a 	add	r16,r3,r19
    c0f0:	e5c9803a 	cmpltu	r4,fp,r23
    c0f4:	848f883a 	add	r7,r16,r18
    c0f8:	280ad43a 	srli	r5,r5,16
    c0fc:	3915883a 	add	r10,r7,r4
    c100:	1d29803a 	cmpltu	r20,r3,r20
    c104:	84e1803a 	cmpltu	r16,r16,r19
    c108:	5109803a 	cmpltu	r4,r10,r4
    c10c:	a420b03a 	or	r16,r20,r16
    c110:	3ca5803a 	cmpltu	r18,r7,r18
    c114:	8161883a 	add	r16,r16,r5
    c118:	9108b03a 	or	r4,r18,r4
    c11c:	8121883a 	add	r16,r16,r4
    c120:	e02c927a 	slli	r22,fp,9
    c124:	8461883a 	add	r16,r16,r17
    c128:	d8c00117 	ldw	r3,4(sp)
    c12c:	5004d5fa 	srli	r2,r10,23
    c130:	8020927a 	slli	r16,r16,9
    c134:	e038d5fa 	srli	fp,fp,23
    c138:	b0ecb03a 	or	r22,r22,r3
    c13c:	5014927a 	slli	r10,r10,9
    c140:	80a0b03a 	or	r16,r16,r2
    c144:	b02cc03a 	cmpne	r22,r22,zero
    c148:	b72cb03a 	or	r22,r22,fp
    c14c:	8080402c 	andhi	r2,r16,256
    c150:	b2acb03a 	or	r22,r22,r10
    c154:	10005c26 	beq	r2,zero,c2c8 <__muldf3+0x760>
    c158:	b004d07a 	srli	r2,r22,1
    c15c:	800697fa 	slli	r3,r16,31
    c160:	b580004c 	andi	r22,r22,1
    c164:	8020d07a 	srli	r16,r16,1
    c168:	15acb03a 	or	r22,r2,r22
    c16c:	b0ecb03a 	or	r22,r22,r3
    c170:	48c0ffc4 	addi	r3,r9,1023
    c174:	00c0370e 	bge	zero,r3,c254 <__muldf3+0x6ec>
    c178:	b08001cc 	andi	r2,r22,7
    c17c:	10000726 	beq	r2,zero,c19c <__muldf3+0x634>
    c180:	b08003cc 	andi	r2,r22,15
    c184:	10800120 	cmpeqi	r2,r2,4
    c188:	1000041e 	bne	r2,zero,c19c <__muldf3+0x634>
    c18c:	b0800104 	addi	r2,r22,4
    c190:	15ad803a 	cmpltu	r22,r2,r22
    c194:	85a1883a 	add	r16,r16,r22
    c198:	102d883a 	mov	r22,r2
    c19c:	8080402c 	andhi	r2,r16,256
    c1a0:	10000426 	beq	r2,zero,c1b4 <__muldf3+0x64c>
    c1a4:	00bfc034 	movhi	r2,65280
    c1a8:	10bfffc4 	addi	r2,r2,-1
    c1ac:	80a0703a 	and	r16,r16,r2
    c1b0:	48c10004 	addi	r3,r9,1024
    c1b4:	1881ffc8 	cmpgei	r2,r3,2047
    c1b8:	103f0f1e 	bne	r2,zero,bdf8 <__muldf3+0x290>
    c1bc:	8004977a 	slli	r2,r16,29
    c1c0:	b02cd0fa 	srli	r22,r22,3
    c1c4:	8020927a 	slli	r16,r16,9
    c1c8:	18c1ffcc 	andi	r3,r3,2047
    c1cc:	15acb03a 	or	r22,r2,r22
    c1d0:	8020d33a 	srli	r16,r16,12
    c1d4:	003ebf06 	br	bcd4 <__muldf3+0x16c>
    c1d8:	00800434 	movhi	r2,16
    c1dc:	84000234 	orhi	r16,r16,8
    c1e0:	10bfffc4 	addi	r2,r2,-1
    c1e4:	80a0703a 	and	r16,r16,r2
    c1e8:	a00d883a 	mov	r6,r20
    c1ec:	003f1e06 	br	be68 <__muldf3+0x300>
    c1f0:	3009883a 	mov	r4,r6
    c1f4:	da000115 	stw	r8,4(sp)
    c1f8:	d9800015 	stw	r6,0(sp)
    c1fc:	000ceec0 	call	ceec <__clzsi2>
    c200:	11400544 	addi	r5,r2,21
    c204:	29000748 	cmpgei	r4,r5,29
    c208:	10c00804 	addi	r3,r2,32
    c20c:	d9800017 	ldw	r6,0(sp)
    c210:	da000117 	ldw	r8,4(sp)
    c214:	203eed26 	beq	r4,zero,bdcc <__muldf3+0x264>
    c218:	147ffe04 	addi	r17,r2,-8
    c21c:	3462983a 	sll	r17,r6,r17
    c220:	0025883a 	mov	r18,zero
    c224:	003ef006 	br	bde8 <__muldf3+0x280>
    c228:	000ceec0 	call	ceec <__clzsi2>
    c22c:	11400544 	addi	r5,r2,21
    c230:	29000748 	cmpgei	r4,r5,29
    c234:	10c00804 	addi	r3,r2,32
    c238:	d9800017 	ldw	r6,0(sp)
    c23c:	d9c00117 	ldw	r7,4(sp)
    c240:	203ec426 	beq	r4,zero,bd54 <__muldf3+0x1ec>
    c244:	143ffe04 	addi	r16,r2,-8
    c248:	9420983a 	sll	r16,r18,r16
    c24c:	002d883a 	mov	r22,zero
    c250:	003ec706 	br	bd70 <__muldf3+0x208>
    c254:	00800044 	movi	r2,1
    c258:	10c5c83a 	sub	r2,r2,r3
    c25c:	11000e48 	cmpgei	r4,r2,57
    c260:	203e991e 	bne	r4,zero,bcc8 <__muldf3+0x160>
    c264:	11000808 	cmpgei	r4,r2,32
    c268:	2000191e 	bne	r4,zero,c2d0 <__muldf3+0x768>
    c26c:	4a410784 	addi	r9,r9,1054
    c270:	8246983a 	sll	r3,r16,r9
    c274:	b088d83a 	srl	r4,r22,r2
    c278:	b26c983a 	sll	r22,r22,r9
    c27c:	80a0d83a 	srl	r16,r16,r2
    c280:	1904b03a 	or	r2,r3,r4
    c284:	b02cc03a 	cmpne	r22,r22,zero
    c288:	1584b03a 	or	r2,r2,r22
    c28c:	10c001cc 	andi	r3,r2,7
    c290:	18000726 	beq	r3,zero,c2b0 <__muldf3+0x748>
    c294:	10c003cc 	andi	r3,r2,15
    c298:	18c00120 	cmpeqi	r3,r3,4
    c29c:	1800041e 	bne	r3,zero,c2b0 <__muldf3+0x748>
    c2a0:	10c00104 	addi	r3,r2,4
    c2a4:	1885803a 	cmpltu	r2,r3,r2
    c2a8:	80a1883a 	add	r16,r16,r2
    c2ac:	1805883a 	mov	r2,r3
    c2b0:	80c0202c 	andhi	r3,r16,128
    c2b4:	18001b26 	beq	r3,zero,c324 <__muldf3+0x7bc>
    c2b8:	00c00044 	movi	r3,1
    c2bc:	0021883a 	mov	r16,zero
    c2c0:	002d883a 	mov	r22,zero
    c2c4:	003e8306 	br	bcd4 <__muldf3+0x16c>
    c2c8:	4013883a 	mov	r9,r8
    c2cc:	003fa806 	br	c170 <__muldf3+0x608>
    c2d0:	013ff844 	movi	r4,-31
    c2d4:	20c7c83a 	sub	r3,r4,r3
    c2d8:	10800820 	cmpeqi	r2,r2,32
    c2dc:	80c6d83a 	srl	r3,r16,r3
    c2e0:	1000031e 	bne	r2,zero,c2f0 <__muldf3+0x788>
    c2e4:	4a410f84 	addi	r9,r9,1086
    c2e8:	8260983a 	sll	r16,r16,r9
    c2ec:	b42cb03a 	or	r22,r22,r16
    c2f0:	b02cc03a 	cmpne	r22,r22,zero
    c2f4:	b0c4b03a 	or	r2,r22,r3
    c2f8:	158001cc 	andi	r22,r2,7
    c2fc:	b000051e 	bne	r22,zero,c314 <__muldf3+0x7ac>
    c300:	0021883a 	mov	r16,zero
    c304:	1004d0fa 	srli	r2,r2,3
    c308:	0007883a 	mov	r3,zero
    c30c:	15acb03a 	or	r22,r2,r22
    c310:	003e7006 	br	bcd4 <__muldf3+0x16c>
    c314:	10c003cc 	andi	r3,r2,15
    c318:	18c00118 	cmpnei	r3,r3,4
    c31c:	0021883a 	mov	r16,zero
    c320:	183fdf1e 	bne	r3,zero,c2a0 <__muldf3+0x738>
    c324:	8006927a 	slli	r3,r16,9
    c328:	802c977a 	slli	r22,r16,29
    c32c:	1820d33a 	srli	r16,r3,12
    c330:	003ff406 	br	c304 <__muldf3+0x79c>
    c334:	00800434 	movhi	r2,16
    c338:	84000234 	orhi	r16,r16,8
    c33c:	10bfffc4 	addi	r2,r2,-1
    c340:	80a0703a 	and	r16,r16,r2
    c344:	003ec806 	br	be68 <__muldf3+0x300>

0000c348 <__subdf3>:
    c348:	00800434 	movhi	r2,16
    c34c:	3812d53a 	srli	r9,r7,20
    c350:	10bfffc4 	addi	r2,r2,-1
    c354:	defffb04 	addi	sp,sp,-20
    c358:	2890703a 	and	r8,r5,r2
    c35c:	3884703a 	and	r2,r7,r2
    c360:	2806d7fa 	srli	r3,r5,31
    c364:	dcc00315 	stw	r19,12(sp)
    c368:	dc400115 	stw	r17,4(sp)
    c36c:	280ad53a 	srli	r5,r5,20
    c370:	401090fa 	slli	r8,r8,3
    c374:	2026d77a 	srli	r19,r4,29
    c378:	100490fa 	slli	r2,r2,3
    c37c:	3022d77a 	srli	r17,r6,29
    c380:	4a81ffcc 	andi	r10,r9,2047
    c384:	dc800215 	stw	r18,8(sp)
    c388:	dc000015 	stw	r16,0(sp)
    c38c:	dfc00415 	stw	ra,16(sp)
    c390:	5241ffe0 	cmpeqi	r9,r10,2047
    c394:	1825883a 	mov	r18,r3
    c398:	2c01ffcc 	andi	r16,r5,2047
    c39c:	18c03fcc 	andi	r3,r3,255
    c3a0:	9a18b03a 	or	r12,r19,r8
    c3a4:	201a90fa 	slli	r13,r4,3
    c3a8:	380ed7fa 	srli	r7,r7,31
    c3ac:	8896b03a 	or	r11,r17,r2
    c3b0:	301c90fa 	slli	r14,r6,3
    c3b4:	4800711e 	bne	r9,zero,c57c <__subdf3+0x234>
    c3b8:	39c0005c 	xori	r7,r7,1
    c3bc:	8291c83a 	sub	r8,r16,r10
    c3c0:	19c05a26 	beq	r3,r7,c52c <__subdf3+0x1e4>
    c3c4:	0200720e 	bge	zero,r8,c590 <__subdf3+0x248>
    c3c8:	50008126 	beq	r10,zero,c5d0 <__subdf3+0x288>
    c3cc:	8081ffd8 	cmpnei	r2,r16,2047
    c3d0:	10011626 	beq	r2,zero,c82c <__subdf3+0x4e4>
    c3d4:	5ac02034 	orhi	r11,r11,128
    c3d8:	40800e48 	cmpgei	r2,r8,57
    c3dc:	1000fe1e 	bne	r2,zero,c7d8 <__subdf3+0x490>
    c3e0:	40800808 	cmpgei	r2,r8,32
    c3e4:	10015e1e 	bne	r2,zero,c960 <__subdf3+0x618>
    c3e8:	00800804 	movi	r2,32
    c3ec:	1205c83a 	sub	r2,r2,r8
    c3f0:	58a2983a 	sll	r17,r11,r2
    c3f4:	7206d83a 	srl	r3,r14,r8
    c3f8:	709c983a 	sll	r14,r14,r2
    c3fc:	5a04d83a 	srl	r2,r11,r8
    c400:	88e2b03a 	or	r17,r17,r3
    c404:	701cc03a 	cmpne	r14,r14,zero
    c408:	8ba2b03a 	or	r17,r17,r14
    c40c:	6099c83a 	sub	r12,r12,r2
    c410:	6c63c83a 	sub	r17,r13,r17
    c414:	6c49803a 	cmpltu	r4,r13,r17
    c418:	6109c83a 	sub	r4,r12,r4
    c41c:	2080202c 	andhi	r2,r4,128
    c420:	10009f26 	beq	r2,zero,c6a0 <__subdf3+0x358>
    c424:	04c02034 	movhi	r19,128
    c428:	9cffffc4 	addi	r19,r19,-1
    c42c:	24e6703a 	and	r19,r4,r19
    c430:	9800e026 	beq	r19,zero,c7b4 <__subdf3+0x46c>
    c434:	9809883a 	mov	r4,r19
    c438:	000ceec0 	call	ceec <__clzsi2>
    c43c:	123ffe04 	addi	r8,r2,-8
    c440:	01000804 	movi	r4,32
    c444:	2209c83a 	sub	r4,r4,r8
    c448:	8906d83a 	srl	r3,r17,r4
    c44c:	9a08983a 	sll	r4,r19,r8
    c450:	8a22983a 	sll	r17,r17,r8
    c454:	1908b03a 	or	r4,r3,r4
    c458:	4400cf16 	blt	r8,r16,c798 <__subdf3+0x450>
    c45c:	4411c83a 	sub	r8,r8,r16
    c460:	40800044 	addi	r2,r8,1
    c464:	10c00808 	cmpgei	r3,r2,32
    c468:	1801251e 	bne	r3,zero,c900 <__subdf3+0x5b8>
    c46c:	00c00804 	movi	r3,32
    c470:	1887c83a 	sub	r3,r3,r2
    c474:	888ad83a 	srl	r5,r17,r2
    c478:	88e2983a 	sll	r17,r17,r3
    c47c:	20c6983a 	sll	r3,r4,r3
    c480:	2088d83a 	srl	r4,r4,r2
    c484:	8822c03a 	cmpne	r17,r17,zero
    c488:	1946b03a 	or	r3,r3,r5
    c48c:	1c62b03a 	or	r17,r3,r17
    c490:	0021883a 	mov	r16,zero
    c494:	888001cc 	andi	r2,r17,7
    c498:	10000726 	beq	r2,zero,c4b8 <__subdf3+0x170>
    c49c:	888003cc 	andi	r2,r17,15
    c4a0:	10800120 	cmpeqi	r2,r2,4
    c4a4:	1000041e 	bne	r2,zero,c4b8 <__subdf3+0x170>
    c4a8:	88c00104 	addi	r3,r17,4
    c4ac:	1c63803a 	cmpltu	r17,r3,r17
    c4b0:	2449883a 	add	r4,r4,r17
    c4b4:	1823883a 	mov	r17,r3
    c4b8:	2080202c 	andhi	r2,r4,128
    c4bc:	10007a26 	beq	r2,zero,c6a8 <__subdf3+0x360>
    c4c0:	82000044 	addi	r8,r16,1
    c4c4:	4081ffe0 	cmpeqi	r2,r8,2047
    c4c8:	4201ffcc 	andi	r8,r8,2047
    c4cc:	10008c1e 	bne	r2,zero,c700 <__subdf3+0x3b8>
    c4d0:	00bfe034 	movhi	r2,65408
    c4d4:	10bfffc4 	addi	r2,r2,-1
    c4d8:	2084703a 	and	r2,r4,r2
    c4dc:	1008927a 	slli	r4,r2,9
    c4e0:	8822d0fa 	srli	r17,r17,3
    c4e4:	100c977a 	slli	r6,r2,29
    c4e8:	2008d33a 	srli	r4,r4,12
    c4ec:	3444b03a 	or	r2,r6,r17
    c4f0:	4010953a 	slli	r8,r8,20
    c4f4:	00c00434 	movhi	r3,16
    c4f8:	94803fcc 	andi	r18,r18,255
    c4fc:	902497fa 	slli	r18,r18,31
    c500:	18ffffc4 	addi	r3,r3,-1
    c504:	20c6703a 	and	r3,r4,r3
    c508:	1a06b03a 	or	r3,r3,r8
    c50c:	1c86b03a 	or	r3,r3,r18
    c510:	dfc00417 	ldw	ra,16(sp)
    c514:	dcc00317 	ldw	r19,12(sp)
    c518:	dc800217 	ldw	r18,8(sp)
    c51c:	dc400117 	ldw	r17,4(sp)
    c520:	dc000017 	ldw	r16,0(sp)
    c524:	dec00504 	addi	sp,sp,20
    c528:	f800283a 	ret
    c52c:	0200320e 	bge	zero,r8,c5f8 <__subdf3+0x2b0>
    c530:	50004c26 	beq	r10,zero,c664 <__subdf3+0x31c>
    c534:	8081ffd8 	cmpnei	r2,r16,2047
    c538:	1000bc26 	beq	r2,zero,c82c <__subdf3+0x4e4>
    c53c:	5ac02034 	orhi	r11,r11,128
    c540:	40800e48 	cmpgei	r2,r8,57
    c544:	1000641e 	bne	r2,zero,c6d8 <__subdf3+0x390>
    c548:	40800808 	cmpgei	r2,r8,32
    c54c:	10011726 	beq	r2,zero,c9ac <__subdf3+0x664>
    c550:	447ff804 	addi	r17,r8,-32
    c554:	40800820 	cmpeqi	r2,r8,32
    c558:	5c46d83a 	srl	r3,r11,r17
    c55c:	1000041e 	bne	r2,zero,c570 <__subdf3+0x228>
    c560:	00801004 	movi	r2,64
    c564:	1205c83a 	sub	r2,r2,r8
    c568:	5884983a 	sll	r2,r11,r2
    c56c:	709cb03a 	or	r14,r14,r2
    c570:	7022c03a 	cmpne	r17,r14,zero
    c574:	88e2b03a 	or	r17,r17,r3
    c578:	00005906 	br	c6e0 <__subdf3+0x398>
    c57c:	5b8ab03a 	or	r5,r11,r14
    c580:	823e0044 	addi	r8,r16,-2047
    c584:	28001a1e 	bne	r5,zero,c5f0 <__subdf3+0x2a8>
    c588:	39c0005c 	xori	r7,r7,1
    c58c:	19c01a26 	beq	r3,r7,c5f8 <__subdf3+0x2b0>
    c590:	4000291e 	bne	r8,zero,c638 <__subdf3+0x2f0>
    c594:	80800044 	addi	r2,r16,1
    c598:	1081ff8c 	andi	r2,r2,2046
    c59c:	1000911e 	bne	r2,zero,c7e4 <__subdf3+0x49c>
    c5a0:	6346b03a 	or	r3,r12,r13
    c5a4:	5b84b03a 	or	r2,r11,r14
    c5a8:	8001551e 	bne	r16,zero,cb00 <__subdf3+0x7b8>
    c5ac:	18011b26 	beq	r3,zero,ca1c <__subdf3+0x6d4>
    c5b0:	1001641e 	bne	r2,zero,cb44 <__subdf3+0x7fc>
    c5b4:	00880034 	movhi	r2,8192
    c5b8:	6022977a 	slli	r17,r12,29
    c5bc:	10bfffc4 	addi	r2,r2,-1
    c5c0:	2088703a 	and	r4,r4,r2
    c5c4:	2444b03a 	or	r2,r4,r17
    c5c8:	6026d0fa 	srli	r19,r12,3
    c5cc:	00003d06 	br	c6c4 <__subdf3+0x37c>
    c5d0:	5b84b03a 	or	r2,r11,r14
    c5d4:	10008e26 	beq	r2,zero,c810 <__subdf3+0x4c8>
    c5d8:	40bfffc4 	addi	r2,r8,-1
    c5dc:	10011f26 	beq	r2,zero,ca5c <__subdf3+0x714>
    c5e0:	4201ffd8 	cmpnei	r8,r8,2047
    c5e4:	40012d26 	beq	r8,zero,ca9c <__subdf3+0x754>
    c5e8:	1011883a 	mov	r8,r2
    c5ec:	003f7a06 	br	c3d8 <__subdf3+0x90>
    c5f0:	39c03fcc 	andi	r7,r7,255
    c5f4:	19ffe61e 	bne	r3,r7,c590 <__subdf3+0x248>
    c5f8:	4000931e 	bne	r8,zero,c848 <__subdf3+0x500>
    c5fc:	80c00044 	addi	r3,r16,1
    c600:	1881ff8c 	andi	r2,r3,2046
    c604:	10012c1e 	bne	r2,zero,cab8 <__subdf3+0x770>
    c608:	6344b03a 	or	r2,r12,r13
    c60c:	8000f91e 	bne	r16,zero,c9f4 <__subdf3+0x6ac>
    c610:	10017326 	beq	r2,zero,cbe0 <__subdf3+0x898>
    c614:	5b84b03a 	or	r2,r11,r14
    c618:	1001781e 	bne	r2,zero,cbfc <__subdf3+0x8b4>
    c61c:	6004977a 	slli	r2,r12,29
    c620:	00c80034 	movhi	r3,8192
    c624:	18ffffc4 	addi	r3,r3,-1
    c628:	20c6703a 	and	r3,r4,r3
    c62c:	10c4b03a 	or	r2,r2,r3
    c630:	6026d0fa 	srli	r19,r12,3
    c634:	00002306 	br	c6c4 <__subdf3+0x37c>
    c638:	5411c83a 	sub	r8,r10,r16
    c63c:	3825883a 	mov	r18,r7
    c640:	8000991e 	bne	r16,zero,c8a8 <__subdf3+0x560>
    c644:	6344b03a 	or	r2,r12,r13
    c648:	1000e326 	beq	r2,zero,c9d8 <__subdf3+0x690>
    c64c:	40bfffc4 	addi	r2,r8,-1
    c650:	10015d26 	beq	r2,zero,cbc8 <__subdf3+0x880>
    c654:	4201ffd8 	cmpnei	r8,r8,2047
    c658:	4000f926 	beq	r8,zero,ca40 <__subdf3+0x6f8>
    c65c:	1011883a 	mov	r8,r2
    c660:	00009406 	br	c8b4 <__subdf3+0x56c>
    c664:	5b84b03a 	or	r2,r11,r14
    c668:	10010226 	beq	r2,zero,ca74 <__subdf3+0x72c>
    c66c:	40bfffc4 	addi	r2,r8,-1
    c670:	10000426 	beq	r2,zero,c684 <__subdf3+0x33c>
    c674:	4201ffd8 	cmpnei	r8,r8,2047
    c678:	40014126 	beq	r8,zero,cb80 <__subdf3+0x838>
    c67c:	1011883a 	mov	r8,r2
    c680:	003faf06 	br	c540 <__subdf3+0x1f8>
    c684:	6ba3883a 	add	r17,r13,r14
    c688:	62c9883a 	add	r4,r12,r11
    c68c:	8b5b803a 	cmpltu	r13,r17,r13
    c690:	2349883a 	add	r4,r4,r13
    c694:	2080202c 	andhi	r2,r4,128
    c698:	1000a61e 	bne	r2,zero,c934 <__subdf3+0x5ec>
    c69c:	04000044 	movi	r16,1
    c6a0:	888001cc 	andi	r2,r17,7
    c6a4:	103f7d1e 	bne	r2,zero,c49c <__subdf3+0x154>
    c6a8:	8822d0fa 	srli	r17,r17,3
    c6ac:	2004977a 	slli	r2,r4,29
    c6b0:	2026d0fa 	srli	r19,r4,3
    c6b4:	8011883a 	mov	r8,r16
    c6b8:	8884b03a 	or	r2,r17,r2
    c6bc:	40c1ffe0 	cmpeqi	r3,r8,2047
    c6c0:	18002d1e 	bne	r3,zero,c778 <__subdf3+0x430>
    c6c4:	01000434 	movhi	r4,16
    c6c8:	213fffc4 	addi	r4,r4,-1
    c6cc:	9908703a 	and	r4,r19,r4
    c6d0:	4201ffcc 	andi	r8,r8,2047
    c6d4:	003f8606 	br	c4f0 <__subdf3+0x1a8>
    c6d8:	5ba2b03a 	or	r17,r11,r14
    c6dc:	8822c03a 	cmpne	r17,r17,zero
    c6e0:	8b63883a 	add	r17,r17,r13
    c6e4:	8b49803a 	cmpltu	r4,r17,r13
    c6e8:	2309883a 	add	r4,r4,r12
    c6ec:	2080202c 	andhi	r2,r4,128
    c6f0:	103feb26 	beq	r2,zero,c6a0 <__subdf3+0x358>
    c6f4:	84000044 	addi	r16,r16,1
    c6f8:	8081ffe0 	cmpeqi	r2,r16,2047
    c6fc:	10008e26 	beq	r2,zero,c938 <__subdf3+0x5f0>
    c700:	0201ffc4 	movi	r8,2047
    c704:	0009883a 	mov	r4,zero
    c708:	0005883a 	mov	r2,zero
    c70c:	003f7806 	br	c4f0 <__subdf3+0x1a8>
    c710:	6010977a 	slli	r8,r12,29
    c714:	6026d0fa 	srli	r19,r12,3
    c718:	1000bb26 	beq	r2,zero,ca08 <__subdf3+0x6c0>
    c71c:	01480034 	movhi	r5,8192
    c720:	297fffc4 	addi	r5,r5,-1
    c724:	2146703a 	and	r3,r4,r5
    c728:	9880022c 	andhi	r2,r19,8
    c72c:	1a06b03a 	or	r3,r3,r8
    c730:	10000826 	beq	r2,zero,c754 <__subdf3+0x40c>
    c734:	5808d0fa 	srli	r4,r11,3
    c738:	2080022c 	andhi	r2,r4,8
    c73c:	1000051e 	bne	r2,zero,c754 <__subdf3+0x40c>
    c740:	5804977a 	slli	r2,r11,29
    c744:	3146703a 	and	r3,r6,r5
    c748:	3825883a 	mov	r18,r7
    c74c:	1886b03a 	or	r3,r3,r2
    c750:	2027883a 	mov	r19,r4
    c754:	1804d77a 	srli	r2,r3,29
    c758:	980890fa 	slli	r4,r19,3
    c75c:	01480034 	movhi	r5,8192
    c760:	297fffc4 	addi	r5,r5,-1
    c764:	1108b03a 	or	r4,r2,r4
    c768:	2004977a 	slli	r2,r4,29
    c76c:	2026d0fa 	srli	r19,r4,3
    c770:	1946703a 	and	r3,r3,r5
    c774:	10c4b03a 	or	r2,r2,r3
    c778:	14c6b03a 	or	r3,r2,r19
    c77c:	18014926 	beq	r3,zero,cca4 <__subdf3+0x95c>
    c780:	00c00434 	movhi	r3,16
    c784:	99000234 	orhi	r4,r19,8
    c788:	18ffffc4 	addi	r3,r3,-1
    c78c:	20c8703a 	and	r4,r4,r3
    c790:	0201ffc4 	movi	r8,2047
    c794:	003f5606 	br	c4f0 <__subdf3+0x1a8>
    c798:	00bfe034 	movhi	r2,65408
    c79c:	10bfffc4 	addi	r2,r2,-1
    c7a0:	2088703a 	and	r4,r4,r2
    c7a4:	888001cc 	andi	r2,r17,7
    c7a8:	8221c83a 	sub	r16,r16,r8
    c7ac:	103f3b1e 	bne	r2,zero,c49c <__subdf3+0x154>
    c7b0:	003fbd06 	br	c6a8 <__subdf3+0x360>
    c7b4:	8809883a 	mov	r4,r17
    c7b8:	000ceec0 	call	ceec <__clzsi2>
    c7bc:	12000604 	addi	r8,r2,24
    c7c0:	40c00808 	cmpgei	r3,r8,32
    c7c4:	183f1e26 	beq	r3,zero,c440 <__subdf3+0xf8>
    c7c8:	113ffe04 	addi	r4,r2,-8
    c7cc:	8908983a 	sll	r4,r17,r4
    c7d0:	0023883a 	mov	r17,zero
    c7d4:	003f2006 	br	c458 <__subdf3+0x110>
    c7d8:	5ba2b03a 	or	r17,r11,r14
    c7dc:	8822c03a 	cmpne	r17,r17,zero
    c7e0:	003f0b06 	br	c410 <__subdf3+0xc8>
    c7e4:	6ba3c83a 	sub	r17,r13,r14
    c7e8:	62e7c83a 	sub	r19,r12,r11
    c7ec:	6c49803a 	cmpltu	r4,r13,r17
    c7f0:	9927c83a 	sub	r19,r19,r4
    c7f4:	9880202c 	andhi	r2,r19,128
    c7f8:	1000bb1e 	bne	r2,zero,cae8 <__subdf3+0x7a0>
    c7fc:	8cc4b03a 	or	r2,r17,r19
    c800:	103f0b1e 	bne	r2,zero,c430 <__subdf3+0xe8>
    c804:	0027883a 	mov	r19,zero
    c808:	0025883a 	mov	r18,zero
    c80c:	003fad06 	br	c6c4 <__subdf3+0x37c>
    c810:	00880034 	movhi	r2,8192
    c814:	6022977a 	slli	r17,r12,29
    c818:	10bfffc4 	addi	r2,r2,-1
    c81c:	2088703a 	and	r4,r4,r2
    c820:	2444b03a 	or	r2,r4,r17
    c824:	6026d0fa 	srli	r19,r12,3
    c828:	003fa406 	br	c6bc <__subdf3+0x374>
    c82c:	00880034 	movhi	r2,8192
    c830:	6022977a 	slli	r17,r12,29
    c834:	10bfffc4 	addi	r2,r2,-1
    c838:	2088703a 	and	r4,r4,r2
    c83c:	2444b03a 	or	r2,r4,r17
    c840:	6026d0fa 	srli	r19,r12,3
    c844:	003fcc06 	br	c778 <__subdf3+0x430>
    c848:	5411c83a 	sub	r8,r10,r16
    c84c:	80004f26 	beq	r16,zero,c98c <__subdf3+0x644>
    c850:	5081ffd8 	cmpnei	r2,r10,2047
    c854:	1000b426 	beq	r2,zero,cb28 <__subdf3+0x7e0>
    c858:	63002034 	orhi	r12,r12,128
    c85c:	40800e48 	cmpgei	r2,r8,57
    c860:	1000c41e 	bne	r2,zero,cb74 <__subdf3+0x82c>
    c864:	40800808 	cmpgei	r2,r8,32
    c868:	1000f91e 	bne	r2,zero,cc50 <__subdf3+0x908>
    c86c:	00800804 	movi	r2,32
    c870:	1205c83a 	sub	r2,r2,r8
    c874:	60a2983a 	sll	r17,r12,r2
    c878:	6a06d83a 	srl	r3,r13,r8
    c87c:	6884983a 	sll	r2,r13,r2
    c880:	6210d83a 	srl	r8,r12,r8
    c884:	88e2b03a 	or	r17,r17,r3
    c888:	1004c03a 	cmpne	r2,r2,zero
    c88c:	88a2b03a 	or	r17,r17,r2
    c890:	5a17883a 	add	r11,r11,r8
    c894:	8ba3883a 	add	r17,r17,r14
    c898:	8b85803a 	cmpltu	r2,r17,r14
    c89c:	12c9883a 	add	r4,r2,r11
    c8a0:	5021883a 	mov	r16,r10
    c8a4:	003f9106 	br	c6ec <__subdf3+0x3a4>
    c8a8:	5081ffd8 	cmpnei	r2,r10,2047
    c8ac:	10006426 	beq	r2,zero,ca40 <__subdf3+0x6f8>
    c8b0:	63002034 	orhi	r12,r12,128
    c8b4:	40800e48 	cmpgei	r2,r8,57
    c8b8:	1000751e 	bne	r2,zero,ca90 <__subdf3+0x748>
    c8bc:	40800808 	cmpgei	r2,r8,32
    c8c0:	1000b61e 	bne	r2,zero,cb9c <__subdf3+0x854>
    c8c4:	00800804 	movi	r2,32
    c8c8:	1205c83a 	sub	r2,r2,r8
    c8cc:	60a2983a 	sll	r17,r12,r2
    c8d0:	6a06d83a 	srl	r3,r13,r8
    c8d4:	6884983a 	sll	r2,r13,r2
    c8d8:	6210d83a 	srl	r8,r12,r8
    c8dc:	88e2b03a 	or	r17,r17,r3
    c8e0:	1004c03a 	cmpne	r2,r2,zero
    c8e4:	88a2b03a 	or	r17,r17,r2
    c8e8:	5a17c83a 	sub	r11,r11,r8
    c8ec:	7463c83a 	sub	r17,r14,r17
    c8f0:	7445803a 	cmpltu	r2,r14,r17
    c8f4:	5889c83a 	sub	r4,r11,r2
    c8f8:	5021883a 	mov	r16,r10
    c8fc:	003ec706 	br	c41c <__subdf3+0xd4>
    c900:	423ff844 	addi	r8,r8,-31
    c904:	10c00820 	cmpeqi	r3,r2,32
    c908:	2210d83a 	srl	r8,r4,r8
    c90c:	1800041e 	bne	r3,zero,c920 <__subdf3+0x5d8>
    c910:	00c01004 	movi	r3,64
    c914:	1885c83a 	sub	r2,r3,r2
    c918:	2088983a 	sll	r4,r4,r2
    c91c:	8922b03a 	or	r17,r17,r4
    c920:	8822c03a 	cmpne	r17,r17,zero
    c924:	8a22b03a 	or	r17,r17,r8
    c928:	0009883a 	mov	r4,zero
    c92c:	0021883a 	mov	r16,zero
    c930:	003f5b06 	br	c6a0 <__subdf3+0x358>
    c934:	04000084 	movi	r16,2
    c938:	00bfe034 	movhi	r2,65408
    c93c:	10bfffc4 	addi	r2,r2,-1
    c940:	2084703a 	and	r2,r4,r2
    c944:	8806d07a 	srli	r3,r17,1
    c948:	100a97fa 	slli	r5,r2,31
    c94c:	8c40004c 	andi	r17,r17,1
    c950:	1c62b03a 	or	r17,r3,r17
    c954:	1008d07a 	srli	r4,r2,1
    c958:	2c62b03a 	or	r17,r5,r17
    c95c:	003ecd06 	br	c494 <__subdf3+0x14c>
    c960:	447ff804 	addi	r17,r8,-32
    c964:	40800820 	cmpeqi	r2,r8,32
    c968:	5c46d83a 	srl	r3,r11,r17
    c96c:	1000041e 	bne	r2,zero,c980 <__subdf3+0x638>
    c970:	00801004 	movi	r2,64
    c974:	1205c83a 	sub	r2,r2,r8
    c978:	5884983a 	sll	r2,r11,r2
    c97c:	709cb03a 	or	r14,r14,r2
    c980:	7022c03a 	cmpne	r17,r14,zero
    c984:	88e2b03a 	or	r17,r17,r3
    c988:	003ea106 	br	c410 <__subdf3+0xc8>
    c98c:	6344b03a 	or	r2,r12,r13
    c990:	1000a526 	beq	r2,zero,cc28 <__subdf3+0x8e0>
    c994:	40bfffc4 	addi	r2,r8,-1
    c998:	1000bd26 	beq	r2,zero,cc90 <__subdf3+0x948>
    c99c:	4201ffd8 	cmpnei	r8,r8,2047
    c9a0:	40006126 	beq	r8,zero,cb28 <__subdf3+0x7e0>
    c9a4:	1011883a 	mov	r8,r2
    c9a8:	003fac06 	br	c85c <__subdf3+0x514>
    c9ac:	00800804 	movi	r2,32
    c9b0:	1205c83a 	sub	r2,r2,r8
    c9b4:	58a2983a 	sll	r17,r11,r2
    c9b8:	7206d83a 	srl	r3,r14,r8
    c9bc:	709c983a 	sll	r14,r14,r2
    c9c0:	5a04d83a 	srl	r2,r11,r8
    c9c4:	88e2b03a 	or	r17,r17,r3
    c9c8:	701cc03a 	cmpne	r14,r14,zero
    c9cc:	8ba2b03a 	or	r17,r17,r14
    c9d0:	6099883a 	add	r12,r12,r2
    c9d4:	003f4206 	br	c6e0 <__subdf3+0x398>
    c9d8:	5808977a 	slli	r4,r11,29
    c9dc:	00c80034 	movhi	r3,8192
    c9e0:	18ffffc4 	addi	r3,r3,-1
    c9e4:	30cc703a 	and	r6,r6,r3
    c9e8:	2184b03a 	or	r2,r4,r6
    c9ec:	5826d0fa 	srli	r19,r11,3
    c9f0:	003f3206 	br	c6bc <__subdf3+0x374>
    c9f4:	10004c26 	beq	r2,zero,cb28 <__subdf3+0x7e0>
    c9f8:	5b9cb03a 	or	r14,r11,r14
    c9fc:	6010977a 	slli	r8,r12,29
    ca00:	6026d0fa 	srli	r19,r12,3
    ca04:	703f451e 	bne	r14,zero,c71c <__subdf3+0x3d4>
    ca08:	00880034 	movhi	r2,8192
    ca0c:	10bfffc4 	addi	r2,r2,-1
    ca10:	2084703a 	and	r2,r4,r2
    ca14:	1204b03a 	or	r2,r2,r8
    ca18:	003f5706 	br	c778 <__subdf3+0x430>
    ca1c:	103f7926 	beq	r2,zero,c804 <__subdf3+0x4bc>
    ca20:	5804977a 	slli	r2,r11,29
    ca24:	00c80034 	movhi	r3,8192
    ca28:	18ffffc4 	addi	r3,r3,-1
    ca2c:	30c6703a 	and	r3,r6,r3
    ca30:	10c4b03a 	or	r2,r2,r3
    ca34:	5826d0fa 	srli	r19,r11,3
    ca38:	3825883a 	mov	r18,r7
    ca3c:	003f2106 	br	c6c4 <__subdf3+0x37c>
    ca40:	5804977a 	slli	r2,r11,29
    ca44:	00c80034 	movhi	r3,8192
    ca48:	18ffffc4 	addi	r3,r3,-1
    ca4c:	30c6703a 	and	r3,r6,r3
    ca50:	10c4b03a 	or	r2,r2,r3
    ca54:	5826d0fa 	srli	r19,r11,3
    ca58:	003f4706 	br	c778 <__subdf3+0x430>
    ca5c:	6ba3c83a 	sub	r17,r13,r14
    ca60:	62c9c83a 	sub	r4,r12,r11
    ca64:	6c5b803a 	cmpltu	r13,r13,r17
    ca68:	2349c83a 	sub	r4,r4,r13
    ca6c:	04000044 	movi	r16,1
    ca70:	003e6a06 	br	c41c <__subdf3+0xd4>
    ca74:	6004977a 	slli	r2,r12,29
    ca78:	00c80034 	movhi	r3,8192
    ca7c:	18ffffc4 	addi	r3,r3,-1
    ca80:	20c8703a 	and	r4,r4,r3
    ca84:	1104b03a 	or	r2,r2,r4
    ca88:	6026d0fa 	srli	r19,r12,3
    ca8c:	003f0b06 	br	c6bc <__subdf3+0x374>
    ca90:	6366b03a 	or	r19,r12,r13
    ca94:	9822c03a 	cmpne	r17,r19,zero
    ca98:	003f9406 	br	c8ec <__subdf3+0x5a4>
    ca9c:	6004977a 	slli	r2,r12,29
    caa0:	00c80034 	movhi	r3,8192
    caa4:	18ffffc4 	addi	r3,r3,-1
    caa8:	20c8703a 	and	r4,r4,r3
    caac:	1104b03a 	or	r2,r2,r4
    cab0:	6026d0fa 	srli	r19,r12,3
    cab4:	003f3006 	br	c778 <__subdf3+0x430>
    cab8:	1881ffe0 	cmpeqi	r2,r3,2047
    cabc:	103f101e 	bne	r2,zero,c700 <__subdf3+0x3b8>
    cac0:	6b9d883a 	add	r14,r13,r14
    cac4:	62c9883a 	add	r4,r12,r11
    cac8:	7345803a 	cmpltu	r2,r14,r13
    cacc:	2085883a 	add	r2,r4,r2
    cad0:	102297fa 	slli	r17,r2,31
    cad4:	701cd07a 	srli	r14,r14,1
    cad8:	1008d07a 	srli	r4,r2,1
    cadc:	1821883a 	mov	r16,r3
    cae0:	8ba2b03a 	or	r17,r17,r14
    cae4:	003eee06 	br	c6a0 <__subdf3+0x358>
    cae8:	7363c83a 	sub	r17,r14,r13
    caec:	5b09c83a 	sub	r4,r11,r12
    caf0:	7467803a 	cmpltu	r19,r14,r17
    caf4:	24e7c83a 	sub	r19,r4,r19
    caf8:	3825883a 	mov	r18,r7
    cafc:	003e4c06 	br	c430 <__subdf3+0xe8>
    cb00:	183f031e 	bne	r3,zero,c710 <__subdf3+0x3c8>
    cb04:	10005d26 	beq	r2,zero,cc7c <__subdf3+0x934>
    cb08:	00880034 	movhi	r2,8192
    cb0c:	5806977a 	slli	r3,r11,29
    cb10:	10bfffc4 	addi	r2,r2,-1
    cb14:	3084703a 	and	r2,r6,r2
    cb18:	10c4b03a 	or	r2,r2,r3
    cb1c:	5826d0fa 	srli	r19,r11,3
    cb20:	3825883a 	mov	r18,r7
    cb24:	003f1406 	br	c778 <__subdf3+0x430>
    cb28:	00880034 	movhi	r2,8192
    cb2c:	5806977a 	slli	r3,r11,29
    cb30:	10bfffc4 	addi	r2,r2,-1
    cb34:	3084703a 	and	r2,r6,r2
    cb38:	10c4b03a 	or	r2,r2,r3
    cb3c:	5826d0fa 	srli	r19,r11,3
    cb40:	003f0d06 	br	c778 <__subdf3+0x430>
    cb44:	6ba3c83a 	sub	r17,r13,r14
    cb48:	62c5c83a 	sub	r2,r12,r11
    cb4c:	6c49803a 	cmpltu	r4,r13,r17
    cb50:	1109c83a 	sub	r4,r2,r4
    cb54:	2080202c 	andhi	r2,r4,128
    cb58:	10003a26 	beq	r2,zero,cc44 <__subdf3+0x8fc>
    cb5c:	7363c83a 	sub	r17,r14,r13
    cb60:	5b09c83a 	sub	r4,r11,r12
    cb64:	745d803a 	cmpltu	r14,r14,r17
    cb68:	2389c83a 	sub	r4,r4,r14
    cb6c:	3825883a 	mov	r18,r7
    cb70:	003e4806 	br	c494 <__subdf3+0x14c>
    cb74:	6362b03a 	or	r17,r12,r13
    cb78:	8822c03a 	cmpne	r17,r17,zero
    cb7c:	003f4506 	br	c894 <__subdf3+0x54c>
    cb80:	6004977a 	slli	r2,r12,29
    cb84:	00c80034 	movhi	r3,8192
    cb88:	18ffffc4 	addi	r3,r3,-1
    cb8c:	20c6703a 	and	r3,r4,r3
    cb90:	10c4b03a 	or	r2,r2,r3
    cb94:	6026d0fa 	srli	r19,r12,3
    cb98:	003ef706 	br	c778 <__subdf3+0x430>
    cb9c:	40bff804 	addi	r2,r8,-32
    cba0:	40c00820 	cmpeqi	r3,r8,32
    cba4:	6084d83a 	srl	r2,r12,r2
    cba8:	1800041e 	bne	r3,zero,cbbc <__subdf3+0x874>
    cbac:	04c01004 	movi	r19,64
    cbb0:	9a11c83a 	sub	r8,r19,r8
    cbb4:	6226983a 	sll	r19,r12,r8
    cbb8:	6cdab03a 	or	r13,r13,r19
    cbbc:	6822c03a 	cmpne	r17,r13,zero
    cbc0:	88a2b03a 	or	r17,r17,r2
    cbc4:	003f4906 	br	c8ec <__subdf3+0x5a4>
    cbc8:	7363c83a 	sub	r17,r14,r13
    cbcc:	5b09c83a 	sub	r4,r11,r12
    cbd0:	745d803a 	cmpltu	r14,r14,r17
    cbd4:	2389c83a 	sub	r4,r4,r14
    cbd8:	04000044 	movi	r16,1
    cbdc:	003e0f06 	br	c41c <__subdf3+0xd4>
    cbe0:	00880034 	movhi	r2,8192
    cbe4:	5806977a 	slli	r3,r11,29
    cbe8:	10bfffc4 	addi	r2,r2,-1
    cbec:	3084703a 	and	r2,r6,r2
    cbf0:	10c4b03a 	or	r2,r2,r3
    cbf4:	5826d0fa 	srli	r19,r11,3
    cbf8:	003eb206 	br	c6c4 <__subdf3+0x37c>
    cbfc:	6ba3883a 	add	r17,r13,r14
    cc00:	62c9883a 	add	r4,r12,r11
    cc04:	8b5b803a 	cmpltu	r13,r17,r13
    cc08:	2349883a 	add	r4,r4,r13
    cc0c:	2080202c 	andhi	r2,r4,128
    cc10:	103ea326 	beq	r2,zero,c6a0 <__subdf3+0x358>
    cc14:	00bfe034 	movhi	r2,65408
    cc18:	10bfffc4 	addi	r2,r2,-1
    cc1c:	2088703a 	and	r4,r4,r2
    cc20:	04000044 	movi	r16,1
    cc24:	003e9e06 	br	c6a0 <__subdf3+0x358>
    cc28:	00880034 	movhi	r2,8192
    cc2c:	5806977a 	slli	r3,r11,29
    cc30:	10bfffc4 	addi	r2,r2,-1
    cc34:	3084703a 	and	r2,r6,r2
    cc38:	10c4b03a 	or	r2,r2,r3
    cc3c:	5826d0fa 	srli	r19,r11,3
    cc40:	003e9e06 	br	c6bc <__subdf3+0x374>
    cc44:	8904b03a 	or	r2,r17,r4
    cc48:	103eee26 	beq	r2,zero,c804 <__subdf3+0x4bc>
    cc4c:	003e9406 	br	c6a0 <__subdf3+0x358>
    cc50:	40bff804 	addi	r2,r8,-32
    cc54:	40c00820 	cmpeqi	r3,r8,32
    cc58:	6084d83a 	srl	r2,r12,r2
    cc5c:	1800041e 	bne	r3,zero,cc70 <__subdf3+0x928>
    cc60:	04c01004 	movi	r19,64
    cc64:	9a11c83a 	sub	r8,r19,r8
    cc68:	6226983a 	sll	r19,r12,r8
    cc6c:	6cdab03a 	or	r13,r13,r19
    cc70:	6822c03a 	cmpne	r17,r13,zero
    cc74:	88a2b03a 	or	r17,r17,r2
    cc78:	003f0606 	br	c894 <__subdf3+0x54c>
    cc7c:	04c00434 	movhi	r19,16
    cc80:	9cffffc4 	addi	r19,r19,-1
    cc84:	0025883a 	mov	r18,zero
    cc88:	00bfffc4 	movi	r2,-1
    cc8c:	003ebc06 	br	c780 <__subdf3+0x438>
    cc90:	6ba3883a 	add	r17,r13,r14
    cc94:	62c9883a 	add	r4,r12,r11
    cc98:	8b9d803a 	cmpltu	r14,r17,r14
    cc9c:	2389883a 	add	r4,r4,r14
    cca0:	003e7c06 	br	c694 <__subdf3+0x34c>
    cca4:	0005883a 	mov	r2,zero
    cca8:	0201ffc4 	movi	r8,2047
    ccac:	0009883a 	mov	r4,zero
    ccb0:	003e0f06 	br	c4f0 <__subdf3+0x1a8>

0000ccb4 <__unorddf2>:
    ccb4:	2806d53a 	srli	r3,r5,20
    ccb8:	3810d53a 	srli	r8,r7,20
    ccbc:	00800434 	movhi	r2,16
    ccc0:	18c1ffcc 	andi	r3,r3,2047
    ccc4:	10bfffc4 	addi	r2,r2,-1
    ccc8:	18c1ffd8 	cmpnei	r3,r3,2047
    cccc:	288a703a 	and	r5,r5,r2
    ccd0:	388e703a 	and	r7,r7,r2
    ccd4:	4201ffcc 	andi	r8,r8,2047
    ccd8:	18000426 	beq	r3,zero,ccec <__unorddf2+0x38>
    ccdc:	4201ffd8 	cmpnei	r8,r8,2047
    cce0:	40000626 	beq	r8,zero,ccfc <__unorddf2+0x48>
    cce4:	0005883a 	mov	r2,zero
    cce8:	f800283a 	ret
    ccec:	214ab03a 	or	r5,r4,r5
    ccf0:	283ffa26 	beq	r5,zero,ccdc <__unorddf2+0x28>
    ccf4:	00800044 	movi	r2,1
    ccf8:	f800283a 	ret
    ccfc:	398eb03a 	or	r7,r7,r6
    cd00:	3804c03a 	cmpne	r2,r7,zero
    cd04:	f800283a 	ret

0000cd08 <__fixdfsi>:
    cd08:	280cd53a 	srli	r6,r5,20
    cd0c:	00c00434 	movhi	r3,16
    cd10:	18ffffc4 	addi	r3,r3,-1
    cd14:	3181ffcc 	andi	r6,r6,2047
    cd18:	31c0ffd0 	cmplti	r7,r6,1023
    cd1c:	28c6703a 	and	r3,r5,r3
    cd20:	280ad7fa 	srli	r5,r5,31
    cd24:	3800061e 	bne	r7,zero,cd40 <__fixdfsi+0x38>
    cd28:	30810790 	cmplti	r2,r6,1054
    cd2c:	1000061e 	bne	r2,zero,cd48 <__fixdfsi+0x40>
    cd30:	00a00034 	movhi	r2,32768
    cd34:	10bfffc4 	addi	r2,r2,-1
    cd38:	2885883a 	add	r2,r5,r2
    cd3c:	f800283a 	ret
    cd40:	0005883a 	mov	r2,zero
    cd44:	f800283a 	ret
    cd48:	00810cc4 	movi	r2,1075
    cd4c:	118fc83a 	sub	r7,r2,r6
    cd50:	38800808 	cmpgei	r2,r7,32
    cd54:	18c00434 	orhi	r3,r3,16
    cd58:	1000071e 	bne	r2,zero,cd78 <__fixdfsi+0x70>
    cd5c:	30befb44 	addi	r2,r6,-1043
    cd60:	1886983a 	sll	r3,r3,r2
    cd64:	21c4d83a 	srl	r2,r4,r7
    cd68:	1884b03a 	or	r2,r3,r2
    cd6c:	283ff526 	beq	r5,zero,cd44 <__fixdfsi+0x3c>
    cd70:	0085c83a 	sub	r2,zero,r2
    cd74:	f800283a 	ret
    cd78:	008104c4 	movi	r2,1043
    cd7c:	1185c83a 	sub	r2,r2,r6
    cd80:	1884d83a 	srl	r2,r3,r2
    cd84:	003ff906 	br	cd6c <__fixdfsi+0x64>

0000cd88 <__floatsidf>:
    cd88:	defffd04 	addi	sp,sp,-12
    cd8c:	dfc00215 	stw	ra,8(sp)
    cd90:	dc400115 	stw	r17,4(sp)
    cd94:	dc000015 	stw	r16,0(sp)
    cd98:	20001326 	beq	r4,zero,cde8 <__floatsidf+0x60>
    cd9c:	2021883a 	mov	r16,r4
    cda0:	2022d7fa 	srli	r17,r4,31
    cda4:	20002116 	blt	r4,zero,ce2c <__floatsidf+0xa4>
    cda8:	8009883a 	mov	r4,r16
    cdac:	000ceec0 	call	ceec <__clzsi2>
    cdb0:	01010784 	movi	r4,1054
    cdb4:	2089c83a 	sub	r4,r4,r2
    cdb8:	10c002c8 	cmpgei	r3,r2,11
    cdbc:	2101ffcc 	andi	r4,r4,2047
    cdc0:	18001c1e 	bne	r3,zero,ce34 <__floatsidf+0xac>
    cdc4:	018002c4 	movi	r6,11
    cdc8:	308dc83a 	sub	r6,r6,r2
    cdcc:	818ad83a 	srl	r5,r16,r6
    cdd0:	00c00434 	movhi	r3,16
    cdd4:	10800544 	addi	r2,r2,21
    cdd8:	18ffffc4 	addi	r3,r3,-1
    cddc:	8084983a 	sll	r2,r16,r2
    cde0:	28ca703a 	and	r5,r5,r3
    cde4:	00000406 	br	cdf8 <__floatsidf+0x70>
    cde8:	0023883a 	mov	r17,zero
    cdec:	0009883a 	mov	r4,zero
    cdf0:	000b883a 	mov	r5,zero
    cdf4:	0005883a 	mov	r2,zero
    cdf8:	2008953a 	slli	r4,r4,20
    cdfc:	8c403fcc 	andi	r17,r17,255
    ce00:	01800434 	movhi	r6,16
    ce04:	31bfffc4 	addi	r6,r6,-1
    ce08:	880697fa 	slli	r3,r17,31
    ce0c:	298a703a 	and	r5,r5,r6
    ce10:	290ab03a 	or	r5,r5,r4
    ce14:	28c6b03a 	or	r3,r5,r3
    ce18:	dfc00217 	ldw	ra,8(sp)
    ce1c:	dc400117 	ldw	r17,4(sp)
    ce20:	dc000017 	ldw	r16,0(sp)
    ce24:	dec00304 	addi	sp,sp,12
    ce28:	f800283a 	ret
    ce2c:	0121c83a 	sub	r16,zero,r4
    ce30:	003fdd06 	br	cda8 <__floatsidf+0x20>
    ce34:	10bffd44 	addi	r2,r2,-11
    ce38:	808a983a 	sll	r5,r16,r2
    ce3c:	00800434 	movhi	r2,16
    ce40:	10bfffc4 	addi	r2,r2,-1
    ce44:	288a703a 	and	r5,r5,r2
    ce48:	0005883a 	mov	r2,zero
    ce4c:	003fea06 	br	cdf8 <__floatsidf+0x70>

0000ce50 <__floatunsidf>:
    ce50:	defffe04 	addi	sp,sp,-8
    ce54:	dc000015 	stw	r16,0(sp)
    ce58:	dfc00115 	stw	ra,4(sp)
    ce5c:	2021883a 	mov	r16,r4
    ce60:	20000f26 	beq	r4,zero,cea0 <__floatunsidf+0x50>
    ce64:	000ceec0 	call	ceec <__clzsi2>
    ce68:	01010784 	movi	r4,1054
    ce6c:	2089c83a 	sub	r4,r4,r2
    ce70:	10c002c8 	cmpgei	r3,r2,11
    ce74:	2101ffcc 	andi	r4,r4,2047
    ce78:	1800151e 	bne	r3,zero,ced0 <__floatunsidf+0x80>
    ce7c:	00c002c4 	movi	r3,11
    ce80:	1887c83a 	sub	r3,r3,r2
    ce84:	80c6d83a 	srl	r3,r16,r3
    ce88:	01400434 	movhi	r5,16
    ce8c:	10800544 	addi	r2,r2,21
    ce90:	297fffc4 	addi	r5,r5,-1
    ce94:	80a0983a 	sll	r16,r16,r2
    ce98:	1944703a 	and	r2,r3,r5
    ce9c:	00000206 	br	cea8 <__floatunsidf+0x58>
    cea0:	0009883a 	mov	r4,zero
    cea4:	0005883a 	mov	r2,zero
    cea8:	2008953a 	slli	r4,r4,20
    ceac:	00c00434 	movhi	r3,16
    ceb0:	18ffffc4 	addi	r3,r3,-1
    ceb4:	10c6703a 	and	r3,r2,r3
    ceb8:	1906b03a 	or	r3,r3,r4
    cebc:	8005883a 	mov	r2,r16
    cec0:	dfc00117 	ldw	ra,4(sp)
    cec4:	dc000017 	ldw	r16,0(sp)
    cec8:	dec00204 	addi	sp,sp,8
    cecc:	f800283a 	ret
    ced0:	10bffd44 	addi	r2,r2,-11
    ced4:	8084983a 	sll	r2,r16,r2
    ced8:	00c00434 	movhi	r3,16
    cedc:	18ffffc4 	addi	r3,r3,-1
    cee0:	10c4703a 	and	r2,r2,r3
    cee4:	0021883a 	mov	r16,zero
    cee8:	003fef06 	br	cea8 <__floatunsidf+0x58>

0000ceec <__clzsi2>:
    ceec:	00bfffd4 	movui	r2,65535
    cef0:	11000b36 	bltu	r2,r4,cf20 <__clzsi2+0x34>
    cef4:	20804030 	cmpltui	r2,r4,256
    cef8:	1000071e 	bne	r2,zero,cf18 <__clzsi2+0x2c>
    cefc:	2008d23a 	srli	r4,r4,8
    cf00:	01400604 	movi	r5,24
    cf04:	00c00074 	movhi	r3,1
    cf08:	20c7883a 	add	r3,r4,r3
    cf0c:	18be9343 	ldbu	r2,-1459(r3)
    cf10:	2885c83a 	sub	r2,r5,r2
    cf14:	f800283a 	ret
    cf18:	01400804 	movi	r5,32
    cf1c:	003ff906 	br	cf04 <__clzsi2+0x18>
    cf20:	00804034 	movhi	r2,256
    cf24:	20800336 	bltu	r4,r2,cf34 <__clzsi2+0x48>
    cf28:	2008d63a 	srli	r4,r4,24
    cf2c:	01400204 	movi	r5,8
    cf30:	003ff406 	br	cf04 <__clzsi2+0x18>
    cf34:	2008d43a 	srli	r4,r4,16
    cf38:	01400404 	movi	r5,16
    cf3c:	003ff106 	br	cf04 <__clzsi2+0x18>

0000cf40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cf40:	defffe04 	addi	sp,sp,-8
    cf44:	dfc00115 	stw	ra,4(sp)
    cf48:	df000015 	stw	fp,0(sp)
    cf4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cf50:	d0a00e17 	ldw	r2,-32712(gp)
    cf54:	10000326 	beq	r2,zero,cf64 <alt_get_errno+0x24>
    cf58:	d0a00e17 	ldw	r2,-32712(gp)
    cf5c:	103ee83a 	callr	r2
    cf60:	00000106 	br	cf68 <alt_get_errno+0x28>
    cf64:	d0a73604 	addi	r2,gp,-25384
}
    cf68:	e037883a 	mov	sp,fp
    cf6c:	dfc00117 	ldw	ra,4(sp)
    cf70:	df000017 	ldw	fp,0(sp)
    cf74:	dec00204 	addi	sp,sp,8
    cf78:	f800283a 	ret

0000cf7c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    cf7c:	defffb04 	addi	sp,sp,-20
    cf80:	dfc00415 	stw	ra,16(sp)
    cf84:	df000315 	stw	fp,12(sp)
    cf88:	df000304 	addi	fp,sp,12
    cf8c:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    cf90:	e0bffd17 	ldw	r2,-12(fp)
    cf94:	10000916 	blt	r2,zero,cfbc <close+0x40>
    cf98:	e0fffd17 	ldw	r3,-12(fp)
    cf9c:	1805883a 	mov	r2,r3
    cfa0:	1085883a 	add	r2,r2,r2
    cfa4:	10c5883a 	add	r2,r2,r3
    cfa8:	100490ba 	slli	r2,r2,2
    cfac:	00c00074 	movhi	r3,1
    cfb0:	18c17404 	addi	r3,r3,1488
    cfb4:	10c5883a 	add	r2,r2,r3
    cfb8:	00000106 	br	cfc0 <close+0x44>
    cfbc:	0005883a 	mov	r2,zero
    cfc0:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
    cfc4:	e0bfff17 	ldw	r2,-4(fp)
    cfc8:	10001926 	beq	r2,zero,d030 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    cfcc:	e0bfff17 	ldw	r2,-4(fp)
    cfd0:	10800017 	ldw	r2,0(r2)
    cfd4:	10800417 	ldw	r2,16(r2)
    cfd8:	10000626 	beq	r2,zero,cff4 <close+0x78>
    cfdc:	e0bfff17 	ldw	r2,-4(fp)
    cfe0:	10800017 	ldw	r2,0(r2)
    cfe4:	10800417 	ldw	r2,16(r2)
    cfe8:	e13fff17 	ldw	r4,-4(fp)
    cfec:	103ee83a 	callr	r2
    cff0:	00000106 	br	cff8 <close+0x7c>
    cff4:	0005883a 	mov	r2,zero
    cff8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    cffc:	e13ffd17 	ldw	r4,-12(fp)
    d000:	000d6780 	call	d678 <alt_release_fd>
    if (rval < 0)
    d004:	e0bffe17 	ldw	r2,-8(fp)
    d008:	1000070e 	bge	r2,zero,d028 <close+0xac>
    {
      ALT_ERRNO = -rval;
    d00c:	000cf400 	call	cf40 <alt_get_errno>
    d010:	1007883a 	mov	r3,r2
    d014:	e0bffe17 	ldw	r2,-8(fp)
    d018:	0085c83a 	sub	r2,zero,r2
    d01c:	18800015 	stw	r2,0(r3)
      return -1;
    d020:	00bfffc4 	movi	r2,-1
    d024:	00000706 	br	d044 <close+0xc8>
    }
    return 0;
    d028:	0005883a 	mov	r2,zero
    d02c:	00000506 	br	d044 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d030:	000cf400 	call	cf40 <alt_get_errno>
    d034:	1007883a 	mov	r3,r2
    d038:	00801444 	movi	r2,81
    d03c:	18800015 	stw	r2,0(r3)
    return -1;
    d040:	00bfffc4 	movi	r2,-1
  }
}
    d044:	e037883a 	mov	sp,fp
    d048:	dfc00117 	ldw	ra,4(sp)
    d04c:	df000017 	ldw	fp,0(sp)
    d050:	dec00204 	addi	sp,sp,8
    d054:	f800283a 	ret

0000d058 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d058:	defffc04 	addi	sp,sp,-16
    d05c:	df000315 	stw	fp,12(sp)
    d060:	df000304 	addi	fp,sp,12
    d064:	e13fff15 	stw	r4,-4(fp)
    d068:	e17ffe15 	stw	r5,-8(fp)
    d06c:	e1bffd15 	stw	r6,-12(fp)
  return len;
    d070:	e0bffd17 	ldw	r2,-12(fp)
}
    d074:	e037883a 	mov	sp,fp
    d078:	df000017 	ldw	fp,0(sp)
    d07c:	dec00104 	addi	sp,sp,4
    d080:	f800283a 	ret

0000d084 <alt_get_errno>:
{
    d084:	defffe04 	addi	sp,sp,-8
    d088:	dfc00115 	stw	ra,4(sp)
    d08c:	df000015 	stw	fp,0(sp)
    d090:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d094:	d0a00e17 	ldw	r2,-32712(gp)
    d098:	10000326 	beq	r2,zero,d0a8 <alt_get_errno+0x24>
    d09c:	d0a00e17 	ldw	r2,-32712(gp)
    d0a0:	103ee83a 	callr	r2
    d0a4:	00000106 	br	d0ac <alt_get_errno+0x28>
    d0a8:	d0a73604 	addi	r2,gp,-25384
}
    d0ac:	e037883a 	mov	sp,fp
    d0b0:	dfc00117 	ldw	ra,4(sp)
    d0b4:	df000017 	ldw	fp,0(sp)
    d0b8:	dec00204 	addi	sp,sp,8
    d0bc:	f800283a 	ret

0000d0c0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d0c0:	defffb04 	addi	sp,sp,-20
    d0c4:	dfc00415 	stw	ra,16(sp)
    d0c8:	df000315 	stw	fp,12(sp)
    d0cc:	df000304 	addi	fp,sp,12
    d0d0:	e13ffe15 	stw	r4,-8(fp)
    d0d4:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d0d8:	e0bffe17 	ldw	r2,-8(fp)
    d0dc:	10000916 	blt	r2,zero,d104 <fstat+0x44>
    d0e0:	e0fffe17 	ldw	r3,-8(fp)
    d0e4:	1805883a 	mov	r2,r3
    d0e8:	1085883a 	add	r2,r2,r2
    d0ec:	10c5883a 	add	r2,r2,r3
    d0f0:	100490ba 	slli	r2,r2,2
    d0f4:	00c00074 	movhi	r3,1
    d0f8:	18c17404 	addi	r3,r3,1488
    d0fc:	10c5883a 	add	r2,r2,r3
    d100:	00000106 	br	d108 <fstat+0x48>
    d104:	0005883a 	mov	r2,zero
    d108:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d10c:	e0bfff17 	ldw	r2,-4(fp)
    d110:	10001026 	beq	r2,zero,d154 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d114:	e0bfff17 	ldw	r2,-4(fp)
    d118:	10800017 	ldw	r2,0(r2)
    d11c:	10800817 	ldw	r2,32(r2)
    d120:	10000726 	beq	r2,zero,d140 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
    d124:	e0bfff17 	ldw	r2,-4(fp)
    d128:	10800017 	ldw	r2,0(r2)
    d12c:	10800817 	ldw	r2,32(r2)
    d130:	e17ffd17 	ldw	r5,-12(fp)
    d134:	e13fff17 	ldw	r4,-4(fp)
    d138:	103ee83a 	callr	r2
    d13c:	00000a06 	br	d168 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d140:	e0bffd17 	ldw	r2,-12(fp)
    d144:	00c80004 	movi	r3,8192
    d148:	10c00115 	stw	r3,4(r2)
      return 0;
    d14c:	0005883a 	mov	r2,zero
    d150:	00000506 	br	d168 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d154:	000d0840 	call	d084 <alt_get_errno>
    d158:	1007883a 	mov	r3,r2
    d15c:	00801444 	movi	r2,81
    d160:	18800015 	stw	r2,0(r3)
    return -1;
    d164:	00bfffc4 	movi	r2,-1
  }
}
    d168:	e037883a 	mov	sp,fp
    d16c:	dfc00117 	ldw	ra,4(sp)
    d170:	df000017 	ldw	fp,0(sp)
    d174:	dec00204 	addi	sp,sp,8
    d178:	f800283a 	ret

0000d17c <alt_get_errno>:
{
    d17c:	defffe04 	addi	sp,sp,-8
    d180:	dfc00115 	stw	ra,4(sp)
    d184:	df000015 	stw	fp,0(sp)
    d188:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d18c:	d0a00e17 	ldw	r2,-32712(gp)
    d190:	10000326 	beq	r2,zero,d1a0 <alt_get_errno+0x24>
    d194:	d0a00e17 	ldw	r2,-32712(gp)
    d198:	103ee83a 	callr	r2
    d19c:	00000106 	br	d1a4 <alt_get_errno+0x28>
    d1a0:	d0a73604 	addi	r2,gp,-25384
}
    d1a4:	e037883a 	mov	sp,fp
    d1a8:	dfc00117 	ldw	ra,4(sp)
    d1ac:	df000017 	ldw	fp,0(sp)
    d1b0:	dec00204 	addi	sp,sp,8
    d1b4:	f800283a 	ret

0000d1b8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d1b8:	deffea04 	addi	sp,sp,-88
    d1bc:	dfc01515 	stw	ra,84(sp)
    d1c0:	df001415 	stw	fp,80(sp)
    d1c4:	df001404 	addi	fp,sp,80
    d1c8:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d1cc:	e0bfec17 	ldw	r2,-80(fp)
    d1d0:	10000916 	blt	r2,zero,d1f8 <isatty+0x40>
    d1d4:	e0ffec17 	ldw	r3,-80(fp)
    d1d8:	1805883a 	mov	r2,r3
    d1dc:	1085883a 	add	r2,r2,r2
    d1e0:	10c5883a 	add	r2,r2,r3
    d1e4:	100490ba 	slli	r2,r2,2
    d1e8:	00c00074 	movhi	r3,1
    d1ec:	18c17404 	addi	r3,r3,1488
    d1f0:	10c5883a 	add	r2,r2,r3
    d1f4:	00000106 	br	d1fc <isatty+0x44>
    d1f8:	0005883a 	mov	r2,zero
    d1fc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d200:	e0bfff17 	ldw	r2,-4(fp)
    d204:	10000e26 	beq	r2,zero,d240 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d208:	e0bfff17 	ldw	r2,-4(fp)
    d20c:	10800017 	ldw	r2,0(r2)
    d210:	10800817 	ldw	r2,32(r2)
    d214:	1000021e 	bne	r2,zero,d220 <isatty+0x68>
    {
      return 1;
    d218:	00800044 	movi	r2,1
    d21c:	00000d06 	br	d254 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d220:	e0bfed04 	addi	r2,fp,-76
    d224:	100b883a 	mov	r5,r2
    d228:	e13fec17 	ldw	r4,-80(fp)
    d22c:	000d0c00 	call	d0c0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d230:	e0bfee17 	ldw	r2,-72(fp)
    d234:	10880020 	cmpeqi	r2,r2,8192
    d238:	10803fcc 	andi	r2,r2,255
    d23c:	00000506 	br	d254 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d240:	000d17c0 	call	d17c <alt_get_errno>
    d244:	1007883a 	mov	r3,r2
    d248:	00801444 	movi	r2,81
    d24c:	18800015 	stw	r2,0(r3)
    return 0;
    d250:	0005883a 	mov	r2,zero
  }
}
    d254:	e037883a 	mov	sp,fp
    d258:	dfc00117 	ldw	ra,4(sp)
    d25c:	df000017 	ldw	fp,0(sp)
    d260:	dec00204 	addi	sp,sp,8
    d264:	f800283a 	ret

0000d268 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d268:	defffc04 	addi	sp,sp,-16
    d26c:	df000315 	stw	fp,12(sp)
    d270:	df000304 	addi	fp,sp,12
    d274:	e13fff15 	stw	r4,-4(fp)
    d278:	e17ffe15 	stw	r5,-8(fp)
    d27c:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
    d280:	e0fffe17 	ldw	r3,-8(fp)
    d284:	e0bfff17 	ldw	r2,-4(fp)
    d288:	18800c26 	beq	r3,r2,d2bc <alt_load_section+0x54>
  {
    while( to != end )
    d28c:	00000806 	br	d2b0 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d290:	e0ffff17 	ldw	r3,-4(fp)
    d294:	18800104 	addi	r2,r3,4
    d298:	e0bfff15 	stw	r2,-4(fp)
    d29c:	e0bffe17 	ldw	r2,-8(fp)
    d2a0:	11000104 	addi	r4,r2,4
    d2a4:	e13ffe15 	stw	r4,-8(fp)
    d2a8:	18c00017 	ldw	r3,0(r3)
    d2ac:	10c00015 	stw	r3,0(r2)
    while( to != end )
    d2b0:	e0fffe17 	ldw	r3,-8(fp)
    d2b4:	e0bffd17 	ldw	r2,-12(fp)
    d2b8:	18bff51e 	bne	r3,r2,d290 <alt_load_section+0x28>
    }
  }
}
    d2bc:	0001883a 	nop
    d2c0:	e037883a 	mov	sp,fp
    d2c4:	df000017 	ldw	fp,0(sp)
    d2c8:	dec00104 	addi	sp,sp,4
    d2cc:	f800283a 	ret

0000d2d0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d2d0:	defffe04 	addi	sp,sp,-8
    d2d4:	dfc00115 	stw	ra,4(sp)
    d2d8:	df000015 	stw	fp,0(sp)
    d2dc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d2e0:	01800074 	movhi	r6,1
    d2e4:	3185ff04 	addi	r6,r6,6140
    d2e8:	01400074 	movhi	r5,1
    d2ec:	297ee104 	addi	r5,r5,-1148
    d2f0:	01000074 	movhi	r4,1
    d2f4:	2105ff04 	addi	r4,r4,6140
    d2f8:	000d2680 	call	d268 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d2fc:	01800034 	movhi	r6,0
    d300:	31808904 	addi	r6,r6,548
    d304:	01400034 	movhi	r5,0
    d308:	29400804 	addi	r5,r5,32
    d30c:	01000034 	movhi	r4,0
    d310:	21000804 	addi	r4,r4,32
    d314:	000d2680 	call	d268 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d318:	01800074 	movhi	r6,1
    d31c:	31bee104 	addi	r6,r6,-1148
    d320:	01400074 	movhi	r5,1
    d324:	297d2e04 	addi	r5,r5,-2888
    d328:	01000074 	movhi	r4,1
    d32c:	213d2e04 	addi	r4,r4,-2888
    d330:	000d2680 	call	d268 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d334:	000e51c0 	call	e51c <alt_dcache_flush_all>
  alt_icache_flush_all();
    d338:	000e6dc0 	call	e6dc <alt_icache_flush_all>
}
    d33c:	0001883a 	nop
    d340:	e037883a 	mov	sp,fp
    d344:	dfc00117 	ldw	ra,4(sp)
    d348:	df000017 	ldw	fp,0(sp)
    d34c:	dec00204 	addi	sp,sp,8
    d350:	f800283a 	ret

0000d354 <alt_get_errno>:
{
    d354:	defffe04 	addi	sp,sp,-8
    d358:	dfc00115 	stw	ra,4(sp)
    d35c:	df000015 	stw	fp,0(sp)
    d360:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d364:	d0a00e17 	ldw	r2,-32712(gp)
    d368:	10000326 	beq	r2,zero,d378 <alt_get_errno+0x24>
    d36c:	d0a00e17 	ldw	r2,-32712(gp)
    d370:	103ee83a 	callr	r2
    d374:	00000106 	br	d37c <alt_get_errno+0x28>
    d378:	d0a73604 	addi	r2,gp,-25384
}
    d37c:	e037883a 	mov	sp,fp
    d380:	dfc00117 	ldw	ra,4(sp)
    d384:	df000017 	ldw	fp,0(sp)
    d388:	dec00204 	addi	sp,sp,8
    d38c:	f800283a 	ret

0000d390 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d390:	defff904 	addi	sp,sp,-28
    d394:	dfc00615 	stw	ra,24(sp)
    d398:	df000515 	stw	fp,20(sp)
    d39c:	df000504 	addi	fp,sp,20
    d3a0:	e13ffd15 	stw	r4,-12(fp)
    d3a4:	e17ffc15 	stw	r5,-16(fp)
    d3a8:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d3ac:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d3b0:	e0bffd17 	ldw	r2,-12(fp)
    d3b4:	10000916 	blt	r2,zero,d3dc <lseek+0x4c>
    d3b8:	e0fffd17 	ldw	r3,-12(fp)
    d3bc:	1805883a 	mov	r2,r3
    d3c0:	1085883a 	add	r2,r2,r2
    d3c4:	10c5883a 	add	r2,r2,r3
    d3c8:	100490ba 	slli	r2,r2,2
    d3cc:	00c00074 	movhi	r3,1
    d3d0:	18c17404 	addi	r3,r3,1488
    d3d4:	10c5883a 	add	r2,r2,r3
    d3d8:	00000106 	br	d3e0 <lseek+0x50>
    d3dc:	0005883a 	mov	r2,zero
    d3e0:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
    d3e4:	e0bffe17 	ldw	r2,-8(fp)
    d3e8:	10001026 	beq	r2,zero,d42c <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d3ec:	e0bffe17 	ldw	r2,-8(fp)
    d3f0:	10800017 	ldw	r2,0(r2)
    d3f4:	10800717 	ldw	r2,28(r2)
    d3f8:	10000926 	beq	r2,zero,d420 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d3fc:	e0bffe17 	ldw	r2,-8(fp)
    d400:	10800017 	ldw	r2,0(r2)
    d404:	10800717 	ldw	r2,28(r2)
    d408:	e1bffb17 	ldw	r6,-20(fp)
    d40c:	e17ffc17 	ldw	r5,-16(fp)
    d410:	e13ffe17 	ldw	r4,-8(fp)
    d414:	103ee83a 	callr	r2
    d418:	e0bfff15 	stw	r2,-4(fp)
    d41c:	00000506 	br	d434 <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d420:	00bfde84 	movi	r2,-134
    d424:	e0bfff15 	stw	r2,-4(fp)
    d428:	00000206 	br	d434 <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
    d42c:	00bfebc4 	movi	r2,-81
    d430:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
    d434:	e0bfff17 	ldw	r2,-4(fp)
    d438:	1000070e 	bge	r2,zero,d458 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
    d43c:	000d3540 	call	d354 <alt_get_errno>
    d440:	1007883a 	mov	r3,r2
    d444:	e0bfff17 	ldw	r2,-4(fp)
    d448:	0085c83a 	sub	r2,zero,r2
    d44c:	18800015 	stw	r2,0(r3)
    rc = -1;
    d450:	00bfffc4 	movi	r2,-1
    d454:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
    d458:	e0bfff17 	ldw	r2,-4(fp)
}
    d45c:	e037883a 	mov	sp,fp
    d460:	dfc00117 	ldw	ra,4(sp)
    d464:	df000017 	ldw	fp,0(sp)
    d468:	dec00204 	addi	sp,sp,8
    d46c:	f800283a 	ret

0000d470 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d470:	defffd04 	addi	sp,sp,-12
    d474:	dfc00215 	stw	ra,8(sp)
    d478:	df000115 	stw	fp,4(sp)
    d47c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d480:	0009883a 	mov	r4,zero
    d484:	000d90c0 	call	d90c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d488:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d48c:	000d9440 	call	d944 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d490:	01800074 	movhi	r6,1
    d494:	31bed704 	addi	r6,r6,-1188
    d498:	01400074 	movhi	r5,1
    d49c:	297ed704 	addi	r5,r5,-1188
    d4a0:	01000074 	movhi	r4,1
    d4a4:	213ed704 	addi	r4,r4,-1188
    d4a8:	000ea640 	call	ea64 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d4ac:	000e61c0 	call	e61c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d4b0:	01000074 	movhi	r4,1
    d4b4:	21399f04 	addi	r4,r4,-6532
    d4b8:	000f2080 	call	f208 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d4bc:	d0a73817 	ldw	r2,-25376(gp)
    d4c0:	d0e73917 	ldw	r3,-25372(gp)
    d4c4:	d1273a17 	ldw	r4,-25368(gp)
    d4c8:	200d883a 	mov	r6,r4
    d4cc:	180b883a 	mov	r5,r3
    d4d0:	1009883a 	mov	r4,r2
    d4d4:	00004140 	call	414 <main>
    d4d8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d4dc:	01000044 	movi	r4,1
    d4e0:	000cf7c0 	call	cf7c <close>
  exit (result);
    d4e4:	e13fff17 	ldw	r4,-4(fp)
    d4e8:	000f21c0 	call	f21c <exit>

0000d4ec <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d4ec:	defffe04 	addi	sp,sp,-8
    d4f0:	df000115 	stw	fp,4(sp)
    d4f4:	df000104 	addi	fp,sp,4
    d4f8:	e13fff15 	stw	r4,-4(fp)
}
    d4fc:	0001883a 	nop
    d500:	e037883a 	mov	sp,fp
    d504:	df000017 	ldw	fp,0(sp)
    d508:	dec00104 	addi	sp,sp,4
    d50c:	f800283a 	ret

0000d510 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d510:	defffe04 	addi	sp,sp,-8
    d514:	df000115 	stw	fp,4(sp)
    d518:	df000104 	addi	fp,sp,4
    d51c:	e13fff15 	stw	r4,-4(fp)
}
    d520:	0001883a 	nop
    d524:	e037883a 	mov	sp,fp
    d528:	df000017 	ldw	fp,0(sp)
    d52c:	dec00104 	addi	sp,sp,4
    d530:	f800283a 	ret

0000d534 <alt_get_errno>:
{
    d534:	defffe04 	addi	sp,sp,-8
    d538:	dfc00115 	stw	ra,4(sp)
    d53c:	df000015 	stw	fp,0(sp)
    d540:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d544:	d0a00e17 	ldw	r2,-32712(gp)
    d548:	10000326 	beq	r2,zero,d558 <alt_get_errno+0x24>
    d54c:	d0a00e17 	ldw	r2,-32712(gp)
    d550:	103ee83a 	callr	r2
    d554:	00000106 	br	d55c <alt_get_errno+0x28>
    d558:	d0a73604 	addi	r2,gp,-25384
}
    d55c:	e037883a 	mov	sp,fp
    d560:	dfc00117 	ldw	ra,4(sp)
    d564:	df000017 	ldw	fp,0(sp)
    d568:	dec00204 	addi	sp,sp,8
    d56c:	f800283a 	ret

0000d570 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d570:	defff904 	addi	sp,sp,-28
    d574:	dfc00615 	stw	ra,24(sp)
    d578:	df000515 	stw	fp,20(sp)
    d57c:	df000504 	addi	fp,sp,20
    d580:	e13ffd15 	stw	r4,-12(fp)
    d584:	e17ffc15 	stw	r5,-16(fp)
    d588:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d58c:	e0bffd17 	ldw	r2,-12(fp)
    d590:	10000916 	blt	r2,zero,d5b8 <read+0x48>
    d594:	e0fffd17 	ldw	r3,-12(fp)
    d598:	1805883a 	mov	r2,r3
    d59c:	1085883a 	add	r2,r2,r2
    d5a0:	10c5883a 	add	r2,r2,r3
    d5a4:	100490ba 	slli	r2,r2,2
    d5a8:	00c00074 	movhi	r3,1
    d5ac:	18c17404 	addi	r3,r3,1488
    d5b0:	10c5883a 	add	r2,r2,r3
    d5b4:	00000106 	br	d5bc <read+0x4c>
    d5b8:	0005883a 	mov	r2,zero
    d5bc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d5c0:	e0bfff17 	ldw	r2,-4(fp)
    d5c4:	10002226 	beq	r2,zero,d650 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d5c8:	e0bfff17 	ldw	r2,-4(fp)
    d5cc:	10800217 	ldw	r2,8(r2)
    d5d0:	108000cc 	andi	r2,r2,3
    d5d4:	10800060 	cmpeqi	r2,r2,1
    d5d8:	1000181e 	bne	r2,zero,d63c <read+0xcc>
        (fd->dev->read))
    d5dc:	e0bfff17 	ldw	r2,-4(fp)
    d5e0:	10800017 	ldw	r2,0(r2)
    d5e4:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d5e8:	10001426 	beq	r2,zero,d63c <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d5ec:	e0bfff17 	ldw	r2,-4(fp)
    d5f0:	10800017 	ldw	r2,0(r2)
    d5f4:	10800517 	ldw	r2,20(r2)
    d5f8:	e0fffb17 	ldw	r3,-20(fp)
    d5fc:	180d883a 	mov	r6,r3
    d600:	e17ffc17 	ldw	r5,-16(fp)
    d604:	e13fff17 	ldw	r4,-4(fp)
    d608:	103ee83a 	callr	r2
    d60c:	e0bffe15 	stw	r2,-8(fp)
    d610:	e0bffe17 	ldw	r2,-8(fp)
    d614:	1000070e 	bge	r2,zero,d634 <read+0xc4>
        {
          ALT_ERRNO = -rval;
    d618:	000d5340 	call	d534 <alt_get_errno>
    d61c:	1007883a 	mov	r3,r2
    d620:	e0bffe17 	ldw	r2,-8(fp)
    d624:	0085c83a 	sub	r2,zero,r2
    d628:	18800015 	stw	r2,0(r3)
          return -1;
    d62c:	00bfffc4 	movi	r2,-1
    d630:	00000c06 	br	d664 <read+0xf4>
        }
        return rval;
    d634:	e0bffe17 	ldw	r2,-8(fp)
    d638:	00000a06 	br	d664 <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d63c:	000d5340 	call	d534 <alt_get_errno>
    d640:	1007883a 	mov	r3,r2
    d644:	00800344 	movi	r2,13
    d648:	18800015 	stw	r2,0(r3)
    d64c:	00000406 	br	d660 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d650:	000d5340 	call	d534 <alt_get_errno>
    d654:	1007883a 	mov	r3,r2
    d658:	00801444 	movi	r2,81
    d65c:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d660:	00bfffc4 	movi	r2,-1
}
    d664:	e037883a 	mov	sp,fp
    d668:	dfc00117 	ldw	ra,4(sp)
    d66c:	df000017 	ldw	fp,0(sp)
    d670:	dec00204 	addi	sp,sp,8
    d674:	f800283a 	ret

0000d678 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d678:	defffe04 	addi	sp,sp,-8
    d67c:	df000115 	stw	fp,4(sp)
    d680:	df000104 	addi	fp,sp,4
    d684:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    d688:	e0bfff17 	ldw	r2,-4(fp)
    d68c:	108000d0 	cmplti	r2,r2,3
    d690:	1000101e 	bne	r2,zero,d6d4 <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
    d694:	e0ffff17 	ldw	r3,-4(fp)
    d698:	1805883a 	mov	r2,r3
    d69c:	1085883a 	add	r2,r2,r2
    d6a0:	10c5883a 	add	r2,r2,r3
    d6a4:	100490ba 	slli	r2,r2,2
    d6a8:	00c00074 	movhi	r3,1
    d6ac:	10c7883a 	add	r3,r2,r3
    d6b0:	18017615 	stw	zero,1496(r3)
    alt_fd_list[fd].dev      = 0;
    d6b4:	e0ffff17 	ldw	r3,-4(fp)
    d6b8:	1805883a 	mov	r2,r3
    d6bc:	1085883a 	add	r2,r2,r2
    d6c0:	10c5883a 	add	r2,r2,r3
    d6c4:	100490ba 	slli	r2,r2,2
    d6c8:	00c00074 	movhi	r3,1
    d6cc:	10c7883a 	add	r3,r2,r3
    d6d0:	18017415 	stw	zero,1488(r3)
  }
}
    d6d4:	0001883a 	nop
    d6d8:	e037883a 	mov	sp,fp
    d6dc:	df000017 	ldw	fp,0(sp)
    d6e0:	dec00104 	addi	sp,sp,4
    d6e4:	f800283a 	ret

0000d6e8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d6e8:	defff904 	addi	sp,sp,-28
    d6ec:	df000615 	stw	fp,24(sp)
    d6f0:	df000604 	addi	fp,sp,24
    d6f4:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
    d6f8:	0005303a 	rdctl	r2,status
    d6fc:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d700:	e0fffd17 	ldw	r3,-12(fp)
    d704:	00bfff84 	movi	r2,-2
    d708:	1884703a 	and	r2,r3,r2
    d70c:	1001703a 	wrctl	status,r2
  return context;
    d710:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d714:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d718:	d0a00f17 	ldw	r2,-32708(gp)
    d71c:	10c000c4 	addi	r3,r2,3
    d720:	00bfff04 	movi	r2,-4
    d724:	1884703a 	and	r2,r3,r2
    d728:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d72c:	d0e00f17 	ldw	r3,-32708(gp)
    d730:	e0bffa17 	ldw	r2,-24(fp)
    d734:	1887883a 	add	r3,r3,r2
    d738:	008000b4 	movhi	r2,2
    d73c:	10bd0004 	addi	r2,r2,-3072
    d740:	10c0062e 	bgeu	r2,r3,d75c <sbrk+0x74>
    d744:	e0bfff17 	ldw	r2,-4(fp)
    d748:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    d74c:	e0bffc17 	ldw	r2,-16(fp)
    d750:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d754:	00bfffc4 	movi	r2,-1
    d758:	00000b06 	br	d788 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d75c:	d0a00f17 	ldw	r2,-32708(gp)
    d760:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
    d764:	d0e00f17 	ldw	r3,-32708(gp)
    d768:	e0bffa17 	ldw	r2,-24(fp)
    d76c:	1885883a 	add	r2,r3,r2
    d770:	d0a00f15 	stw	r2,-32708(gp)
    d774:	e0bfff17 	ldw	r2,-4(fp)
    d778:	e0bffb15 	stw	r2,-20(fp)
    d77c:	e0bffb17 	ldw	r2,-20(fp)
    d780:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    d784:	e0bffe17 	ldw	r2,-8(fp)
} 
    d788:	e037883a 	mov	sp,fp
    d78c:	df000017 	ldw	fp,0(sp)
    d790:	dec00104 	addi	sp,sp,4
    d794:	f800283a 	ret

0000d798 <alt_get_errno>:
{
    d798:	defffe04 	addi	sp,sp,-8
    d79c:	dfc00115 	stw	ra,4(sp)
    d7a0:	df000015 	stw	fp,0(sp)
    d7a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d7a8:	d0a00e17 	ldw	r2,-32712(gp)
    d7ac:	10000326 	beq	r2,zero,d7bc <alt_get_errno+0x24>
    d7b0:	d0a00e17 	ldw	r2,-32712(gp)
    d7b4:	103ee83a 	callr	r2
    d7b8:	00000106 	br	d7c0 <alt_get_errno+0x28>
    d7bc:	d0a73604 	addi	r2,gp,-25384
}
    d7c0:	e037883a 	mov	sp,fp
    d7c4:	dfc00117 	ldw	ra,4(sp)
    d7c8:	df000017 	ldw	fp,0(sp)
    d7cc:	dec00204 	addi	sp,sp,8
    d7d0:	f800283a 	ret

0000d7d4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    d7d4:	defff904 	addi	sp,sp,-28
    d7d8:	dfc00615 	stw	ra,24(sp)
    d7dc:	df000515 	stw	fp,20(sp)
    d7e0:	df000504 	addi	fp,sp,20
    d7e4:	e13ffd15 	stw	r4,-12(fp)
    d7e8:	e17ffc15 	stw	r5,-16(fp)
    d7ec:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d7f0:	e0bffd17 	ldw	r2,-12(fp)
    d7f4:	10000916 	blt	r2,zero,d81c <write+0x48>
    d7f8:	e0fffd17 	ldw	r3,-12(fp)
    d7fc:	1805883a 	mov	r2,r3
    d800:	1085883a 	add	r2,r2,r2
    d804:	10c5883a 	add	r2,r2,r3
    d808:	100490ba 	slli	r2,r2,2
    d80c:	00c00074 	movhi	r3,1
    d810:	18c17404 	addi	r3,r3,1488
    d814:	10c5883a 	add	r2,r2,r3
    d818:	00000106 	br	d820 <write+0x4c>
    d81c:	0005883a 	mov	r2,zero
    d820:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
    d824:	e0bfff17 	ldw	r2,-4(fp)
    d828:	10002126 	beq	r2,zero,d8b0 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    d82c:	e0bfff17 	ldw	r2,-4(fp)
    d830:	10800217 	ldw	r2,8(r2)
    d834:	108000cc 	andi	r2,r2,3
    d838:	10001826 	beq	r2,zero,d89c <write+0xc8>
    d83c:	e0bfff17 	ldw	r2,-4(fp)
    d840:	10800017 	ldw	r2,0(r2)
    d844:	10800617 	ldw	r2,24(r2)
    d848:	10001426 	beq	r2,zero,d89c <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    d84c:	e0bfff17 	ldw	r2,-4(fp)
    d850:	10800017 	ldw	r2,0(r2)
    d854:	10800617 	ldw	r2,24(r2)
    d858:	e0fffb17 	ldw	r3,-20(fp)
    d85c:	180d883a 	mov	r6,r3
    d860:	e17ffc17 	ldw	r5,-16(fp)
    d864:	e13fff17 	ldw	r4,-4(fp)
    d868:	103ee83a 	callr	r2
    d86c:	e0bffe15 	stw	r2,-8(fp)
    d870:	e0bffe17 	ldw	r2,-8(fp)
    d874:	1000070e 	bge	r2,zero,d894 <write+0xc0>
      {
        ALT_ERRNO = -rval;
    d878:	000d7980 	call	d798 <alt_get_errno>
    d87c:	1007883a 	mov	r3,r2
    d880:	e0bffe17 	ldw	r2,-8(fp)
    d884:	0085c83a 	sub	r2,zero,r2
    d888:	18800015 	stw	r2,0(r3)
        return -1;
    d88c:	00bfffc4 	movi	r2,-1
    d890:	00000c06 	br	d8c4 <write+0xf0>
      }
      return rval;
    d894:	e0bffe17 	ldw	r2,-8(fp)
    d898:	00000a06 	br	d8c4 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
    d89c:	000d7980 	call	d798 <alt_get_errno>
    d8a0:	1007883a 	mov	r3,r2
    d8a4:	00800344 	movi	r2,13
    d8a8:	18800015 	stw	r2,0(r3)
    d8ac:	00000406 	br	d8c0 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    d8b0:	000d7980 	call	d798 <alt_get_errno>
    d8b4:	1007883a 	mov	r3,r2
    d8b8:	00801444 	movi	r2,81
    d8bc:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d8c0:	00bfffc4 	movi	r2,-1
}
    d8c4:	e037883a 	mov	sp,fp
    d8c8:	dfc00117 	ldw	ra,4(sp)
    d8cc:	df000017 	ldw	fp,0(sp)
    d8d0:	dec00204 	addi	sp,sp,8
    d8d4:	f800283a 	ret

0000d8d8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    d8d8:	defffd04 	addi	sp,sp,-12
    d8dc:	dfc00215 	stw	ra,8(sp)
    d8e0:	df000115 	stw	fp,4(sp)
    d8e4:	df000104 	addi	fp,sp,4
    d8e8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    d8ec:	d1600b04 	addi	r5,gp,-32724
    d8f0:	e13fff17 	ldw	r4,-4(fp)
    d8f4:	000e5780 	call	e578 <alt_dev_llist_insert>
}
    d8f8:	e037883a 	mov	sp,fp
    d8fc:	dfc00117 	ldw	ra,4(sp)
    d900:	df000017 	ldw	fp,0(sp)
    d904:	dec00204 	addi	sp,sp,8
    d908:	f800283a 	ret

0000d90c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    d90c:	defffd04 	addi	sp,sp,-12
    d910:	dfc00215 	stw	ra,8(sp)
    d914:	df000115 	stw	fp,4(sp)
    d918:	df000104 	addi	fp,sp,4
    d91c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    d920:	000eefc0 	call	eefc <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    d924:	00800044 	movi	r2,1
    d928:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    d92c:	0001883a 	nop
    d930:	e037883a 	mov	sp,fp
    d934:	dfc00117 	ldw	ra,4(sp)
    d938:	df000017 	ldw	fp,0(sp)
    d93c:	dec00204 	addi	sp,sp,8
    d940:	f800283a 	ret

0000d944 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    d944:	defffe04 	addi	sp,sp,-8
    d948:	dfc00115 	stw	ra,4(sp)
    d94c:	df000015 	stw	fp,0(sp)
    d950:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    d954:	000d883a 	mov	r6,zero
    d958:	000b883a 	mov	r5,zero
    d95c:	01000074 	movhi	r4,1
    d960:	2101de04 	addi	r4,r4,1912
    d964:	000daf00 	call	daf0 <altera_avalon_jtag_uart_init>
    d968:	01000074 	movhi	r4,1
    d96c:	2101d404 	addi	r4,r4,1872
    d970:	000d8d80 	call	d8d8 <alt_dev_reg>
}
    d974:	0001883a 	nop
    d978:	e037883a 	mov	sp,fp
    d97c:	dfc00117 	ldw	ra,4(sp)
    d980:	df000017 	ldw	fp,0(sp)
    d984:	dec00204 	addi	sp,sp,8
    d988:	f800283a 	ret

0000d98c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    d98c:	defffa04 	addi	sp,sp,-24
    d990:	dfc00515 	stw	ra,20(sp)
    d994:	df000415 	stw	fp,16(sp)
    d998:	df000404 	addi	fp,sp,16
    d99c:	e13ffe15 	stw	r4,-8(fp)
    d9a0:	e17ffd15 	stw	r5,-12(fp)
    d9a4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d9a8:	e0bffe17 	ldw	r2,-8(fp)
    d9ac:	10800017 	ldw	r2,0(r2)
    d9b0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    d9b4:	e0bfff17 	ldw	r2,-4(fp)
    d9b8:	10c00a04 	addi	r3,r2,40
    d9bc:	e0bffe17 	ldw	r2,-8(fp)
    d9c0:	10800217 	ldw	r2,8(r2)
    d9c4:	100f883a 	mov	r7,r2
    d9c8:	e1bffc17 	ldw	r6,-16(fp)
    d9cc:	e17ffd17 	ldw	r5,-12(fp)
    d9d0:	1809883a 	mov	r4,r3
    d9d4:	000dfb00 	call	dfb0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    d9d8:	e037883a 	mov	sp,fp
    d9dc:	dfc00117 	ldw	ra,4(sp)
    d9e0:	df000017 	ldw	fp,0(sp)
    d9e4:	dec00204 	addi	sp,sp,8
    d9e8:	f800283a 	ret

0000d9ec <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    d9ec:	defffa04 	addi	sp,sp,-24
    d9f0:	dfc00515 	stw	ra,20(sp)
    d9f4:	df000415 	stw	fp,16(sp)
    d9f8:	df000404 	addi	fp,sp,16
    d9fc:	e13ffe15 	stw	r4,-8(fp)
    da00:	e17ffd15 	stw	r5,-12(fp)
    da04:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    da08:	e0bffe17 	ldw	r2,-8(fp)
    da0c:	10800017 	ldw	r2,0(r2)
    da10:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    da14:	e0bfff17 	ldw	r2,-4(fp)
    da18:	10c00a04 	addi	r3,r2,40
    da1c:	e0bffe17 	ldw	r2,-8(fp)
    da20:	10800217 	ldw	r2,8(r2)
    da24:	100f883a 	mov	r7,r2
    da28:	e1bffc17 	ldw	r6,-16(fp)
    da2c:	e17ffd17 	ldw	r5,-12(fp)
    da30:	1809883a 	mov	r4,r3
    da34:	000e1cc0 	call	e1cc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    da38:	e037883a 	mov	sp,fp
    da3c:	dfc00117 	ldw	ra,4(sp)
    da40:	df000017 	ldw	fp,0(sp)
    da44:	dec00204 	addi	sp,sp,8
    da48:	f800283a 	ret

0000da4c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    da4c:	defffc04 	addi	sp,sp,-16
    da50:	dfc00315 	stw	ra,12(sp)
    da54:	df000215 	stw	fp,8(sp)
    da58:	df000204 	addi	fp,sp,8
    da5c:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    da60:	e0bffe17 	ldw	r2,-8(fp)
    da64:	10800017 	ldw	r2,0(r2)
    da68:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    da6c:	e0bfff17 	ldw	r2,-4(fp)
    da70:	10c00a04 	addi	r3,r2,40
    da74:	e0bffe17 	ldw	r2,-8(fp)
    da78:	10800217 	ldw	r2,8(r2)
    da7c:	100b883a 	mov	r5,r2
    da80:	1809883a 	mov	r4,r3
    da84:	000de540 	call	de54 <altera_avalon_jtag_uart_close>
}
    da88:	e037883a 	mov	sp,fp
    da8c:	dfc00117 	ldw	ra,4(sp)
    da90:	df000017 	ldw	fp,0(sp)
    da94:	dec00204 	addi	sp,sp,8
    da98:	f800283a 	ret

0000da9c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    da9c:	defffa04 	addi	sp,sp,-24
    daa0:	dfc00515 	stw	ra,20(sp)
    daa4:	df000415 	stw	fp,16(sp)
    daa8:	df000404 	addi	fp,sp,16
    daac:	e13ffe15 	stw	r4,-8(fp)
    dab0:	e17ffd15 	stw	r5,-12(fp)
    dab4:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    dab8:	e0bffe17 	ldw	r2,-8(fp)
    dabc:	10800017 	ldw	r2,0(r2)
    dac0:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    dac4:	e0bfff17 	ldw	r2,-4(fp)
    dac8:	10800a04 	addi	r2,r2,40
    dacc:	e1bffc17 	ldw	r6,-16(fp)
    dad0:	e17ffd17 	ldw	r5,-12(fp)
    dad4:	1009883a 	mov	r4,r2
    dad8:	000debc0 	call	debc <altera_avalon_jtag_uart_ioctl>
}
    dadc:	e037883a 	mov	sp,fp
    dae0:	dfc00117 	ldw	ra,4(sp)
    dae4:	df000017 	ldw	fp,0(sp)
    dae8:	dec00204 	addi	sp,sp,8
    daec:	f800283a 	ret

0000daf0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    daf0:	defffa04 	addi	sp,sp,-24
    daf4:	dfc00515 	stw	ra,20(sp)
    daf8:	df000415 	stw	fp,16(sp)
    dafc:	df000404 	addi	fp,sp,16
    db00:	e13fff15 	stw	r4,-4(fp)
    db04:	e17ffe15 	stw	r5,-8(fp)
    db08:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    db0c:	e0bfff17 	ldw	r2,-4(fp)
    db10:	00c00044 	movi	r3,1
    db14:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    db18:	e0bfff17 	ldw	r2,-4(fp)
    db1c:	10800017 	ldw	r2,0(r2)
    db20:	10800104 	addi	r2,r2,4
    db24:	1007883a 	mov	r3,r2
    db28:	e0bfff17 	ldw	r2,-4(fp)
    db2c:	10800817 	ldw	r2,32(r2)
    db30:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    db34:	e0bffe17 	ldw	r2,-8(fp)
    db38:	e0fffd17 	ldw	r3,-12(fp)
    db3c:	d8000015 	stw	zero,0(sp)
    db40:	e1ffff17 	ldw	r7,-4(fp)
    db44:	01800074 	movhi	r6,1
    db48:	31b6ec04 	addi	r6,r6,-9296
    db4c:	180b883a 	mov	r5,r3
    db50:	1009883a 	mov	r4,r2
    db54:	000e6fc0 	call	e6fc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    db58:	e0bfff17 	ldw	r2,-4(fp)
    db5c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    db60:	e0bfff17 	ldw	r2,-4(fp)
    db64:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    db68:	d0e73c17 	ldw	r3,-25360(gp)
    db6c:	e1ffff17 	ldw	r7,-4(fp)
    db70:	01800074 	movhi	r6,1
    db74:	31b76d04 	addi	r6,r6,-8780
    db78:	180b883a 	mov	r5,r3
    db7c:	1009883a 	mov	r4,r2
    db80:	000e3f00 	call	e3f0 <alt_alarm_start>
    db84:	1000040e 	bge	r2,zero,db98 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    db88:	e0ffff17 	ldw	r3,-4(fp)
    db8c:	00a00034 	movhi	r2,32768
    db90:	10bfffc4 	addi	r2,r2,-1
    db94:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    db98:	0001883a 	nop
    db9c:	e037883a 	mov	sp,fp
    dba0:	dfc00117 	ldw	ra,4(sp)
    dba4:	df000017 	ldw	fp,0(sp)
    dba8:	dec00204 	addi	sp,sp,8
    dbac:	f800283a 	ret

0000dbb0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    dbb0:	defff804 	addi	sp,sp,-32
    dbb4:	df000715 	stw	fp,28(sp)
    dbb8:	df000704 	addi	fp,sp,28
    dbbc:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    dbc0:	e0bff917 	ldw	r2,-28(fp)
    dbc4:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
    dbc8:	e0bffd17 	ldw	r2,-12(fp)
    dbcc:	10800017 	ldw	r2,0(r2)
    dbd0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dbd4:	e0bffc17 	ldw	r2,-16(fp)
    dbd8:	10800104 	addi	r2,r2,4
    dbdc:	10800037 	ldwio	r2,0(r2)
    dbe0:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    dbe4:	e0bffb17 	ldw	r2,-20(fp)
    dbe8:	1080c00c 	andi	r2,r2,768
    dbec:	10006b26 	beq	r2,zero,dd9c <altera_avalon_jtag_uart_irq+0x1ec>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    dbf0:	e0bffb17 	ldw	r2,-20(fp)
    dbf4:	1080400c 	andi	r2,r2,256
    dbf8:	10003426 	beq	r2,zero,dccc <altera_avalon_jtag_uart_irq+0x11c>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    dbfc:	00800074 	movhi	r2,1
    dc00:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dc04:	e0bffd17 	ldw	r2,-12(fp)
    dc08:	10800a17 	ldw	r2,40(r2)
    dc0c:	10800044 	addi	r2,r2,1
    dc10:	1081ffcc 	andi	r2,r2,2047
    dc14:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
    dc18:	e0bffd17 	ldw	r2,-12(fp)
    dc1c:	10800b17 	ldw	r2,44(r2)
    dc20:	e0fffa17 	ldw	r3,-24(fp)
    dc24:	18801426 	beq	r3,r2,dc78 <altera_avalon_jtag_uart_irq+0xc8>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    dc28:	e0bffc17 	ldw	r2,-16(fp)
    dc2c:	10800037 	ldwio	r2,0(r2)
    dc30:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    dc34:	e0bfff17 	ldw	r2,-4(fp)
    dc38:	10a0000c 	andi	r2,r2,32768
    dc3c:	10001026 	beq	r2,zero,dc80 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    dc40:	e0bffd17 	ldw	r2,-12(fp)
    dc44:	10800a17 	ldw	r2,40(r2)
    dc48:	e0ffff17 	ldw	r3,-4(fp)
    dc4c:	1809883a 	mov	r4,r3
    dc50:	e0fffd17 	ldw	r3,-12(fp)
    dc54:	1885883a 	add	r2,r3,r2
    dc58:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dc5c:	e0bffd17 	ldw	r2,-12(fp)
    dc60:	10800a17 	ldw	r2,40(r2)
    dc64:	10800044 	addi	r2,r2,1
    dc68:	10c1ffcc 	andi	r3,r2,2047
    dc6c:	e0bffd17 	ldw	r2,-12(fp)
    dc70:	10c00a15 	stw	r3,40(r2)
      {
    dc74:	003fe306 	br	dc04 <altera_avalon_jtag_uart_irq+0x54>
          break;
    dc78:	0001883a 	nop
    dc7c:	00000106 	br	dc84 <altera_avalon_jtag_uart_irq+0xd4>
          break;
    dc80:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    dc84:	e0bfff17 	ldw	r2,-4(fp)
    dc88:	10bfffec 	andhi	r2,r2,65535
    dc8c:	10000f26 	beq	r2,zero,dccc <altera_avalon_jtag_uart_irq+0x11c>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    dc90:	e0bffd17 	ldw	r2,-12(fp)
    dc94:	10c00817 	ldw	r3,32(r2)
    dc98:	00bfff84 	movi	r2,-2
    dc9c:	1886703a 	and	r3,r3,r2
    dca0:	e0bffd17 	ldw	r2,-12(fp)
    dca4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    dca8:	e0bffc17 	ldw	r2,-16(fp)
    dcac:	10800104 	addi	r2,r2,4
    dcb0:	1007883a 	mov	r3,r2
    dcb4:	e0bffd17 	ldw	r2,-12(fp)
    dcb8:	10800817 	ldw	r2,32(r2)
    dcbc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dcc0:	e0bffc17 	ldw	r2,-16(fp)
    dcc4:	10800104 	addi	r2,r2,4
    dcc8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    dccc:	e0bffb17 	ldw	r2,-20(fp)
    dcd0:	1080800c 	andi	r2,r2,512
    dcd4:	103fbf26 	beq	r2,zero,dbd4 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    dcd8:	e0bffb17 	ldw	r2,-20(fp)
    dcdc:	1004d43a 	srli	r2,r2,16
    dce0:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    dce4:	00001306 	br	dd34 <altera_avalon_jtag_uart_irq+0x184>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    dce8:	e0bffc17 	ldw	r2,-16(fp)
    dcec:	e0fffd17 	ldw	r3,-12(fp)
    dcf0:	18c00d17 	ldw	r3,52(r3)
    dcf4:	e13ffd17 	ldw	r4,-12(fp)
    dcf8:	20c7883a 	add	r3,r4,r3
    dcfc:	18c20e03 	ldbu	r3,2104(r3)
    dd00:	18c03fcc 	andi	r3,r3,255
    dd04:	18c0201c 	xori	r3,r3,128
    dd08:	18ffe004 	addi	r3,r3,-128
    dd0c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dd10:	e0bffd17 	ldw	r2,-12(fp)
    dd14:	10800d17 	ldw	r2,52(r2)
    dd18:	10800044 	addi	r2,r2,1
    dd1c:	10c1ffcc 	andi	r3,r2,2047
    dd20:	e0bffd17 	ldw	r2,-12(fp)
    dd24:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    dd28:	e0bffe17 	ldw	r2,-8(fp)
    dd2c:	10bfffc4 	addi	r2,r2,-1
    dd30:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
    dd34:	e0bffe17 	ldw	r2,-8(fp)
    dd38:	10000526 	beq	r2,zero,dd50 <altera_avalon_jtag_uart_irq+0x1a0>
    dd3c:	e0bffd17 	ldw	r2,-12(fp)
    dd40:	10c00d17 	ldw	r3,52(r2)
    dd44:	e0bffd17 	ldw	r2,-12(fp)
    dd48:	10800c17 	ldw	r2,48(r2)
    dd4c:	18bfe61e 	bne	r3,r2,dce8 <altera_avalon_jtag_uart_irq+0x138>
      }

      if (space > 0)
    dd50:	e0bffe17 	ldw	r2,-8(fp)
    dd54:	103f9f26 	beq	r2,zero,dbd4 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    dd58:	e0bffd17 	ldw	r2,-12(fp)
    dd5c:	10c00817 	ldw	r3,32(r2)
    dd60:	00bfff44 	movi	r2,-3
    dd64:	1886703a 	and	r3,r3,r2
    dd68:	e0bffd17 	ldw	r2,-12(fp)
    dd6c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    dd70:	e0bffd17 	ldw	r2,-12(fp)
    dd74:	10800017 	ldw	r2,0(r2)
    dd78:	10800104 	addi	r2,r2,4
    dd7c:	1007883a 	mov	r3,r2
    dd80:	e0bffd17 	ldw	r2,-12(fp)
    dd84:	10800817 	ldw	r2,32(r2)
    dd88:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dd8c:	e0bffc17 	ldw	r2,-16(fp)
    dd90:	10800104 	addi	r2,r2,4
    dd94:	10800037 	ldwio	r2,0(r2)
  {
    dd98:	003f8e06 	br	dbd4 <altera_avalon_jtag_uart_irq+0x24>
      break;
    dd9c:	0001883a 	nop
      }
    }
  }
}
    dda0:	0001883a 	nop
    dda4:	e037883a 	mov	sp,fp
    dda8:	df000017 	ldw	fp,0(sp)
    ddac:	dec00104 	addi	sp,sp,4
    ddb0:	f800283a 	ret

0000ddb4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    ddb4:	defffc04 	addi	sp,sp,-16
    ddb8:	df000315 	stw	fp,12(sp)
    ddbc:	df000304 	addi	fp,sp,12
    ddc0:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    ddc4:	e0bffd17 	ldw	r2,-12(fp)
    ddc8:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    ddcc:	e0bfff17 	ldw	r2,-4(fp)
    ddd0:	10800017 	ldw	r2,0(r2)
    ddd4:	10800104 	addi	r2,r2,4
    ddd8:	10800037 	ldwio	r2,0(r2)
    dddc:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    dde0:	e0bffe17 	ldw	r2,-8(fp)
    dde4:	1081000c 	andi	r2,r2,1024
    dde8:	10000b26 	beq	r2,zero,de18 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    ddec:	e0bfff17 	ldw	r2,-4(fp)
    ddf0:	10800017 	ldw	r2,0(r2)
    ddf4:	10800104 	addi	r2,r2,4
    ddf8:	1007883a 	mov	r3,r2
    ddfc:	e0bfff17 	ldw	r2,-4(fp)
    de00:	10800817 	ldw	r2,32(r2)
    de04:	10810014 	ori	r2,r2,1024
    de08:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    de0c:	e0bfff17 	ldw	r2,-4(fp)
    de10:	10000915 	stw	zero,36(r2)
    de14:	00000a06 	br	de40 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    de18:	e0bfff17 	ldw	r2,-4(fp)
    de1c:	10c00917 	ldw	r3,36(r2)
    de20:	00a00034 	movhi	r2,32768
    de24:	10bfff04 	addi	r2,r2,-4
    de28:	10c00536 	bltu	r2,r3,de40 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    de2c:	e0bfff17 	ldw	r2,-4(fp)
    de30:	10800917 	ldw	r2,36(r2)
    de34:	10c00044 	addi	r3,r2,1
    de38:	e0bfff17 	ldw	r2,-4(fp)
    de3c:	10c00915 	stw	r3,36(r2)
    de40:	d0a73c17 	ldw	r2,-25360(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    de44:	e037883a 	mov	sp,fp
    de48:	df000017 	ldw	fp,0(sp)
    de4c:	dec00104 	addi	sp,sp,4
    de50:	f800283a 	ret

0000de54 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    de54:	defffd04 	addi	sp,sp,-12
    de58:	df000215 	stw	fp,8(sp)
    de5c:	df000204 	addi	fp,sp,8
    de60:	e13fff15 	stw	r4,-4(fp)
    de64:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    de68:	00000506 	br	de80 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    de6c:	e0bffe17 	ldw	r2,-8(fp)
    de70:	1090000c 	andi	r2,r2,16384
    de74:	10000226 	beq	r2,zero,de80 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    de78:	00bffd44 	movi	r2,-11
    de7c:	00000b06 	br	deac <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    de80:	e0bfff17 	ldw	r2,-4(fp)
    de84:	10c00d17 	ldw	r3,52(r2)
    de88:	e0bfff17 	ldw	r2,-4(fp)
    de8c:	10800c17 	ldw	r2,48(r2)
    de90:	18800526 	beq	r3,r2,dea8 <altera_avalon_jtag_uart_close+0x54>
    de94:	e0bfff17 	ldw	r2,-4(fp)
    de98:	10c00917 	ldw	r3,36(r2)
    de9c:	e0bfff17 	ldw	r2,-4(fp)
    dea0:	10800117 	ldw	r2,4(r2)
    dea4:	18bff136 	bltu	r3,r2,de6c <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
    dea8:	0005883a 	mov	r2,zero
}
    deac:	e037883a 	mov	sp,fp
    deb0:	df000017 	ldw	fp,0(sp)
    deb4:	dec00104 	addi	sp,sp,4
    deb8:	f800283a 	ret

0000debc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    debc:	defffa04 	addi	sp,sp,-24
    dec0:	df000515 	stw	fp,20(sp)
    dec4:	df000504 	addi	fp,sp,20
    dec8:	e13ffd15 	stw	r4,-12(fp)
    decc:	e17ffc15 	stw	r5,-16(fp)
    ded0:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
    ded4:	00bff9c4 	movi	r2,-25
    ded8:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
    dedc:	e0bffc17 	ldw	r2,-16(fp)
    dee0:	109a8060 	cmpeqi	r2,r2,27137
    dee4:	1000041e 	bne	r2,zero,def8 <altera_avalon_jtag_uart_ioctl+0x3c>
    dee8:	e0bffc17 	ldw	r2,-16(fp)
    deec:	109a80a0 	cmpeqi	r2,r2,27138
    def0:	1000181e 	bne	r2,zero,df54 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
    def4:	00002906 	br	df9c <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
    def8:	e0bffd17 	ldw	r2,-12(fp)
    defc:	10c00117 	ldw	r3,4(r2)
    df00:	00a00034 	movhi	r2,32768
    df04:	10bfffc4 	addi	r2,r2,-1
    df08:	18802126 	beq	r3,r2,df90 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
    df0c:	e0bffb17 	ldw	r2,-20(fp)
    df10:	10800017 	ldw	r2,0(r2)
    df14:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    df18:	e0bffe17 	ldw	r2,-8(fp)
    df1c:	10800090 	cmplti	r2,r2,2
    df20:	1000061e 	bne	r2,zero,df3c <altera_avalon_jtag_uart_ioctl+0x80>
    df24:	e0fffe17 	ldw	r3,-8(fp)
    df28:	00a00034 	movhi	r2,32768
    df2c:	10bfffc4 	addi	r2,r2,-1
    df30:	18800226 	beq	r3,r2,df3c <altera_avalon_jtag_uart_ioctl+0x80>
    df34:	e0bffe17 	ldw	r2,-8(fp)
    df38:	00000206 	br	df44 <altera_avalon_jtag_uart_ioctl+0x88>
    df3c:	00a00034 	movhi	r2,32768
    df40:	10bfff84 	addi	r2,r2,-2
    df44:	e0fffd17 	ldw	r3,-12(fp)
    df48:	18800115 	stw	r2,4(r3)
      rc = 0;
    df4c:	e03fff15 	stw	zero,-4(fp)
    break;
    df50:	00000f06 	br	df90 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
    df54:	e0bffd17 	ldw	r2,-12(fp)
    df58:	10c00117 	ldw	r3,4(r2)
    df5c:	00a00034 	movhi	r2,32768
    df60:	10bfffc4 	addi	r2,r2,-1
    df64:	18800c26 	beq	r3,r2,df98 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    df68:	e0bffd17 	ldw	r2,-12(fp)
    df6c:	10c00917 	ldw	r3,36(r2)
    df70:	e0bffd17 	ldw	r2,-12(fp)
    df74:	10800117 	ldw	r2,4(r2)
    df78:	1885803a 	cmpltu	r2,r3,r2
    df7c:	10c03fcc 	andi	r3,r2,255
    df80:	e0bffb17 	ldw	r2,-20(fp)
    df84:	10c00015 	stw	r3,0(r2)
      rc = 0;
    df88:	e03fff15 	stw	zero,-4(fp)
    break;
    df8c:	00000206 	br	df98 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
    df90:	0001883a 	nop
    df94:	00000106 	br	df9c <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
    df98:	0001883a 	nop
  }

  return rc;
    df9c:	e0bfff17 	ldw	r2,-4(fp)
}
    dfa0:	e037883a 	mov	sp,fp
    dfa4:	df000017 	ldw	fp,0(sp)
    dfa8:	dec00104 	addi	sp,sp,4
    dfac:	f800283a 	ret

0000dfb0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    dfb0:	defff304 	addi	sp,sp,-52
    dfb4:	dfc00c15 	stw	ra,48(sp)
    dfb8:	df000b15 	stw	fp,44(sp)
    dfbc:	df000b04 	addi	fp,sp,44
    dfc0:	e13ff815 	stw	r4,-32(fp)
    dfc4:	e17ff715 	stw	r5,-36(fp)
    dfc8:	e1bff615 	stw	r6,-40(fp)
    dfcc:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
    dfd0:	e0bff717 	ldw	r2,-36(fp)
    dfd4:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    dfd8:	00004706 	br	e0f8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    dfdc:	e0bff817 	ldw	r2,-32(fp)
    dfe0:	10800a17 	ldw	r2,40(r2)
    dfe4:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
    dfe8:	e0bff817 	ldw	r2,-32(fp)
    dfec:	10800b17 	ldw	r2,44(r2)
    dff0:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
    dff4:	e0fffd17 	ldw	r3,-12(fp)
    dff8:	e0bffc17 	ldw	r2,-16(fp)
    dffc:	18800536 	bltu	r3,r2,e014 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e000:	e0fffd17 	ldw	r3,-12(fp)
    e004:	e0bffc17 	ldw	r2,-16(fp)
    e008:	1885c83a 	sub	r2,r3,r2
    e00c:	e0bffe15 	stw	r2,-8(fp)
    e010:	00000406 	br	e024 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e014:	00c20004 	movi	r3,2048
    e018:	e0bffc17 	ldw	r2,-16(fp)
    e01c:	1885c83a 	sub	r2,r3,r2
    e020:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    e024:	e0bffe17 	ldw	r2,-8(fp)
    e028:	10001e26 	beq	r2,zero,e0a4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e02c:	e0fff617 	ldw	r3,-40(fp)
    e030:	e0bffe17 	ldw	r2,-8(fp)
    e034:	1880022e 	bgeu	r3,r2,e040 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    e038:	e0bff617 	ldw	r2,-40(fp)
    e03c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e040:	e0bff817 	ldw	r2,-32(fp)
    e044:	10c00e04 	addi	r3,r2,56
    e048:	e0bffc17 	ldw	r2,-16(fp)
    e04c:	1885883a 	add	r2,r3,r2
    e050:	e1bffe17 	ldw	r6,-8(fp)
    e054:	100b883a 	mov	r5,r2
    e058:	e13fff17 	ldw	r4,-4(fp)
    e05c:	00060040 	call	6004 <memcpy>
      ptr   += n;
    e060:	e0ffff17 	ldw	r3,-4(fp)
    e064:	e0bffe17 	ldw	r2,-8(fp)
    e068:	1885883a 	add	r2,r3,r2
    e06c:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
    e070:	e0fff617 	ldw	r3,-40(fp)
    e074:	e0bffe17 	ldw	r2,-8(fp)
    e078:	1885c83a 	sub	r2,r3,r2
    e07c:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e080:	e0fffc17 	ldw	r3,-16(fp)
    e084:	e0bffe17 	ldw	r2,-8(fp)
    e088:	1885883a 	add	r2,r3,r2
    e08c:	10c1ffcc 	andi	r3,r2,2047
    e090:	e0bff817 	ldw	r2,-32(fp)
    e094:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e098:	e0bff617 	ldw	r2,-40(fp)
    e09c:	00bfcf16 	blt	zero,r2,dfdc <altera_avalon_jtag_uart_read+0x2c>
    e0a0:	00000106 	br	e0a8 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
    e0a4:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
    e0a8:	e0ffff17 	ldw	r3,-4(fp)
    e0ac:	e0bff717 	ldw	r2,-36(fp)
    e0b0:	1880141e 	bne	r3,r2,e104 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e0b4:	e0bff517 	ldw	r2,-44(fp)
    e0b8:	1090000c 	andi	r2,r2,16384
    e0bc:	1000131e 	bne	r2,zero,e10c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e0c0:	0001883a 	nop
    e0c4:	e0bff817 	ldw	r2,-32(fp)
    e0c8:	10800a17 	ldw	r2,40(r2)
    e0cc:	e0fffd17 	ldw	r3,-12(fp)
    e0d0:	1880051e 	bne	r3,r2,e0e8 <altera_avalon_jtag_uart_read+0x138>
    e0d4:	e0bff817 	ldw	r2,-32(fp)
    e0d8:	10c00917 	ldw	r3,36(r2)
    e0dc:	e0bff817 	ldw	r2,-32(fp)
    e0e0:	10800117 	ldw	r2,4(r2)
    e0e4:	18bff736 	bltu	r3,r2,e0c4 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e0e8:	e0bff817 	ldw	r2,-32(fp)
    e0ec:	10800a17 	ldw	r2,40(r2)
    e0f0:	e0fffd17 	ldw	r3,-12(fp)
    e0f4:	18800726 	beq	r3,r2,e114 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
    e0f8:	e0bff617 	ldw	r2,-40(fp)
    e0fc:	00bfb716 	blt	zero,r2,dfdc <altera_avalon_jtag_uart_read+0x2c>
    e100:	00000506 	br	e118 <altera_avalon_jtag_uart_read+0x168>
      break;
    e104:	0001883a 	nop
    e108:	00000306 	br	e118 <altera_avalon_jtag_uart_read+0x168>
      break;
    e10c:	0001883a 	nop
    e110:	00000106 	br	e118 <altera_avalon_jtag_uart_read+0x168>
      break;
    e114:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e118:	e0ffff17 	ldw	r3,-4(fp)
    e11c:	e0bff717 	ldw	r2,-36(fp)
    e120:	18801826 	beq	r3,r2,e184 <altera_avalon_jtag_uart_read+0x1d4>
  NIOS2_READ_STATUS (context);
    e124:	0005303a 	rdctl	r2,status
    e128:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e12c:	e0fff917 	ldw	r3,-28(fp)
    e130:	00bfff84 	movi	r2,-2
    e134:	1884703a 	and	r2,r3,r2
    e138:	1001703a 	wrctl	status,r2
  return context;
    e13c:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e140:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e144:	e0bff817 	ldw	r2,-32(fp)
    e148:	10800817 	ldw	r2,32(r2)
    e14c:	10c00054 	ori	r3,r2,1
    e150:	e0bff817 	ldw	r2,-32(fp)
    e154:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e158:	e0bff817 	ldw	r2,-32(fp)
    e15c:	10800017 	ldw	r2,0(r2)
    e160:	10800104 	addi	r2,r2,4
    e164:	1007883a 	mov	r3,r2
    e168:	e0bff817 	ldw	r2,-32(fp)
    e16c:	10800817 	ldw	r2,32(r2)
    e170:	18800035 	stwio	r2,0(r3)
    e174:	e0bffb17 	ldw	r2,-20(fp)
    e178:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    e17c:	e0bffa17 	ldw	r2,-24(fp)
    e180:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e184:	e0ffff17 	ldw	r3,-4(fp)
    e188:	e0bff717 	ldw	r2,-36(fp)
    e18c:	18800426 	beq	r3,r2,e1a0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    e190:	e0ffff17 	ldw	r3,-4(fp)
    e194:	e0bff717 	ldw	r2,-36(fp)
    e198:	1885c83a 	sub	r2,r3,r2
    e19c:	00000606 	br	e1b8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e1a0:	e0bff517 	ldw	r2,-44(fp)
    e1a4:	1090000c 	andi	r2,r2,16384
    e1a8:	10000226 	beq	r2,zero,e1b4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e1ac:	00bffd44 	movi	r2,-11
    e1b0:	00000106 	br	e1b8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e1b4:	00bffec4 	movi	r2,-5
}
    e1b8:	e037883a 	mov	sp,fp
    e1bc:	dfc00117 	ldw	ra,4(sp)
    e1c0:	df000017 	ldw	fp,0(sp)
    e1c4:	dec00204 	addi	sp,sp,8
    e1c8:	f800283a 	ret

0000e1cc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e1cc:	defff304 	addi	sp,sp,-52
    e1d0:	dfc00c15 	stw	ra,48(sp)
    e1d4:	df000b15 	stw	fp,44(sp)
    e1d8:	df000b04 	addi	fp,sp,44
    e1dc:	e13ff815 	stw	r4,-32(fp)
    e1e0:	e17ff715 	stw	r5,-36(fp)
    e1e4:	e1bff615 	stw	r6,-40(fp)
    e1e8:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e1ec:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e1f0:	e0bff717 	ldw	r2,-36(fp)
    e1f4:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e1f8:	00003706 	br	e2d8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e1fc:	e0bff817 	ldw	r2,-32(fp)
    e200:	10800c17 	ldw	r2,48(r2)
    e204:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
    e208:	e0bff817 	ldw	r2,-32(fp)
    e20c:	10800d17 	ldw	r2,52(r2)
    e210:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
    e214:	e0fffc17 	ldw	r3,-16(fp)
    e218:	e0bfff17 	ldw	r2,-4(fp)
    e21c:	1880062e 	bgeu	r3,r2,e238 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e220:	e0ffff17 	ldw	r3,-4(fp)
    e224:	e0bffc17 	ldw	r2,-16(fp)
    e228:	1885c83a 	sub	r2,r3,r2
    e22c:	10bfffc4 	addi	r2,r2,-1
    e230:	e0bffe15 	stw	r2,-8(fp)
    e234:	00000b06 	br	e264 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e238:	e0bfff17 	ldw	r2,-4(fp)
    e23c:	10000526 	beq	r2,zero,e254 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e240:	00c20004 	movi	r3,2048
    e244:	e0bffc17 	ldw	r2,-16(fp)
    e248:	1885c83a 	sub	r2,r3,r2
    e24c:	e0bffe15 	stw	r2,-8(fp)
    e250:	00000406 	br	e264 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e254:	00c1ffc4 	movi	r3,2047
    e258:	e0bffc17 	ldw	r2,-16(fp)
    e25c:	1885c83a 	sub	r2,r3,r2
    e260:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
    e264:	e0bffe17 	ldw	r2,-8(fp)
    e268:	10001e26 	beq	r2,zero,e2e4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e26c:	e0fff617 	ldw	r3,-40(fp)
    e270:	e0bffe17 	ldw	r2,-8(fp)
    e274:	1880022e 	bgeu	r3,r2,e280 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e278:	e0bff617 	ldw	r2,-40(fp)
    e27c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e280:	e0bff817 	ldw	r2,-32(fp)
    e284:	10c20e04 	addi	r3,r2,2104
    e288:	e0bffc17 	ldw	r2,-16(fp)
    e28c:	1885883a 	add	r2,r3,r2
    e290:	e1bffe17 	ldw	r6,-8(fp)
    e294:	e17ff717 	ldw	r5,-36(fp)
    e298:	1009883a 	mov	r4,r2
    e29c:	00060040 	call	6004 <memcpy>
      ptr   += n;
    e2a0:	e0fff717 	ldw	r3,-36(fp)
    e2a4:	e0bffe17 	ldw	r2,-8(fp)
    e2a8:	1885883a 	add	r2,r3,r2
    e2ac:	e0bff715 	stw	r2,-36(fp)
      count -= n;
    e2b0:	e0fff617 	ldw	r3,-40(fp)
    e2b4:	e0bffe17 	ldw	r2,-8(fp)
    e2b8:	1885c83a 	sub	r2,r3,r2
    e2bc:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e2c0:	e0fffc17 	ldw	r3,-16(fp)
    e2c4:	e0bffe17 	ldw	r2,-8(fp)
    e2c8:	1885883a 	add	r2,r3,r2
    e2cc:	10c1ffcc 	andi	r3,r2,2047
    e2d0:	e0bff817 	ldw	r2,-32(fp)
    e2d4:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
    e2d8:	e0bff617 	ldw	r2,-40(fp)
    e2dc:	00bfc716 	blt	zero,r2,e1fc <altera_avalon_jtag_uart_write+0x30>
    e2e0:	00000106 	br	e2e8 <altera_avalon_jtag_uart_write+0x11c>
        break;
    e2e4:	0001883a 	nop
  NIOS2_READ_STATUS (context);
    e2e8:	0005303a 	rdctl	r2,status
    e2ec:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e2f0:	e0fff917 	ldw	r3,-28(fp)
    e2f4:	00bfff84 	movi	r2,-2
    e2f8:	1884703a 	and	r2,r3,r2
    e2fc:	1001703a 	wrctl	status,r2
  return context;
    e300:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e304:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e308:	e0bff817 	ldw	r2,-32(fp)
    e30c:	10800817 	ldw	r2,32(r2)
    e310:	10c00094 	ori	r3,r2,2
    e314:	e0bff817 	ldw	r2,-32(fp)
    e318:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e31c:	e0bff817 	ldw	r2,-32(fp)
    e320:	10800017 	ldw	r2,0(r2)
    e324:	10800104 	addi	r2,r2,4
    e328:	1007883a 	mov	r3,r2
    e32c:	e0bff817 	ldw	r2,-32(fp)
    e330:	10800817 	ldw	r2,32(r2)
    e334:	18800035 	stwio	r2,0(r3)
    e338:	e0bffb17 	ldw	r2,-20(fp)
    e33c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
    e340:	e0bffa17 	ldw	r2,-24(fp)
    e344:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e348:	e0bff617 	ldw	r2,-40(fp)
    e34c:	0080100e 	bge	zero,r2,e390 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e350:	e0bff517 	ldw	r2,-44(fp)
    e354:	1090000c 	andi	r2,r2,16384
    e358:	1000101e 	bne	r2,zero,e39c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e35c:	0001883a 	nop
    e360:	e0bff817 	ldw	r2,-32(fp)
    e364:	10800d17 	ldw	r2,52(r2)
    e368:	e0ffff17 	ldw	r3,-4(fp)
    e36c:	1880051e 	bne	r3,r2,e384 <altera_avalon_jtag_uart_write+0x1b8>
    e370:	e0bff817 	ldw	r2,-32(fp)
    e374:	10c00917 	ldw	r3,36(r2)
    e378:	e0bff817 	ldw	r2,-32(fp)
    e37c:	10800117 	ldw	r2,4(r2)
    e380:	18bff736 	bltu	r3,r2,e360 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e384:	e0bff817 	ldw	r2,-32(fp)
    e388:	10800917 	ldw	r2,36(r2)
    e38c:	1000051e 	bne	r2,zero,e3a4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e390:	e0bff617 	ldw	r2,-40(fp)
    e394:	00bfd016 	blt	zero,r2,e2d8 <altera_avalon_jtag_uart_write+0x10c>
    e398:	00000306 	br	e3a8 <altera_avalon_jtag_uart_write+0x1dc>
        break;
    e39c:	0001883a 	nop
    e3a0:	00000106 	br	e3a8 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    e3a4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e3a8:	e0fff717 	ldw	r3,-36(fp)
    e3ac:	e0bffd17 	ldw	r2,-12(fp)
    e3b0:	18800426 	beq	r3,r2,e3c4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e3b4:	e0fff717 	ldw	r3,-36(fp)
    e3b8:	e0bffd17 	ldw	r2,-12(fp)
    e3bc:	1885c83a 	sub	r2,r3,r2
    e3c0:	00000606 	br	e3dc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e3c4:	e0bff517 	ldw	r2,-44(fp)
    e3c8:	1090000c 	andi	r2,r2,16384
    e3cc:	10000226 	beq	r2,zero,e3d8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e3d0:	00bffd44 	movi	r2,-11
    e3d4:	00000106 	br	e3dc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e3d8:	00bffec4 	movi	r2,-5
}
    e3dc:	e037883a 	mov	sp,fp
    e3e0:	dfc00117 	ldw	ra,4(sp)
    e3e4:	df000017 	ldw	fp,0(sp)
    e3e8:	dec00204 	addi	sp,sp,8
    e3ec:	f800283a 	ret

0000e3f0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e3f0:	defff504 	addi	sp,sp,-44
    e3f4:	df000a15 	stw	fp,40(sp)
    e3f8:	df000a04 	addi	fp,sp,40
    e3fc:	e13ff915 	stw	r4,-28(fp)
    e400:	e17ff815 	stw	r5,-32(fp)
    e404:	e1bff715 	stw	r6,-36(fp)
    e408:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e40c:	e03fff15 	stw	zero,-4(fp)
    e410:	d0a73c17 	ldw	r2,-25360(gp)
  
  if (alt_ticks_per_second ())
    e414:	10003c26 	beq	r2,zero,e508 <alt_alarm_start+0x118>
  {
    if (alarm)
    e418:	e0bff917 	ldw	r2,-28(fp)
    e41c:	10003826 	beq	r2,zero,e500 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    e420:	e0bff917 	ldw	r2,-28(fp)
    e424:	e0fff717 	ldw	r3,-36(fp)
    e428:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e42c:	e0bff917 	ldw	r2,-28(fp)
    e430:	e0fff617 	ldw	r3,-40(fp)
    e434:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
    e438:	0005303a 	rdctl	r2,status
    e43c:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e440:	e0fffd17 	ldw	r3,-12(fp)
    e444:	00bfff84 	movi	r2,-2
    e448:	1884703a 	and	r2,r3,r2
    e44c:	1001703a 	wrctl	status,r2
  return context;
    e450:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
    e454:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e458:	d0a73d17 	ldw	r2,-25356(gp)
      
      current_nticks = alt_nticks();
    e45c:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e460:	e0fff817 	ldw	r3,-32(fp)
    e464:	e0bfff17 	ldw	r2,-4(fp)
    e468:	1885883a 	add	r2,r3,r2
    e46c:	10c00044 	addi	r3,r2,1
    e470:	e0bff917 	ldw	r2,-28(fp)
    e474:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e478:	e0bff917 	ldw	r2,-28(fp)
    e47c:	10c00217 	ldw	r3,8(r2)
    e480:	e0bfff17 	ldw	r2,-4(fp)
    e484:	1880042e 	bgeu	r3,r2,e498 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    e488:	e0bff917 	ldw	r2,-28(fp)
    e48c:	00c00044 	movi	r3,1
    e490:	10c00405 	stb	r3,16(r2)
    e494:	00000206 	br	e4a0 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    e498:	e0bff917 	ldw	r2,-28(fp)
    e49c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e4a0:	e0bff917 	ldw	r2,-28(fp)
    e4a4:	d0e01104 	addi	r3,gp,-32700
    e4a8:	e0fffb15 	stw	r3,-20(fp)
    e4ac:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e4b0:	e0bffa17 	ldw	r2,-24(fp)
    e4b4:	e0fffb17 	ldw	r3,-20(fp)
    e4b8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e4bc:	e0bffb17 	ldw	r2,-20(fp)
    e4c0:	10c00017 	ldw	r3,0(r2)
    e4c4:	e0bffa17 	ldw	r2,-24(fp)
    e4c8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e4cc:	e0bffb17 	ldw	r2,-20(fp)
    e4d0:	10800017 	ldw	r2,0(r2)
    e4d4:	e0fffa17 	ldw	r3,-24(fp)
    e4d8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e4dc:	e0bffb17 	ldw	r2,-20(fp)
    e4e0:	e0fffa17 	ldw	r3,-24(fp)
    e4e4:	10c00015 	stw	r3,0(r2)
    e4e8:	e0bffe17 	ldw	r2,-8(fp)
    e4ec:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    e4f0:	e0bffc17 	ldw	r2,-16(fp)
    e4f4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e4f8:	0005883a 	mov	r2,zero
    e4fc:	00000306 	br	e50c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    e500:	00bffa84 	movi	r2,-22
    e504:	00000106 	br	e50c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    e508:	00bfde84 	movi	r2,-134
  }
}
    e50c:	e037883a 	mov	sp,fp
    e510:	df000017 	ldw	fp,0(sp)
    e514:	dec00104 	addi	sp,sp,4
    e518:	f800283a 	ret

0000e51c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e51c:	deffff04 	addi	sp,sp,-4
    e520:	df000015 	stw	fp,0(sp)
    e524:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e528:	0001883a 	nop
    e52c:	e037883a 	mov	sp,fp
    e530:	df000017 	ldw	fp,0(sp)
    e534:	dec00104 	addi	sp,sp,4
    e538:	f800283a 	ret

0000e53c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e53c:	defffe04 	addi	sp,sp,-8
    e540:	dfc00115 	stw	ra,4(sp)
    e544:	df000015 	stw	fp,0(sp)
    e548:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e54c:	d0a00e17 	ldw	r2,-32712(gp)
    e550:	10000326 	beq	r2,zero,e560 <alt_get_errno+0x24>
    e554:	d0a00e17 	ldw	r2,-32712(gp)
    e558:	103ee83a 	callr	r2
    e55c:	00000106 	br	e564 <alt_get_errno+0x28>
    e560:	d0a73604 	addi	r2,gp,-25384
}
    e564:	e037883a 	mov	sp,fp
    e568:	dfc00117 	ldw	ra,4(sp)
    e56c:	df000017 	ldw	fp,0(sp)
    e570:	dec00204 	addi	sp,sp,8
    e574:	f800283a 	ret

0000e578 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e578:	defffa04 	addi	sp,sp,-24
    e57c:	dfc00515 	stw	ra,20(sp)
    e580:	df000415 	stw	fp,16(sp)
    e584:	df000404 	addi	fp,sp,16
    e588:	e13ffd15 	stw	r4,-12(fp)
    e58c:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e590:	e0bffd17 	ldw	r2,-12(fp)
    e594:	10000326 	beq	r2,zero,e5a4 <alt_dev_llist_insert+0x2c>
    e598:	e0bffd17 	ldw	r2,-12(fp)
    e59c:	10800217 	ldw	r2,8(r2)
    e5a0:	1000061e 	bne	r2,zero,e5bc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e5a4:	000e53c0 	call	e53c <alt_get_errno>
    e5a8:	1007883a 	mov	r3,r2
    e5ac:	00800584 	movi	r2,22
    e5b0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e5b4:	00bffa84 	movi	r2,-22
    e5b8:	00001306 	br	e608 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e5bc:	e0bffd17 	ldw	r2,-12(fp)
    e5c0:	e0fffc17 	ldw	r3,-16(fp)
    e5c4:	e0ffff15 	stw	r3,-4(fp)
    e5c8:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e5cc:	e0bffe17 	ldw	r2,-8(fp)
    e5d0:	e0ffff17 	ldw	r3,-4(fp)
    e5d4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e5d8:	e0bfff17 	ldw	r2,-4(fp)
    e5dc:	10c00017 	ldw	r3,0(r2)
    e5e0:	e0bffe17 	ldw	r2,-8(fp)
    e5e4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e5e8:	e0bfff17 	ldw	r2,-4(fp)
    e5ec:	10800017 	ldw	r2,0(r2)
    e5f0:	e0fffe17 	ldw	r3,-8(fp)
    e5f4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e5f8:	e0bfff17 	ldw	r2,-4(fp)
    e5fc:	e0fffe17 	ldw	r3,-8(fp)
    e600:	10c00015 	stw	r3,0(r2)

  return 0;  
    e604:	0005883a 	mov	r2,zero
}
    e608:	e037883a 	mov	sp,fp
    e60c:	dfc00117 	ldw	ra,4(sp)
    e610:	df000017 	ldw	fp,0(sp)
    e614:	dec00204 	addi	sp,sp,8
    e618:	f800283a 	ret

0000e61c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    e61c:	defffd04 	addi	sp,sp,-12
    e620:	dfc00215 	stw	ra,8(sp)
    e624:	df000115 	stw	fp,4(sp)
    e628:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e62c:	00800074 	movhi	r2,1
    e630:	10bd2d04 	addi	r2,r2,-2892
    e634:	e0bfff15 	stw	r2,-4(fp)
    e638:	00000606 	br	e654 <_do_ctors+0x38>
        (*ctor) (); 
    e63c:	e0bfff17 	ldw	r2,-4(fp)
    e640:	10800017 	ldw	r2,0(r2)
    e644:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e648:	e0bfff17 	ldw	r2,-4(fp)
    e64c:	10bfff04 	addi	r2,r2,-4
    e650:	e0bfff15 	stw	r2,-4(fp)
    e654:	e0ffff17 	ldw	r3,-4(fp)
    e658:	00800074 	movhi	r2,1
    e65c:	10bd2e04 	addi	r2,r2,-2888
    e660:	18bff62e 	bgeu	r3,r2,e63c <_do_ctors+0x20>
}
    e664:	0001883a 	nop
    e668:	e037883a 	mov	sp,fp
    e66c:	dfc00117 	ldw	ra,4(sp)
    e670:	df000017 	ldw	fp,0(sp)
    e674:	dec00204 	addi	sp,sp,8
    e678:	f800283a 	ret

0000e67c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    e67c:	defffd04 	addi	sp,sp,-12
    e680:	dfc00215 	stw	ra,8(sp)
    e684:	df000115 	stw	fp,4(sp)
    e688:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e68c:	00800074 	movhi	r2,1
    e690:	10bd2d04 	addi	r2,r2,-2892
    e694:	e0bfff15 	stw	r2,-4(fp)
    e698:	00000606 	br	e6b4 <_do_dtors+0x38>
        (*dtor) (); 
    e69c:	e0bfff17 	ldw	r2,-4(fp)
    e6a0:	10800017 	ldw	r2,0(r2)
    e6a4:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e6a8:	e0bfff17 	ldw	r2,-4(fp)
    e6ac:	10bfff04 	addi	r2,r2,-4
    e6b0:	e0bfff15 	stw	r2,-4(fp)
    e6b4:	e0ffff17 	ldw	r3,-4(fp)
    e6b8:	00800074 	movhi	r2,1
    e6bc:	10bd2e04 	addi	r2,r2,-2888
    e6c0:	18bff62e 	bgeu	r3,r2,e69c <_do_dtors+0x20>
}
    e6c4:	0001883a 	nop
    e6c8:	e037883a 	mov	sp,fp
    e6cc:	dfc00117 	ldw	ra,4(sp)
    e6d0:	df000017 	ldw	fp,0(sp)
    e6d4:	dec00204 	addi	sp,sp,8
    e6d8:	f800283a 	ret

0000e6dc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    e6dc:	deffff04 	addi	sp,sp,-4
    e6e0:	df000015 	stw	fp,0(sp)
    e6e4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    e6e8:	0001883a 	nop
    e6ec:	e037883a 	mov	sp,fp
    e6f0:	df000017 	ldw	fp,0(sp)
    e6f4:	dec00104 	addi	sp,sp,4
    e6f8:	f800283a 	ret

0000e6fc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e6fc:	defff904 	addi	sp,sp,-28
    e700:	dfc00615 	stw	ra,24(sp)
    e704:	df000515 	stw	fp,20(sp)
    e708:	df000504 	addi	fp,sp,20
    e70c:	e13fff15 	stw	r4,-4(fp)
    e710:	e17ffe15 	stw	r5,-8(fp)
    e714:	e1bffd15 	stw	r6,-12(fp)
    e718:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    e71c:	e0800217 	ldw	r2,8(fp)
    e720:	d8800015 	stw	r2,0(sp)
    e724:	e1fffc17 	ldw	r7,-16(fp)
    e728:	e1bffd17 	ldw	r6,-12(fp)
    e72c:	e17ffe17 	ldw	r5,-8(fp)
    e730:	e13fff17 	ldw	r4,-4(fp)
    e734:	000e8ac0 	call	e8ac <alt_iic_isr_register>
}  
    e738:	e037883a 	mov	sp,fp
    e73c:	dfc00117 	ldw	ra,4(sp)
    e740:	df000017 	ldw	fp,0(sp)
    e744:	dec00204 	addi	sp,sp,8
    e748:	f800283a 	ret

0000e74c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    e74c:	defff904 	addi	sp,sp,-28
    e750:	df000615 	stw	fp,24(sp)
    e754:	df000604 	addi	fp,sp,24
    e758:	e13ffb15 	stw	r4,-20(fp)
    e75c:	e17ffa15 	stw	r5,-24(fp)
    e760:	e0bffa17 	ldw	r2,-24(fp)
    e764:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    e768:	0005303a 	rdctl	r2,status
    e76c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e770:	e0fffe17 	ldw	r3,-8(fp)
    e774:	00bfff84 	movi	r2,-2
    e778:	1884703a 	and	r2,r3,r2
    e77c:	1001703a 	wrctl	status,r2
  return context;
    e780:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e784:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
    e788:	00c00044 	movi	r3,1
    e78c:	e0bfff17 	ldw	r2,-4(fp)
    e790:	1884983a 	sll	r2,r3,r2
    e794:	1007883a 	mov	r3,r2
    e798:	d0a73b17 	ldw	r2,-25364(gp)
    e79c:	1884b03a 	or	r2,r3,r2
    e7a0:	d0a73b15 	stw	r2,-25364(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e7a4:	d0a73b17 	ldw	r2,-25364(gp)
    e7a8:	100170fa 	wrctl	ienable,r2
    e7ac:	e0bffd17 	ldw	r2,-12(fp)
    e7b0:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    e7b4:	e0bffc17 	ldw	r2,-16(fp)
    e7b8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e7bc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    e7c0:	0001883a 	nop
}
    e7c4:	e037883a 	mov	sp,fp
    e7c8:	df000017 	ldw	fp,0(sp)
    e7cc:	dec00104 	addi	sp,sp,4
    e7d0:	f800283a 	ret

0000e7d4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    e7d4:	defff904 	addi	sp,sp,-28
    e7d8:	df000615 	stw	fp,24(sp)
    e7dc:	df000604 	addi	fp,sp,24
    e7e0:	e13ffb15 	stw	r4,-20(fp)
    e7e4:	e17ffa15 	stw	r5,-24(fp)
    e7e8:	e0bffa17 	ldw	r2,-24(fp)
    e7ec:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
    e7f0:	0005303a 	rdctl	r2,status
    e7f4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e7f8:	e0fffe17 	ldw	r3,-8(fp)
    e7fc:	00bfff84 	movi	r2,-2
    e800:	1884703a 	and	r2,r3,r2
    e804:	1001703a 	wrctl	status,r2
  return context;
    e808:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
    e80c:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
    e810:	00c00044 	movi	r3,1
    e814:	e0bfff17 	ldw	r2,-4(fp)
    e818:	1884983a 	sll	r2,r3,r2
    e81c:	0084303a 	nor	r2,zero,r2
    e820:	1007883a 	mov	r3,r2
    e824:	d0a73b17 	ldw	r2,-25364(gp)
    e828:	1884703a 	and	r2,r3,r2
    e82c:	d0a73b15 	stw	r2,-25364(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e830:	d0a73b17 	ldw	r2,-25364(gp)
    e834:	100170fa 	wrctl	ienable,r2
    e838:	e0bffd17 	ldw	r2,-12(fp)
    e83c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
    e840:	e0bffc17 	ldw	r2,-16(fp)
    e844:	1001703a 	wrctl	status,r2
  return 0;
    e848:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    e84c:	0001883a 	nop
}
    e850:	e037883a 	mov	sp,fp
    e854:	df000017 	ldw	fp,0(sp)
    e858:	dec00104 	addi	sp,sp,4
    e85c:	f800283a 	ret

0000e860 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    e860:	defffc04 	addi	sp,sp,-16
    e864:	df000315 	stw	fp,12(sp)
    e868:	df000304 	addi	fp,sp,12
    e86c:	e13ffe15 	stw	r4,-8(fp)
    e870:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    e874:	000530fa 	rdctl	r2,ienable
    e878:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    e87c:	00c00044 	movi	r3,1
    e880:	e0bffd17 	ldw	r2,-12(fp)
    e884:	1884983a 	sll	r2,r3,r2
    e888:	1007883a 	mov	r3,r2
    e88c:	e0bfff17 	ldw	r2,-4(fp)
    e890:	1884703a 	and	r2,r3,r2
    e894:	1004c03a 	cmpne	r2,r2,zero
    e898:	10803fcc 	andi	r2,r2,255
}
    e89c:	e037883a 	mov	sp,fp
    e8a0:	df000017 	ldw	fp,0(sp)
    e8a4:	dec00104 	addi	sp,sp,4
    e8a8:	f800283a 	ret

0000e8ac <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e8ac:	defff504 	addi	sp,sp,-44
    e8b0:	dfc00a15 	stw	ra,40(sp)
    e8b4:	df000915 	stw	fp,36(sp)
    e8b8:	df000904 	addi	fp,sp,36
    e8bc:	e13ffa15 	stw	r4,-24(fp)
    e8c0:	e17ff915 	stw	r5,-28(fp)
    e8c4:	e1bff815 	stw	r6,-32(fp)
    e8c8:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
    e8cc:	00bffa84 	movi	r2,-22
    e8d0:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    e8d4:	e0bff917 	ldw	r2,-28(fp)
    e8d8:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    e8dc:	e0bffe17 	ldw	r2,-8(fp)
    e8e0:	10800808 	cmpgei	r2,r2,32
    e8e4:	1000241e 	bne	r2,zero,e978 <alt_iic_isr_register+0xcc>
  NIOS2_READ_STATUS (context);
    e8e8:	0005303a 	rdctl	r2,status
    e8ec:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e8f0:	e0fffc17 	ldw	r3,-16(fp)
    e8f4:	00bfff84 	movi	r2,-2
    e8f8:	1884703a 	and	r2,r3,r2
    e8fc:	1001703a 	wrctl	status,r2
  return context;
    e900:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    e904:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
    e908:	e0bffe17 	ldw	r2,-8(fp)
    e90c:	100890fa 	slli	r4,r2,3
    e910:	e0fff817 	ldw	r3,-32(fp)
    e914:	00800074 	movhi	r2,1
    e918:	2085883a 	add	r2,r4,r2
    e91c:	10cd3515 	stw	r3,13524(r2)
    alt_irq[id].context = isr_context;
    e920:	e0bffe17 	ldw	r2,-8(fp)
    e924:	100890fa 	slli	r4,r2,3
    e928:	e0fff717 	ldw	r3,-36(fp)
    e92c:	00800074 	movhi	r2,1
    e930:	2085883a 	add	r2,r4,r2
    e934:	10cd3615 	stw	r3,13528(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    e938:	e0bff817 	ldw	r2,-32(fp)
    e93c:	10000526 	beq	r2,zero,e954 <alt_iic_isr_register+0xa8>
    e940:	e0bffe17 	ldw	r2,-8(fp)
    e944:	100b883a 	mov	r5,r2
    e948:	e13ffa17 	ldw	r4,-24(fp)
    e94c:	000e74c0 	call	e74c <alt_ic_irq_enable>
    e950:	00000406 	br	e964 <alt_iic_isr_register+0xb8>
    e954:	e0bffe17 	ldw	r2,-8(fp)
    e958:	100b883a 	mov	r5,r2
    e95c:	e13ffa17 	ldw	r4,-24(fp)
    e960:	000e7d40 	call	e7d4 <alt_ic_irq_disable>
    e964:	e0bfff15 	stw	r2,-4(fp)
    e968:	e0bffd17 	ldw	r2,-12(fp)
    e96c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
    e970:	e0bffb17 	ldw	r2,-20(fp)
    e974:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    e978:	e0bfff17 	ldw	r2,-4(fp)
}
    e97c:	e037883a 	mov	sp,fp
    e980:	dfc00117 	ldw	ra,4(sp)
    e984:	df000017 	ldw	fp,0(sp)
    e988:	dec00204 	addi	sp,sp,8
    e98c:	f800283a 	ret

0000e990 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    e990:	defff904 	addi	sp,sp,-28
    e994:	dfc00615 	stw	ra,24(sp)
    e998:	df000515 	stw	fp,20(sp)
    e99c:	df000504 	addi	fp,sp,20
    e9a0:	e13ffe15 	stw	r4,-8(fp)
    e9a4:	e17ffd15 	stw	r5,-12(fp)
    e9a8:	e1bffc15 	stw	r6,-16(fp)
    e9ac:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
    e9b0:	e1bffb17 	ldw	r6,-20(fp)
    e9b4:	e17ffc17 	ldw	r5,-16(fp)
    e9b8:	e13ffd17 	ldw	r4,-12(fp)
    e9bc:	000ebf80 	call	ebf8 <open>
    e9c0:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
    e9c4:	e0bfff17 	ldw	r2,-4(fp)
    e9c8:	10002016 	blt	r2,zero,ea4c <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
    e9cc:	e0ffff17 	ldw	r3,-4(fp)
    e9d0:	1805883a 	mov	r2,r3
    e9d4:	1085883a 	add	r2,r2,r2
    e9d8:	10c5883a 	add	r2,r2,r3
    e9dc:	100490ba 	slli	r2,r2,2
    e9e0:	00c00074 	movhi	r3,1
    e9e4:	10c7883a 	add	r3,r2,r3
    e9e8:	18c17417 	ldw	r3,1488(r3)
    e9ec:	e0bffe17 	ldw	r2,-8(fp)
    e9f0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    e9f4:	e0ffff17 	ldw	r3,-4(fp)
    e9f8:	1805883a 	mov	r2,r3
    e9fc:	1085883a 	add	r2,r2,r2
    ea00:	10c5883a 	add	r2,r2,r3
    ea04:	100490ba 	slli	r2,r2,2
    ea08:	00c00074 	movhi	r3,1
    ea0c:	10c7883a 	add	r3,r2,r3
    ea10:	18c17517 	ldw	r3,1492(r3)
    ea14:	e0bffe17 	ldw	r2,-8(fp)
    ea18:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    ea1c:	e0ffff17 	ldw	r3,-4(fp)
    ea20:	1805883a 	mov	r2,r3
    ea24:	1085883a 	add	r2,r2,r2
    ea28:	10c5883a 	add	r2,r2,r3
    ea2c:	100490ba 	slli	r2,r2,2
    ea30:	00c00074 	movhi	r3,1
    ea34:	10c7883a 	add	r3,r2,r3
    ea38:	18c17617 	ldw	r3,1496(r3)
    ea3c:	e0bffe17 	ldw	r2,-8(fp)
    ea40:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    ea44:	e13fff17 	ldw	r4,-4(fp)
    ea48:	000d6780 	call	d678 <alt_release_fd>
  }
} 
    ea4c:	0001883a 	nop
    ea50:	e037883a 	mov	sp,fp
    ea54:	dfc00117 	ldw	ra,4(sp)
    ea58:	df000017 	ldw	fp,0(sp)
    ea5c:	dec00204 	addi	sp,sp,8
    ea60:	f800283a 	ret

0000ea64 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    ea64:	defffb04 	addi	sp,sp,-20
    ea68:	dfc00415 	stw	ra,16(sp)
    ea6c:	df000315 	stw	fp,12(sp)
    ea70:	df000304 	addi	fp,sp,12
    ea74:	e13fff15 	stw	r4,-4(fp)
    ea78:	e17ffe15 	stw	r5,-8(fp)
    ea7c:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    ea80:	01c07fc4 	movi	r7,511
    ea84:	01800044 	movi	r6,1
    ea88:	e17fff17 	ldw	r5,-4(fp)
    ea8c:	01000074 	movhi	r4,1
    ea90:	21017704 	addi	r4,r4,1500
    ea94:	000e9900 	call	e990 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    ea98:	01c07fc4 	movi	r7,511
    ea9c:	000d883a 	mov	r6,zero
    eaa0:	e17ffe17 	ldw	r5,-8(fp)
    eaa4:	01000074 	movhi	r4,1
    eaa8:	21017404 	addi	r4,r4,1488
    eaac:	000e9900 	call	e990 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    eab0:	01c07fc4 	movi	r7,511
    eab4:	01800044 	movi	r6,1
    eab8:	e17ffd17 	ldw	r5,-12(fp)
    eabc:	01000074 	movhi	r4,1
    eac0:	21017a04 	addi	r4,r4,1512
    eac4:	000e9900 	call	e990 <alt_open_fd>
}  
    eac8:	0001883a 	nop
    eacc:	e037883a 	mov	sp,fp
    ead0:	dfc00117 	ldw	ra,4(sp)
    ead4:	df000017 	ldw	fp,0(sp)
    ead8:	dec00204 	addi	sp,sp,8
    eadc:	f800283a 	ret

0000eae0 <alt_get_errno>:
{
    eae0:	defffe04 	addi	sp,sp,-8
    eae4:	dfc00115 	stw	ra,4(sp)
    eae8:	df000015 	stw	fp,0(sp)
    eaec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    eaf0:	d0a00e17 	ldw	r2,-32712(gp)
    eaf4:	10000326 	beq	r2,zero,eb04 <alt_get_errno+0x24>
    eaf8:	d0a00e17 	ldw	r2,-32712(gp)
    eafc:	103ee83a 	callr	r2
    eb00:	00000106 	br	eb08 <alt_get_errno+0x28>
    eb04:	d0a73604 	addi	r2,gp,-25384
}
    eb08:	e037883a 	mov	sp,fp
    eb0c:	dfc00117 	ldw	ra,4(sp)
    eb10:	df000017 	ldw	fp,0(sp)
    eb14:	dec00204 	addi	sp,sp,8
    eb18:	f800283a 	ret

0000eb1c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    eb1c:	defffd04 	addi	sp,sp,-12
    eb20:	df000215 	stw	fp,8(sp)
    eb24:	df000204 	addi	fp,sp,8
    eb28:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    eb2c:	e0bffe17 	ldw	r2,-8(fp)
    eb30:	10800217 	ldw	r2,8(r2)
    eb34:	10d00034 	orhi	r3,r2,16384
    eb38:	e0bffe17 	ldw	r2,-8(fp)
    eb3c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    eb40:	e03fff15 	stw	zero,-4(fp)
    eb44:	00002306 	br	ebd4 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    eb48:	e0ffff17 	ldw	r3,-4(fp)
    eb4c:	1805883a 	mov	r2,r3
    eb50:	1085883a 	add	r2,r2,r2
    eb54:	10c5883a 	add	r2,r2,r3
    eb58:	100490ba 	slli	r2,r2,2
    eb5c:	00c00074 	movhi	r3,1
    eb60:	10c7883a 	add	r3,r2,r3
    eb64:	18c17417 	ldw	r3,1488(r3)
    eb68:	e0bffe17 	ldw	r2,-8(fp)
    eb6c:	10800017 	ldw	r2,0(r2)
    eb70:	1880151e 	bne	r3,r2,ebc8 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    eb74:	e0ffff17 	ldw	r3,-4(fp)
    eb78:	1805883a 	mov	r2,r3
    eb7c:	1085883a 	add	r2,r2,r2
    eb80:	10c5883a 	add	r2,r2,r3
    eb84:	100490ba 	slli	r2,r2,2
    eb88:	00c00074 	movhi	r3,1
    eb8c:	10c7883a 	add	r3,r2,r3
    eb90:	18817617 	ldw	r2,1496(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
    eb94:	10000c0e 	bge	r2,zero,ebc8 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
    eb98:	e0ffff17 	ldw	r3,-4(fp)
    eb9c:	1805883a 	mov	r2,r3
    eba0:	1085883a 	add	r2,r2,r2
    eba4:	10c5883a 	add	r2,r2,r3
    eba8:	100490ba 	slli	r2,r2,2
    ebac:	00c00074 	movhi	r3,1
    ebb0:	18c17404 	addi	r3,r3,1488
    ebb4:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ebb8:	e0fffe17 	ldw	r3,-8(fp)
    ebbc:	18800226 	beq	r3,r2,ebc8 <alt_file_locked+0xac>
    {
      return -EACCES;
    ebc0:	00bffcc4 	movi	r2,-13
    ebc4:	00000806 	br	ebe8 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
    ebc8:	e0bfff17 	ldw	r2,-4(fp)
    ebcc:	10800044 	addi	r2,r2,1
    ebd0:	e0bfff15 	stw	r2,-4(fp)
    ebd4:	d0a00d17 	ldw	r2,-32716(gp)
    ebd8:	1007883a 	mov	r3,r2
    ebdc:	e0bfff17 	ldw	r2,-4(fp)
    ebe0:	18bfd92e 	bgeu	r3,r2,eb48 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    ebe4:	0005883a 	mov	r2,zero
}
    ebe8:	e037883a 	mov	sp,fp
    ebec:	df000017 	ldw	fp,0(sp)
    ebf0:	dec00104 	addi	sp,sp,4
    ebf4:	f800283a 	ret

0000ebf8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    ebf8:	defff604 	addi	sp,sp,-40
    ebfc:	dfc00915 	stw	ra,36(sp)
    ec00:	df000815 	stw	fp,32(sp)
    ec04:	df000804 	addi	fp,sp,32
    ec08:	e13ffa15 	stw	r4,-24(fp)
    ec0c:	e17ff915 	stw	r5,-28(fp)
    ec10:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    ec14:	00bfffc4 	movi	r2,-1
    ec18:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
    ec1c:	00bffb44 	movi	r2,-19
    ec20:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
    ec24:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    ec28:	d1600b04 	addi	r5,gp,-32724
    ec2c:	e13ffa17 	ldw	r4,-24(fp)
    ec30:	000ef200 	call	ef20 <alt_find_dev>
    ec34:	e0bfff15 	stw	r2,-4(fp)
    ec38:	e0bfff17 	ldw	r2,-4(fp)
    ec3c:	1000051e 	bne	r2,zero,ec54 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    ec40:	e13ffa17 	ldw	r4,-24(fp)
    ec44:	000efb00 	call	efb0 <alt_find_file>
    ec48:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
    ec4c:	00800044 	movi	r2,1
    ec50:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    ec54:	e0bfff17 	ldw	r2,-4(fp)
    ec58:	10002c26 	beq	r2,zero,ed0c <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
    ec5c:	e13fff17 	ldw	r4,-4(fp)
    ec60:	000f0b80 	call	f0b8 <alt_get_fd>
    ec64:	e0bffe15 	stw	r2,-8(fp)
    ec68:	e0bffe17 	ldw	r2,-8(fp)
    ec6c:	1000030e 	bge	r2,zero,ec7c <open+0x84>
    {
      status = index;
    ec70:	e0bffe17 	ldw	r2,-8(fp)
    ec74:	e0bffd15 	stw	r2,-12(fp)
    ec78:	00002606 	br	ed14 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
    ec7c:	e0fffe17 	ldw	r3,-8(fp)
    ec80:	1805883a 	mov	r2,r3
    ec84:	1085883a 	add	r2,r2,r2
    ec88:	10c5883a 	add	r2,r2,r3
    ec8c:	100490ba 	slli	r2,r2,2
    ec90:	00c00074 	movhi	r3,1
    ec94:	18c17404 	addi	r3,r3,1488
    ec98:	10c5883a 	add	r2,r2,r3
    ec9c:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    eca0:	e0fff917 	ldw	r3,-28(fp)
    eca4:	00900034 	movhi	r2,16384
    eca8:	10bfffc4 	addi	r2,r2,-1
    ecac:	1886703a 	and	r3,r3,r2
    ecb0:	e0bffb17 	ldw	r2,-20(fp)
    ecb4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    ecb8:	e0bffc17 	ldw	r2,-16(fp)
    ecbc:	1000051e 	bne	r2,zero,ecd4 <open+0xdc>
    ecc0:	e13ffb17 	ldw	r4,-20(fp)
    ecc4:	000eb1c0 	call	eb1c <alt_file_locked>
    ecc8:	e0bffd15 	stw	r2,-12(fp)
    eccc:	e0bffd17 	ldw	r2,-12(fp)
    ecd0:	10001016 	blt	r2,zero,ed14 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    ecd4:	e0bfff17 	ldw	r2,-4(fp)
    ecd8:	10800317 	ldw	r2,12(r2)
    ecdc:	10000826 	beq	r2,zero,ed00 <open+0x108>
    ece0:	e0bfff17 	ldw	r2,-4(fp)
    ece4:	10800317 	ldw	r2,12(r2)
    ece8:	e1fff817 	ldw	r7,-32(fp)
    ecec:	e1bff917 	ldw	r6,-28(fp)
    ecf0:	e17ffa17 	ldw	r5,-24(fp)
    ecf4:	e13ffb17 	ldw	r4,-20(fp)
    ecf8:	103ee83a 	callr	r2
    ecfc:	00000106 	br	ed04 <open+0x10c>
    ed00:	0005883a 	mov	r2,zero
    ed04:	e0bffd15 	stw	r2,-12(fp)
    ed08:	00000206 	br	ed14 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    ed0c:	00bffb44 	movi	r2,-19
    ed10:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    ed14:	e0bffd17 	ldw	r2,-12(fp)
    ed18:	1000090e 	bge	r2,zero,ed40 <open+0x148>
  {
    alt_release_fd (index);  
    ed1c:	e13ffe17 	ldw	r4,-8(fp)
    ed20:	000d6780 	call	d678 <alt_release_fd>
    ALT_ERRNO = -status;
    ed24:	000eae00 	call	eae0 <alt_get_errno>
    ed28:	1007883a 	mov	r3,r2
    ed2c:	e0bffd17 	ldw	r2,-12(fp)
    ed30:	0085c83a 	sub	r2,zero,r2
    ed34:	18800015 	stw	r2,0(r3)
    return -1;
    ed38:	00bfffc4 	movi	r2,-1
    ed3c:	00000106 	br	ed44 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
    ed40:	e0bffe17 	ldw	r2,-8(fp)
}
    ed44:	e037883a 	mov	sp,fp
    ed48:	dfc00117 	ldw	ra,4(sp)
    ed4c:	df000017 	ldw	fp,0(sp)
    ed50:	dec00204 	addi	sp,sp,8
    ed54:	f800283a 	ret

0000ed58 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    ed58:	defffa04 	addi	sp,sp,-24
    ed5c:	df000515 	stw	fp,20(sp)
    ed60:	df000504 	addi	fp,sp,20
    ed64:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
    ed68:	0005303a 	rdctl	r2,status
    ed6c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ed70:	e0fffc17 	ldw	r3,-16(fp)
    ed74:	00bfff84 	movi	r2,-2
    ed78:	1884703a 	and	r2,r3,r2
    ed7c:	1001703a 	wrctl	status,r2
  return context;
    ed80:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    ed84:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
    ed88:	e0bffb17 	ldw	r2,-20(fp)
    ed8c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    ed90:	e0bffd17 	ldw	r2,-12(fp)
    ed94:	10800017 	ldw	r2,0(r2)
    ed98:	e0fffd17 	ldw	r3,-12(fp)
    ed9c:	18c00117 	ldw	r3,4(r3)
    eda0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    eda4:	e0bffd17 	ldw	r2,-12(fp)
    eda8:	10800117 	ldw	r2,4(r2)
    edac:	e0fffd17 	ldw	r3,-12(fp)
    edb0:	18c00017 	ldw	r3,0(r3)
    edb4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    edb8:	e0bffd17 	ldw	r2,-12(fp)
    edbc:	e0fffd17 	ldw	r3,-12(fp)
    edc0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    edc4:	e0bffd17 	ldw	r2,-12(fp)
    edc8:	e0fffd17 	ldw	r3,-12(fp)
    edcc:	10c00015 	stw	r3,0(r2)
    edd0:	e0bfff17 	ldw	r2,-4(fp)
    edd4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
    edd8:	e0bffe17 	ldw	r2,-8(fp)
    eddc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    ede0:	0001883a 	nop
    ede4:	e037883a 	mov	sp,fp
    ede8:	df000017 	ldw	fp,0(sp)
    edec:	dec00104 	addi	sp,sp,4
    edf0:	f800283a 	ret

0000edf4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    edf4:	defffb04 	addi	sp,sp,-20
    edf8:	dfc00415 	stw	ra,16(sp)
    edfc:	df000315 	stw	fp,12(sp)
    ee00:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    ee04:	d0a01117 	ldw	r2,-32700(gp)
    ee08:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    ee0c:	d0a73d17 	ldw	r2,-25356(gp)
    ee10:	10800044 	addi	r2,r2,1
    ee14:	d0a73d15 	stw	r2,-25356(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ee18:	00002e06 	br	eed4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    ee1c:	e0bfff17 	ldw	r2,-4(fp)
    ee20:	10800017 	ldw	r2,0(r2)
    ee24:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    ee28:	e0bfff17 	ldw	r2,-4(fp)
    ee2c:	10800403 	ldbu	r2,16(r2)
    ee30:	10803fcc 	andi	r2,r2,255
    ee34:	10000426 	beq	r2,zero,ee48 <alt_tick+0x54>
    ee38:	d0a73d17 	ldw	r2,-25356(gp)
    ee3c:	1000021e 	bne	r2,zero,ee48 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    ee40:	e0bfff17 	ldw	r2,-4(fp)
    ee44:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    ee48:	e0bfff17 	ldw	r2,-4(fp)
    ee4c:	10800217 	ldw	r2,8(r2)
    ee50:	d0e73d17 	ldw	r3,-25356(gp)
    ee54:	18801d36 	bltu	r3,r2,eecc <alt_tick+0xd8>
    ee58:	e0bfff17 	ldw	r2,-4(fp)
    ee5c:	10800403 	ldbu	r2,16(r2)
    ee60:	10803fcc 	andi	r2,r2,255
    ee64:	1000191e 	bne	r2,zero,eecc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    ee68:	e0bfff17 	ldw	r2,-4(fp)
    ee6c:	10800317 	ldw	r2,12(r2)
    ee70:	e0ffff17 	ldw	r3,-4(fp)
    ee74:	18c00517 	ldw	r3,20(r3)
    ee78:	1809883a 	mov	r4,r3
    ee7c:	103ee83a 	callr	r2
    ee80:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    ee84:	e0bffd17 	ldw	r2,-12(fp)
    ee88:	1000031e 	bne	r2,zero,ee98 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    ee8c:	e13fff17 	ldw	r4,-4(fp)
    ee90:	000ed580 	call	ed58 <alt_alarm_stop>
    ee94:	00000d06 	br	eecc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    ee98:	e0bfff17 	ldw	r2,-4(fp)
    ee9c:	10c00217 	ldw	r3,8(r2)
    eea0:	e0bffd17 	ldw	r2,-12(fp)
    eea4:	1887883a 	add	r3,r3,r2
    eea8:	e0bfff17 	ldw	r2,-4(fp)
    eeac:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    eeb0:	e0bfff17 	ldw	r2,-4(fp)
    eeb4:	10c00217 	ldw	r3,8(r2)
    eeb8:	d0a73d17 	ldw	r2,-25356(gp)
    eebc:	1880032e 	bgeu	r3,r2,eecc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    eec0:	e0bfff17 	ldw	r2,-4(fp)
    eec4:	00c00044 	movi	r3,1
    eec8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    eecc:	e0bffe17 	ldw	r2,-8(fp)
    eed0:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
    eed4:	e0ffff17 	ldw	r3,-4(fp)
    eed8:	d0a01104 	addi	r2,gp,-32700
    eedc:	18bfcf1e 	bne	r3,r2,ee1c <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    eee0:	0001883a 	nop
}
    eee4:	0001883a 	nop
    eee8:	e037883a 	mov	sp,fp
    eeec:	dfc00117 	ldw	ra,4(sp)
    eef0:	df000017 	ldw	fp,0(sp)
    eef4:	dec00204 	addi	sp,sp,8
    eef8:	f800283a 	ret

0000eefc <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    eefc:	deffff04 	addi	sp,sp,-4
    ef00:	df000015 	stw	fp,0(sp)
    ef04:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    ef08:	000170fa 	wrctl	ienable,zero
}
    ef0c:	0001883a 	nop
    ef10:	e037883a 	mov	sp,fp
    ef14:	df000017 	ldw	fp,0(sp)
    ef18:	dec00104 	addi	sp,sp,4
    ef1c:	f800283a 	ret

0000ef20 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    ef20:	defffa04 	addi	sp,sp,-24
    ef24:	dfc00515 	stw	ra,20(sp)
    ef28:	df000415 	stw	fp,16(sp)
    ef2c:	df000404 	addi	fp,sp,16
    ef30:	e13ffd15 	stw	r4,-12(fp)
    ef34:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
    ef38:	e0bffc17 	ldw	r2,-16(fp)
    ef3c:	10800017 	ldw	r2,0(r2)
    ef40:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    ef44:	e13ffd17 	ldw	r4,-12(fp)
    ef48:	00007980 	call	798 <strlen>
    ef4c:	10800044 	addi	r2,r2,1
    ef50:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    ef54:	00000d06 	br	ef8c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    ef58:	e0bfff17 	ldw	r2,-4(fp)
    ef5c:	10800217 	ldw	r2,8(r2)
    ef60:	e0fffe17 	ldw	r3,-8(fp)
    ef64:	180d883a 	mov	r6,r3
    ef68:	e17ffd17 	ldw	r5,-12(fp)
    ef6c:	1009883a 	mov	r4,r2
    ef70:	000f2500 	call	f250 <memcmp>
    ef74:	1000021e 	bne	r2,zero,ef80 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    ef78:	e0bfff17 	ldw	r2,-4(fp)
    ef7c:	00000706 	br	ef9c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    ef80:	e0bfff17 	ldw	r2,-4(fp)
    ef84:	10800017 	ldw	r2,0(r2)
    ef88:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
    ef8c:	e0ffff17 	ldw	r3,-4(fp)
    ef90:	e0bffc17 	ldw	r2,-16(fp)
    ef94:	18bff01e 	bne	r3,r2,ef58 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
    ef98:	0005883a 	mov	r2,zero
}
    ef9c:	e037883a 	mov	sp,fp
    efa0:	dfc00117 	ldw	ra,4(sp)
    efa4:	df000017 	ldw	fp,0(sp)
    efa8:	dec00204 	addi	sp,sp,8
    efac:	f800283a 	ret

0000efb0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    efb0:	defffb04 	addi	sp,sp,-20
    efb4:	dfc00415 	stw	ra,16(sp)
    efb8:	df000315 	stw	fp,12(sp)
    efbc:	df000304 	addi	fp,sp,12
    efc0:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    efc4:	d0a00917 	ldw	r2,-32732(gp)
    efc8:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    efcc:	00003106 	br	f094 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    efd0:	e0bfff17 	ldw	r2,-4(fp)
    efd4:	10800217 	ldw	r2,8(r2)
    efd8:	1009883a 	mov	r4,r2
    efdc:	00007980 	call	798 <strlen>
    efe0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    efe4:	e0bfff17 	ldw	r2,-4(fp)
    efe8:	10c00217 	ldw	r3,8(r2)
    efec:	e0bffe17 	ldw	r2,-8(fp)
    eff0:	10bfffc4 	addi	r2,r2,-1
    eff4:	1885883a 	add	r2,r3,r2
    eff8:	10800003 	ldbu	r2,0(r2)
    effc:	10803fcc 	andi	r2,r2,255
    f000:	1080201c 	xori	r2,r2,128
    f004:	10bfe004 	addi	r2,r2,-128
    f008:	10800bd8 	cmpnei	r2,r2,47
    f00c:	1000031e 	bne	r2,zero,f01c <alt_find_file+0x6c>
    {
      len -= 1;
    f010:	e0bffe17 	ldw	r2,-8(fp)
    f014:	10bfffc4 	addi	r2,r2,-1
    f018:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f01c:	e0bffe17 	ldw	r2,-8(fp)
    f020:	e0fffd17 	ldw	r3,-12(fp)
    f024:	1885883a 	add	r2,r3,r2
    f028:	10800003 	ldbu	r2,0(r2)
    f02c:	10803fcc 	andi	r2,r2,255
    f030:	1080201c 	xori	r2,r2,128
    f034:	10bfe004 	addi	r2,r2,-128
    f038:	10800be0 	cmpeqi	r2,r2,47
    f03c:	1000081e 	bne	r2,zero,f060 <alt_find_file+0xb0>
    f040:	e0bffe17 	ldw	r2,-8(fp)
    f044:	e0fffd17 	ldw	r3,-12(fp)
    f048:	1885883a 	add	r2,r3,r2
    f04c:	10800003 	ldbu	r2,0(r2)
    f050:	10803fcc 	andi	r2,r2,255
    f054:	1080201c 	xori	r2,r2,128
    f058:	10bfe004 	addi	r2,r2,-128
    f05c:	10000a1e 	bne	r2,zero,f088 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    f060:	e0bfff17 	ldw	r2,-4(fp)
    f064:	10800217 	ldw	r2,8(r2)
    f068:	e0fffe17 	ldw	r3,-8(fp)
    f06c:	180d883a 	mov	r6,r3
    f070:	e17ffd17 	ldw	r5,-12(fp)
    f074:	1009883a 	mov	r4,r2
    f078:	000f2500 	call	f250 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
    f07c:	1000021e 	bne	r2,zero,f088 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
    f080:	e0bfff17 	ldw	r2,-4(fp)
    f084:	00000706 	br	f0a4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    f088:	e0bfff17 	ldw	r2,-4(fp)
    f08c:	10800017 	ldw	r2,0(r2)
    f090:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
    f094:	e0ffff17 	ldw	r3,-4(fp)
    f098:	d0a00904 	addi	r2,gp,-32732
    f09c:	18bfcc1e 	bne	r3,r2,efd0 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
    f0a0:	0005883a 	mov	r2,zero
}
    f0a4:	e037883a 	mov	sp,fp
    f0a8:	dfc00117 	ldw	ra,4(sp)
    f0ac:	df000017 	ldw	fp,0(sp)
    f0b0:	dec00204 	addi	sp,sp,8
    f0b4:	f800283a 	ret

0000f0b8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f0b8:	defffc04 	addi	sp,sp,-16
    f0bc:	df000315 	stw	fp,12(sp)
    f0c0:	df000304 	addi	fp,sp,12
    f0c4:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
    f0c8:	00bffa04 	movi	r2,-24
    f0cc:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f0d0:	e03fff15 	stw	zero,-4(fp)
    f0d4:	00001d06 	br	f14c <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
    f0d8:	e0ffff17 	ldw	r3,-4(fp)
    f0dc:	1805883a 	mov	r2,r3
    f0e0:	1085883a 	add	r2,r2,r2
    f0e4:	10c5883a 	add	r2,r2,r3
    f0e8:	100490ba 	slli	r2,r2,2
    f0ec:	00c00074 	movhi	r3,1
    f0f0:	10c7883a 	add	r3,r2,r3
    f0f4:	18817417 	ldw	r2,1488(r3)
    f0f8:	1000111e 	bne	r2,zero,f140 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
    f0fc:	e0ffff17 	ldw	r3,-4(fp)
    f100:	1805883a 	mov	r2,r3
    f104:	1085883a 	add	r2,r2,r2
    f108:	10c5883a 	add	r2,r2,r3
    f10c:	100490ba 	slli	r2,r2,2
    f110:	e13ffd17 	ldw	r4,-12(fp)
    f114:	00c00074 	movhi	r3,1
    f118:	10c7883a 	add	r3,r2,r3
    f11c:	19017415 	stw	r4,1488(r3)
      if (i > alt_max_fd)
    f120:	d0e00d17 	ldw	r3,-32716(gp)
    f124:	e0bfff17 	ldw	r2,-4(fp)
    f128:	1880020e 	bge	r3,r2,f134 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
    f12c:	e0bfff17 	ldw	r2,-4(fp)
    f130:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
    f134:	e0bfff17 	ldw	r2,-4(fp)
    f138:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
    f13c:	00000706 	br	f15c <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
    f140:	e0bfff17 	ldw	r2,-4(fp)
    f144:	10800044 	addi	r2,r2,1
    f148:	e0bfff15 	stw	r2,-4(fp)
    f14c:	e0bfff17 	ldw	r2,-4(fp)
    f150:	10800810 	cmplti	r2,r2,32
    f154:	103fe01e 	bne	r2,zero,f0d8 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
    f158:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f15c:	e0bffe17 	ldw	r2,-8(fp)
}
    f160:	e037883a 	mov	sp,fp
    f164:	df000017 	ldw	fp,0(sp)
    f168:	dec00104 	addi	sp,sp,4
    f16c:	f800283a 	ret

0000f170 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f170:	defffe04 	addi	sp,sp,-8
    f174:	df000115 	stw	fp,4(sp)
    f178:	df000104 	addi	fp,sp,4
    f17c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f180:	e0bfff17 	ldw	r2,-4(fp)
    f184:	10bffe84 	addi	r2,r2,-6
    f188:	10c00428 	cmpgeui	r3,r2,16
    f18c:	1800191e 	bne	r3,zero,f1f4 <alt_exception_cause_generated_bad_addr+0x84>
    f190:	100690ba 	slli	r3,r2,2
    f194:	00800074 	movhi	r2,1
    f198:	1885883a 	add	r2,r3,r2
    f19c:	10bc6917 	ldw	r2,-3676(r2)
    f1a0:	1000683a 	jmp	r2
    f1a4:	0000f1e4 	muli	zero,zero,967
    f1a8:	0000f1e4 	muli	zero,zero,967
    f1ac:	0000f1f4 	movhi	zero,967
    f1b0:	0000f1f4 	movhi	zero,967
    f1b4:	0000f1f4 	movhi	zero,967
    f1b8:	0000f1e4 	muli	zero,zero,967
    f1bc:	0000f1ec 	andhi	zero,zero,967
    f1c0:	0000f1f4 	movhi	zero,967
    f1c4:	0000f1e4 	muli	zero,zero,967
    f1c8:	0000f1e4 	muli	zero,zero,967
    f1cc:	0000f1f4 	movhi	zero,967
    f1d0:	0000f1e4 	muli	zero,zero,967
    f1d4:	0000f1ec 	andhi	zero,zero,967
    f1d8:	0000f1f4 	movhi	zero,967
    f1dc:	0000f1f4 	movhi	zero,967
    f1e0:	0000f1e4 	muli	zero,zero,967
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f1e4:	00800044 	movi	r2,1
    f1e8:	00000306 	br	f1f8 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f1ec:	0005883a 	mov	r2,zero
    f1f0:	00000106 	br	f1f8 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
    f1f4:	0005883a 	mov	r2,zero
  }
}
    f1f8:	e037883a 	mov	sp,fp
    f1fc:	df000017 	ldw	fp,0(sp)
    f200:	dec00104 	addi	sp,sp,4
    f204:	f800283a 	ret

0000f208 <atexit>:
    f208:	200b883a 	mov	r5,r4
    f20c:	000f883a 	mov	r7,zero
    f210:	000d883a 	mov	r6,zero
    f214:	0009883a 	mov	r4,zero
    f218:	000f2dc1 	jmpi	f2dc <__register_exitproc>

0000f21c <exit>:
    f21c:	defffe04 	addi	sp,sp,-8
    f220:	000b883a 	mov	r5,zero
    f224:	dc000015 	stw	r16,0(sp)
    f228:	dfc00115 	stw	ra,4(sp)
    f22c:	2021883a 	mov	r16,r4
    f230:	000f36c0 	call	f36c <__call_exitprocs>
    f234:	00800074 	movhi	r2,1
    f238:	1105f117 	ldw	r4,6084(r2)
    f23c:	20800f17 	ldw	r2,60(r4)
    f240:	10000126 	beq	r2,zero,f248 <exit+0x2c>
    f244:	103ee83a 	callr	r2
    f248:	8009883a 	mov	r4,r16
    f24c:	000f4840 	call	f484 <_exit>

0000f250 <memcmp>:
    f250:	30800130 	cmpltui	r2,r6,4
    f254:	10000b1e 	bne	r2,zero,f284 <memcmp+0x34>
    f258:	2144b03a 	or	r2,r4,r5
    f25c:	108000cc 	andi	r2,r2,3
    f260:	10001a1e 	bne	r2,zero,f2cc <memcmp+0x7c>
    f264:	20c00017 	ldw	r3,0(r4)
    f268:	28800017 	ldw	r2,0(r5)
    f26c:	1880171e 	bne	r3,r2,f2cc <memcmp+0x7c>
    f270:	31bfff04 	addi	r6,r6,-4
    f274:	30800128 	cmpgeui	r2,r6,4
    f278:	21000104 	addi	r4,r4,4
    f27c:	29400104 	addi	r5,r5,4
    f280:	103ff81e 	bne	r2,zero,f264 <memcmp+0x14>
    f284:	30ffffc4 	addi	r3,r6,-1
    f288:	30000e26 	beq	r6,zero,f2c4 <memcmp+0x74>
    f28c:	29800003 	ldbu	r6,0(r5)
    f290:	20800003 	ldbu	r2,0(r4)
    f294:	30800f1e 	bne	r6,r2,f2d4 <memcmp+0x84>
    f298:	18800044 	addi	r2,r3,1
    f29c:	20c00044 	addi	r3,r4,1
    f2a0:	2089883a 	add	r4,r4,r2
    f2a4:	00000506 	br	f2bc <memcmp+0x6c>
    f2a8:	18800003 	ldbu	r2,0(r3)
    f2ac:	29800003 	ldbu	r6,0(r5)
    f2b0:	18c00044 	addi	r3,r3,1
    f2b4:	10803fcc 	andi	r2,r2,255
    f2b8:	1180061e 	bne	r2,r6,f2d4 <memcmp+0x84>
    f2bc:	29400044 	addi	r5,r5,1
    f2c0:	193ff91e 	bne	r3,r4,f2a8 <memcmp+0x58>
    f2c4:	0005883a 	mov	r2,zero
    f2c8:	f800283a 	ret
    f2cc:	30ffffc4 	addi	r3,r6,-1
    f2d0:	003fee06 	br	f28c <memcmp+0x3c>
    f2d4:	1185c83a 	sub	r2,r2,r6
    f2d8:	f800283a 	ret

0000f2dc <__register_exitproc>:
    f2dc:	00800074 	movhi	r2,1
    f2e0:	10c5f117 	ldw	r3,6084(r2)
    f2e4:	18805217 	ldw	r2,328(r3)
    f2e8:	10001726 	beq	r2,zero,f348 <__register_exitproc+0x6c>
    f2ec:	10c00117 	ldw	r3,4(r2)
    f2f0:	1a000808 	cmpgei	r8,r3,32
    f2f4:	40001b1e 	bne	r8,zero,f364 <__register_exitproc+0x88>
    f2f8:	20000b26 	beq	r4,zero,f328 <__register_exitproc+0x4c>
    f2fc:	181090ba 	slli	r8,r3,2
    f300:	02400044 	movi	r9,1
    f304:	48d2983a 	sll	r9,r9,r3
    f308:	1211883a 	add	r8,r2,r8
    f30c:	41802215 	stw	r6,136(r8)
    f310:	11806217 	ldw	r6,392(r2)
    f314:	21000098 	cmpnei	r4,r4,2
    f318:	324cb03a 	or	r6,r6,r9
    f31c:	11806215 	stw	r6,392(r2)
    f320:	41c04215 	stw	r7,264(r8)
    f324:	20000b26 	beq	r4,zero,f354 <__register_exitproc+0x78>
    f328:	19000084 	addi	r4,r3,2
    f32c:	200890ba 	slli	r4,r4,2
    f330:	18c00044 	addi	r3,r3,1
    f334:	10c00115 	stw	r3,4(r2)
    f338:	1105883a 	add	r2,r2,r4
    f33c:	11400015 	stw	r5,0(r2)
    f340:	0005883a 	mov	r2,zero
    f344:	f800283a 	ret
    f348:	18805304 	addi	r2,r3,332
    f34c:	18805215 	stw	r2,328(r3)
    f350:	003fe606 	br	f2ec <__register_exitproc+0x10>
    f354:	11006317 	ldw	r4,396(r2)
    f358:	2252b03a 	or	r9,r4,r9
    f35c:	12406315 	stw	r9,396(r2)
    f360:	003ff106 	br	f328 <__register_exitproc+0x4c>
    f364:	00bfffc4 	movi	r2,-1
    f368:	f800283a 	ret

0000f36c <__call_exitprocs>:
    f36c:	defff704 	addi	sp,sp,-36
    f370:	00800074 	movhi	r2,1
    f374:	ddc00715 	stw	r23,28(sp)
    f378:	15c5f117 	ldw	r23,6084(r2)
    f37c:	dd400515 	stw	r21,20(sp)
    f380:	dd000415 	stw	r20,16(sp)
    f384:	dcc00315 	stw	r19,12(sp)
    f388:	dfc00815 	stw	ra,32(sp)
    f38c:	dd800615 	stw	r22,24(sp)
    f390:	dc800215 	stw	r18,8(sp)
    f394:	dc400115 	stw	r17,4(sp)
    f398:	dc000015 	stw	r16,0(sp)
    f39c:	2029883a 	mov	r20,r4
    f3a0:	282b883a 	mov	r21,r5
    f3a4:	04c00044 	movi	r19,1
    f3a8:	bc805217 	ldw	r18,328(r23)
    f3ac:	90000d26 	beq	r18,zero,f3e4 <__call_exitprocs+0x78>
    f3b0:	94000117 	ldw	r16,4(r18)
    f3b4:	847fffc4 	addi	r17,r16,-1
    f3b8:	88000a16 	blt	r17,zero,f3e4 <__call_exitprocs+0x78>
    f3bc:	84000044 	addi	r16,r16,1
    f3c0:	802090ba 	slli	r16,r16,2
    f3c4:	9421883a 	add	r16,r18,r16
    f3c8:	a8001126 	beq	r21,zero,f410 <__call_exitprocs+0xa4>
    f3cc:	80804017 	ldw	r2,256(r16)
    f3d0:	15400f26 	beq	r2,r21,f410 <__call_exitprocs+0xa4>
    f3d4:	8c7fffc4 	addi	r17,r17,-1
    f3d8:	88bfffd8 	cmpnei	r2,r17,-1
    f3dc:	843fff04 	addi	r16,r16,-4
    f3e0:	103ff91e 	bne	r2,zero,f3c8 <__call_exitprocs+0x5c>
    f3e4:	dfc00817 	ldw	ra,32(sp)
    f3e8:	ddc00717 	ldw	r23,28(sp)
    f3ec:	dd800617 	ldw	r22,24(sp)
    f3f0:	dd400517 	ldw	r21,20(sp)
    f3f4:	dd000417 	ldw	r20,16(sp)
    f3f8:	dcc00317 	ldw	r19,12(sp)
    f3fc:	dc800217 	ldw	r18,8(sp)
    f400:	dc400117 	ldw	r17,4(sp)
    f404:	dc000017 	ldw	r16,0(sp)
    f408:	dec00904 	addi	sp,sp,36
    f40c:	f800283a 	ret
    f410:	90800117 	ldw	r2,4(r18)
    f414:	81800017 	ldw	r6,0(r16)
    f418:	10bfffc4 	addi	r2,r2,-1
    f41c:	14401526 	beq	r2,r17,f474 <__call_exitprocs+0x108>
    f420:	80000015 	stw	zero,0(r16)
    f424:	303feb26 	beq	r6,zero,f3d4 <__call_exitprocs+0x68>
    f428:	9c46983a 	sll	r3,r19,r17
    f42c:	90806217 	ldw	r2,392(r18)
    f430:	95800117 	ldw	r22,4(r18)
    f434:	1884703a 	and	r2,r3,r2
    f438:	1000061e 	bne	r2,zero,f454 <__call_exitprocs+0xe8>
    f43c:	303ee83a 	callr	r6
    f440:	90800117 	ldw	r2,4(r18)
    f444:	15bfd81e 	bne	r2,r22,f3a8 <__call_exitprocs+0x3c>
    f448:	b8805217 	ldw	r2,328(r23)
    f44c:	14bfe126 	beq	r2,r18,f3d4 <__call_exitprocs+0x68>
    f450:	003fd506 	br	f3a8 <__call_exitprocs+0x3c>
    f454:	90806317 	ldw	r2,396(r18)
    f458:	81002017 	ldw	r4,128(r16)
    f45c:	1886703a 	and	r3,r3,r2
    f460:	1800061e 	bne	r3,zero,f47c <__call_exitprocs+0x110>
    f464:	200b883a 	mov	r5,r4
    f468:	a009883a 	mov	r4,r20
    f46c:	303ee83a 	callr	r6
    f470:	003ff306 	br	f440 <__call_exitprocs+0xd4>
    f474:	94400115 	stw	r17,4(r18)
    f478:	003fea06 	br	f424 <__call_exitprocs+0xb8>
    f47c:	303ee83a 	callr	r6
    f480:	003fef06 	br	f440 <__call_exitprocs+0xd4>

0000f484 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    f484:	defffd04 	addi	sp,sp,-12
    f488:	df000215 	stw	fp,8(sp)
    f48c:	df000204 	addi	fp,sp,8
    f490:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    f494:	0001883a 	nop
    f498:	e0bffe17 	ldw	r2,-8(fp)
    f49c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    f4a0:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    f4a4:	10000226 	beq	r2,zero,f4b0 <_exit+0x2c>
    ALT_SIM_FAIL();
    f4a8:	002af070 	cmpltui	zero,zero,43969
    f4ac:	00000106 	br	f4b4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    f4b0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    f4b4:	003fff06 	br	f4b4 <_exit+0x30>
